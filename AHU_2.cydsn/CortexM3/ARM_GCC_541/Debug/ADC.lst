ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ADC_GainCompensation,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  23              		.type	ADC_GainCompensation, %function
  24              	ADC_GainCompensation:
  25              	.LFB21:
  26              		.file 1 "Generated_Source\\PSoC5\\ADC.c"
   1:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/ADC.c **** * File Name: ADC.c
   3:Generated_Source\PSoC5/ADC.c **** * Version 3.30
   4:Generated_Source\PSoC5/ADC.c **** *
   5:Generated_Source\PSoC5/ADC.c **** * Description:
   6:Generated_Source\PSoC5/ADC.c **** *  This file provides the source code to the API for the Delta-Sigma ADC
   7:Generated_Source\PSoC5/ADC.c **** *  Component.
   8:Generated_Source\PSoC5/ADC.c **** *
   9:Generated_Source\PSoC5/ADC.c **** * Note:
  10:Generated_Source\PSoC5/ADC.c **** *
  11:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
  12:Generated_Source\PSoC5/ADC.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/ADC.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/ADC.c **** 
  18:Generated_Source\PSoC5/ADC.c **** #include "ADC.h"
  19:Generated_Source\PSoC5/ADC.c **** 
  20:Generated_Source\PSoC5/ADC.c **** #if(ADC_DEFAULT_INTERNAL_CLK)
  21:Generated_Source\PSoC5/ADC.c ****     #include "ADC_theACLK.h"
  22:Generated_Source\PSoC5/ADC.c **** #endif /* ADC_DEFAULT_INTERNAL_CLK */
  23:Generated_Source\PSoC5/ADC.c **** 
  24:Generated_Source\PSoC5/ADC.c **** #include "ADC_Ext_CP_Clk.h"
  25:Generated_Source\PSoC5/ADC.c **** 
  26:Generated_Source\PSoC5/ADC.c **** #if(ADC_DEFAULT_INPUT_MODE)
  27:Generated_Source\PSoC5/ADC.c ****     #include "ADC_AMux.h"
  28:Generated_Source\PSoC5/ADC.c **** #endif /* ADC_DEFAULT_INPUT_MODE */
  29:Generated_Source\PSoC5/ADC.c **** 
  30:Generated_Source\PSoC5/ADC.c **** 
  31:Generated_Source\PSoC5/ADC.c **** /***************************************
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 2


  32:Generated_Source\PSoC5/ADC.c **** * Global data allocation
  33:Generated_Source\PSoC5/ADC.c **** ***************************************/
  34:Generated_Source\PSoC5/ADC.c **** 
  35:Generated_Source\PSoC5/ADC.c **** /* Software flag for checking conversion completed or not */
  36:Generated_Source\PSoC5/ADC.c **** volatile uint8 ADC_convDone = 0u;
  37:Generated_Source\PSoC5/ADC.c **** 
  38:Generated_Source\PSoC5/ADC.c **** /* Software flag to stop conversion for single sample conversion mode
  39:Generated_Source\PSoC5/ADC.c **** *   with resolution above 16 bits 
  40:Generated_Source\PSoC5/ADC.c **** */
  41:Generated_Source\PSoC5/ADC.c **** volatile uint8 ADC_stopConversion = 0u;
  42:Generated_Source\PSoC5/ADC.c **** 
  43:Generated_Source\PSoC5/ADC.c **** /* To run the initialization block only at the start up */
  44:Generated_Source\PSoC5/ADC.c **** uint8 ADC_initVar = 0u;
  45:Generated_Source\PSoC5/ADC.c **** 
  46:Generated_Source\PSoC5/ADC.c **** /* To check whether ADC started or not before switching the configuration */
  47:Generated_Source\PSoC5/ADC.c **** volatile uint8 ADC_started = 0u;
  48:Generated_Source\PSoC5/ADC.c **** 
  49:Generated_Source\PSoC5/ADC.c **** /* Flag to hold ADC config number. By default active config is 1. */
  50:Generated_Source\PSoC5/ADC.c **** volatile uint8 ADC_Config = 1u;
  51:Generated_Source\PSoC5/ADC.c **** 
  52:Generated_Source\PSoC5/ADC.c **** volatile int32 ADC_Offset = 0;
  53:Generated_Source\PSoC5/ADC.c **** volatile int32 ADC_CountsPerVolt;
  54:Generated_Source\PSoC5/ADC.c **** 
  55:Generated_Source\PSoC5/ADC.c **** 
  56:Generated_Source\PSoC5/ADC.c **** /***************************************
  57:Generated_Source\PSoC5/ADC.c **** * Local data allocation
  58:Generated_Source\PSoC5/ADC.c **** ***************************************/
  59:Generated_Source\PSoC5/ADC.c **** 
  60:Generated_Source\PSoC5/ADC.c **** /* The array with precalculated gain compensation coefficients */
  61:Generated_Source\PSoC5/ADC.c **** static ADC_GCOR_STRUCT ADC_gcor[ADC_DEFAULT_NUM_CONFIGS];
  62:Generated_Source\PSoC5/ADC.c **** 
  63:Generated_Source\PSoC5/ADC.c **** 
  64:Generated_Source\PSoC5/ADC.c **** 
  65:Generated_Source\PSoC5/ADC.c **** /***************************************
  66:Generated_Source\PSoC5/ADC.c **** * Forward function references
  67:Generated_Source\PSoC5/ADC.c **** ***************************************/
  68:Generated_Source\PSoC5/ADC.c **** static void ADC_InitConfig(uint8 config) ;
  69:Generated_Source\PSoC5/ADC.c **** static void ADC_GainCompensation(uint8 inputRange, uint16 idealDecGain, uint16 idealOddDecGain, 
  70:Generated_Source\PSoC5/ADC.c ****                             uint8 resolution, uint8 config) ;
  71:Generated_Source\PSoC5/ADC.c **** static void ADC_SetDSMRef0Reg(uint8 value) ;
  72:Generated_Source\PSoC5/ADC.c **** 
  73:Generated_Source\PSoC5/ADC.c **** 
  74:Generated_Source\PSoC5/ADC.c **** /******************************************************************************
  75:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_Init
  76:Generated_Source\PSoC5/ADC.c **** *******************************************************************************
  77:Generated_Source\PSoC5/ADC.c **** *
  78:Generated_Source\PSoC5/ADC.c **** * Summary:
  79:Generated_Source\PSoC5/ADC.c **** *  Initialize component's parameters to the parameters set by user in the
  80:Generated_Source\PSoC5/ADC.c **** *  customizer of the component placed onto schematic. Usually called in
  81:Generated_Source\PSoC5/ADC.c **** * ADC_Start().
  82:Generated_Source\PSoC5/ADC.c **** *
  83:Generated_Source\PSoC5/ADC.c **** *
  84:Generated_Source\PSoC5/ADC.c **** * Parameters:
  85:Generated_Source\PSoC5/ADC.c **** *  None
  86:Generated_Source\PSoC5/ADC.c **** *
  87:Generated_Source\PSoC5/ADC.c **** * Return:
  88:Generated_Source\PSoC5/ADC.c **** *  None
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 3


  89:Generated_Source\PSoC5/ADC.c **** *
  90:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
  91:Generated_Source\PSoC5/ADC.c **** void ADC_Init(void) 
  92:Generated_Source\PSoC5/ADC.c **** {
  93:Generated_Source\PSoC5/ADC.c **** 
  94:Generated_Source\PSoC5/ADC.c ****     ADC_Config = 1u;
  95:Generated_Source\PSoC5/ADC.c ****     ADC_convDone = 0u;
  96:Generated_Source\PSoC5/ADC.c **** 
  97:Generated_Source\PSoC5/ADC.c ****     ADC_Ext_CP_Clk_SetMode(CYCLK_DUTY);
  98:Generated_Source\PSoC5/ADC.c **** 
  99:Generated_Source\PSoC5/ADC.c ****     /* This is only valid if there is an internal clock */
 100:Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_INTERNAL_CLK)
 101:Generated_Source\PSoC5/ADC.c ****         ADC_theACLK_SetMode(CYCLK_DUTY);
 102:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_INTERNAL_CLK */
 103:Generated_Source\PSoC5/ADC.c **** 
 104:Generated_Source\PSoC5/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
 105:Generated_Source\PSoC5/ADC.c ****         /* Set interrupt priority */
 106:Generated_Source\PSoC5/ADC.c ****         CyIntSetPriority(ADC_INTC_NUMBER, ADC_INTC_PRIOR_NUMBER);
 107:Generated_Source\PSoC5/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 108:Generated_Source\PSoC5/ADC.c **** 
 109:Generated_Source\PSoC5/ADC.c ****     /* Init static registers with common configuration */
 110:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_DEM0_REG    = ADC_CFG1_DSM_DEM0;
 111:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_DEM1_REG    = ADC_CFG1_DSM_DEM1;
 112:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_MISC_REG    = ADC_CFG1_DSM_MISC;
 113:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CLK_REG    |= ADC_CFG1_DSM_CLK;
 114:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_REF1_REG    = ADC_CFG1_DSM_REF1;
 115:Generated_Source\PSoC5/ADC.c **** 
 116:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_OUT0_REG    = ADC_CFG1_DSM_OUT0;
 117:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_OUT1_REG    = ADC_CFG1_DSM_OUT1;
 118:Generated_Source\PSoC5/ADC.c **** 
 119:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR0_REG     = ADC_CFG1_DSM_CR0;
 120:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR1_REG     = ADC_CFG1_DSM_CR1;
 121:Generated_Source\PSoC5/ADC.c **** #if(ADC_MI_ENABLE != 0u) /* Enable Modulator Input */
 122:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR3_REG     |= ADC_DSM_MODBIT_EN;
 123:Generated_Source\PSoC5/ADC.c **** #else
 124:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR3_REG     = ADC_CFG1_DSM_CR3;
 125:Generated_Source\PSoC5/ADC.c **** #endif /* ADC_MI_ENABLE != 0u*/    
 126:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR8_REG     = ADC_CFG1_DSM_CR8;
 127:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR9_REG     = ADC_CFG1_DSM_CR9;
 128:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR13_REG    = ADC_CFG1_DSM_CR13;
 129:Generated_Source\PSoC5/ADC.c **** 
 130:Generated_Source\PSoC5/ADC.c ****     ADC_DEC_SR_REG      = ADC_CFG1_DEC_SR;
 131:Generated_Source\PSoC5/ADC.c **** 
 132:Generated_Source\PSoC5/ADC.c ****     /* Calculate Gain compensation coefficients for all configurations */
 133:Generated_Source\PSoC5/ADC.c ****     ADC_GainCompensation(ADC_CFG1_INPUT_RANGE,
 134:Generated_Source\PSoC5/ADC.c ****                                       ADC_CFG1_IDEAL_DEC_GAIN,
 135:Generated_Source\PSoC5/ADC.c ****                                       ADC_CFG1_IDEAL_ODDDEC_GAIN,
 136:Generated_Source\PSoC5/ADC.c ****                                       ADC_CFG1_RESOLUTION,
 137:Generated_Source\PSoC5/ADC.c ****                                       ADC_CFG1);
 138:Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_NUM_CONFIGS > 1)
 139:Generated_Source\PSoC5/ADC.c ****         ADC_GainCompensation(ADC_CFG2_INPUT_RANGE,
 140:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG2_IDEAL_DEC_GAIN,
 141:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG2_IDEAL_ODDDEC_GAIN,
 142:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG2_RESOLUTION,
 143:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG2);
 144:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_NUM_CONFIGS > 1 */
 145:Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_NUM_CONFIGS > 2)
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 4


 146:Generated_Source\PSoC5/ADC.c ****         ADC_GainCompensation(ADC_CFG3_INPUT_RANGE,
 147:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG3_IDEAL_DEC_GAIN,
 148:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG3_IDEAL_ODDDEC_GAIN,
 149:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG3_RESOLUTION,
 150:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG3);
 151:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_NUM_CONFIGS > 2 */
 152:Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_NUM_CONFIGS > 3)
 153:Generated_Source\PSoC5/ADC.c ****         ADC_GainCompensation(ADC_CFG4_INPUT_RANGE,
 154:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG4_IDEAL_DEC_GAIN,
 155:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG4_IDEAL_ODDDEC_GAIN,
 156:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG4_RESOLUTION,
 157:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG4);
 158:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_NUM_CONFIGS > 3 */
 159:Generated_Source\PSoC5/ADC.c **** 
 160:Generated_Source\PSoC5/ADC.c ****     /* Set GCOR register for config1 */
 161:Generated_Source\PSoC5/ADC.c ****     ADC_DEC_GVAL_REG = ADC_gcor[ADC_Config - 1u].gval;
 162:Generated_Source\PSoC5/ADC.c ****     CY_SET_REG16(ADC_DEC_GCOR_16B_PTR, ADC_gcor[ADC_Config - 1u].gcor);
 163:Generated_Source\PSoC5/ADC.c **** 
 164:Generated_Source\PSoC5/ADC.c ****     /* Initialize the registers with default customizer settings for config1 */
 165:Generated_Source\PSoC5/ADC.c ****     ADC_InitConfig(ADC_Config);
 166:Generated_Source\PSoC5/ADC.c **** }
 167:Generated_Source\PSoC5/ADC.c **** 
 168:Generated_Source\PSoC5/ADC.c **** 
 169:Generated_Source\PSoC5/ADC.c **** /******************************************************************************
 170:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_Enable
 171:Generated_Source\PSoC5/ADC.c **** *******************************************************************************
 172:Generated_Source\PSoC5/ADC.c **** *
 173:Generated_Source\PSoC5/ADC.c **** * Summary:
 174:Generated_Source\PSoC5/ADC.c **** *  Enables the ADC DelSig block operation.
 175:Generated_Source\PSoC5/ADC.c **** *
 176:Generated_Source\PSoC5/ADC.c **** * Parameters:
 177:Generated_Source\PSoC5/ADC.c **** *  None
 178:Generated_Source\PSoC5/ADC.c **** *
 179:Generated_Source\PSoC5/ADC.c **** * Return:
 180:Generated_Source\PSoC5/ADC.c **** *  None
 181:Generated_Source\PSoC5/ADC.c **** *
 182:Generated_Source\PSoC5/ADC.c **** * Side Effects: 
 183:Generated_Source\PSoC5/ADC.c **** *  Enables internal interrupt.
 184:Generated_Source\PSoC5/ADC.c **** *
 185:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 186:Generated_Source\PSoC5/ADC.c **** void ADC_Enable(void) 
 187:Generated_Source\PSoC5/ADC.c **** {
 188:Generated_Source\PSoC5/ADC.c **** 	uint8 config;
 189:Generated_Source\PSoC5/ADC.c ****     uint8 enableInterrupts;
 190:Generated_Source\PSoC5/ADC.c ****     enableInterrupts = CyEnterCriticalSection();
 191:Generated_Source\PSoC5/ADC.c **** 
 192:Generated_Source\PSoC5/ADC.c ****     /* Read volatile variable to the local variable */
 193:Generated_Source\PSoC5/ADC.c ****     config = ADC_Config;
 194:Generated_Source\PSoC5/ADC.c ****     
 195:Generated_Source\PSoC5/ADC.c ****     /* Enable active mode power for ADC */
 196:Generated_Source\PSoC5/ADC.c ****     ADC_PWRMGR_DEC_REG |= ADC_ACT_PWR_DEC_EN;
 197:Generated_Source\PSoC5/ADC.c ****     ADC_PWRMGR_DSM_REG |= ADC_ACT_PWR_DSM_EN;
 198:Generated_Source\PSoC5/ADC.c **** 
 199:Generated_Source\PSoC5/ADC.c ****      /* Enable alternative active mode power for ADC */
 200:Generated_Source\PSoC5/ADC.c ****     ADC_STBY_PWRMGR_DEC_REG |= ADC_STBY_PWR_DEC_EN;
 201:Generated_Source\PSoC5/ADC.c ****     ADC_STBY_PWRMGR_DSM_REG |= ADC_STBY_PWR_DSM_EN;
 202:Generated_Source\PSoC5/ADC.c **** 
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 5


 203:Generated_Source\PSoC5/ADC.c ****     /* Disable PRES, Enable power to VCMBUF0, REFBUF0 and REFBUF1, enable PRES */
 204:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR4_REG |= ADC_IGNORE_PRESA1;
 205:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR5_REG |= ADC_IGNORE_PRESA2;
 206:Generated_Source\PSoC5/ADC.c **** 
 207:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR17_REG |= (ADC_DSM_EN_BUF_VREF | ADC_DSM_EN_BUF_VCM);
 208:Generated_Source\PSoC5/ADC.c **** 
 209:Generated_Source\PSoC5/ADC.c ****     /* Code to disable the REFBUF0 if reference chosen is External ref */
 210:Generated_Source\PSoC5/ADC.c ****     #if (((ADC_CFG1_REFERENCE == ADC_EXT_REF_ON_P03) || \
 211:Generated_Source\PSoC5/ADC.c ****           (ADC_CFG1_REFERENCE == ADC_EXT_REF_ON_P32)) || \
 212:Generated_Source\PSoC5/ADC.c ****          ((ADC_DEFAULT_NUM_CONFIGS > 1) && \
 213:Generated_Source\PSoC5/ADC.c ****           ((ADC_CFG2_REFERENCE == ADC_EXT_REF_ON_P03) ||  \
 214:Generated_Source\PSoC5/ADC.c ****            (ADC_CFG2_REFERENCE == ADC_EXT_REF_ON_P32))) || \
 215:Generated_Source\PSoC5/ADC.c ****          ((ADC_DEFAULT_NUM_CONFIGS > 2) && \
 216:Generated_Source\PSoC5/ADC.c ****           ((ADC_CFG3_REFERENCE == ADC_EXT_REF_ON_P03) ||  \
 217:Generated_Source\PSoC5/ADC.c ****            (ADC_CFG3_REFERENCE == ADC_EXT_REF_ON_P32))) || \
 218:Generated_Source\PSoC5/ADC.c ****          ((ADC_DEFAULT_NUM_CONFIGS > 3) && \
 219:Generated_Source\PSoC5/ADC.c ****           ((ADC_CFG4_REFERENCE == ADC_EXT_REF_ON_P03) || \
 220:Generated_Source\PSoC5/ADC.c ****            (ADC_CFG4_REFERENCE == ADC_EXT_REF_ON_P32))))
 221:Generated_Source\PSoC5/ADC.c ****         if (((config == 1u) &&
 222:Generated_Source\PSoC5/ADC.c ****             ((ADC_CFG1_REFERENCE == ADC_EXT_REF_ON_P03) ||
 223:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG1_REFERENCE == ADC_EXT_REF_ON_P32))) ||
 224:Generated_Source\PSoC5/ADC.c ****             ((config == 2u) &&
 225:Generated_Source\PSoC5/ADC.c ****             ((ADC_CFG2_REFERENCE == ADC_EXT_REF_ON_P03) ||
 226:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_REFERENCE == ADC_EXT_REF_ON_P32))) ||
 227:Generated_Source\PSoC5/ADC.c ****             ((config == 3u) &&
 228:Generated_Source\PSoC5/ADC.c ****             ((ADC_CFG3_REFERENCE == ADC_EXT_REF_ON_P03) ||
 229:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_REFERENCE == ADC_EXT_REF_ON_P32))) ||
 230:Generated_Source\PSoC5/ADC.c ****             ((config == 4u) &&
 231:Generated_Source\PSoC5/ADC.c ****             ((ADC_CFG4_REFERENCE == ADC_EXT_REF_ON_P03) ||
 232:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_REFERENCE == ADC_EXT_REF_ON_P32))))
 233:Generated_Source\PSoC5/ADC.c ****         {
 234:Generated_Source\PSoC5/ADC.c ****             /* Disable the REFBUF0 */
 235:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR17_REG &= (uint8)~ADC_DSM_EN_BUF_VREF;
 236:Generated_Source\PSoC5/ADC.c ****         }
 237:Generated_Source\PSoC5/ADC.c ****     #endif /* External ref */
 238:Generated_Source\PSoC5/ADC.c **** 
 239:Generated_Source\PSoC5/ADC.c ****     #if (((ADC_CFG1_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF) || \
 240:Generated_Source\PSoC5/ADC.c ****          ((ADC_DEFAULT_NUM_CONFIGS > 1) && \
 241:Generated_Source\PSoC5/ADC.c ****           (ADC_CFG2_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF)) || \
 242:Generated_Source\PSoC5/ADC.c ****          ((ADC_DEFAULT_NUM_CONFIGS > 2) && \
 243:Generated_Source\PSoC5/ADC.c ****           (ADC_CFG3_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF)) || \
 244:Generated_Source\PSoC5/ADC.c ****          ((ADC_DEFAULT_NUM_CONFIGS > 3) && \
 245:Generated_Source\PSoC5/ADC.c ****           (ADC_CFG4_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF))))
 246:Generated_Source\PSoC5/ADC.c ****         if(((config == 1u) &&
 247:Generated_Source\PSoC5/ADC.c ****             (ADC_CFG1_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF) &&
 248:Generated_Source\PSoC5/ADC.c ****             ((ADC_CFG1_REFERENCE != ADC_EXT_REF_ON_P03) &&
 249:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG1_REFERENCE != ADC_EXT_REF_ON_P32))) ||
 250:Generated_Source\PSoC5/ADC.c ****              ((config == 2u) &&
 251:Generated_Source\PSoC5/ADC.c ****               (ADC_CFG2_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF) &&
 252:Generated_Source\PSoC5/ADC.c ****              ((ADC_CFG2_REFERENCE != ADC_EXT_REF_ON_P03) &&
 253:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_REFERENCE != ADC_EXT_REF_ON_P32))) ||
 254:Generated_Source\PSoC5/ADC.c ****              ((config == 3u) &&
 255:Generated_Source\PSoC5/ADC.c ****               (ADC_CFG3_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF) &&
 256:Generated_Source\PSoC5/ADC.c ****              ((ADC_CFG3_REFERENCE != ADC_EXT_REF_ON_P03) &&
 257:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_REFERENCE != ADC_EXT_REF_ON_P32))) ||
 258:Generated_Source\PSoC5/ADC.c ****              ((config == 4u) &&
 259:Generated_Source\PSoC5/ADC.c ****               (ADC_CFG4_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF) &&
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 6


 260:Generated_Source\PSoC5/ADC.c ****              ((ADC_CFG4_REFERENCE != ADC_EXT_REF_ON_P03) &&
 261:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_REFERENCE != ADC_EXT_REF_ON_P32))))
 262:Generated_Source\PSoC5/ADC.c ****         {
 263:Generated_Source\PSoC5/ADC.c ****             /* Enable the REFBUF1 */
 264:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_REF0_REG |= ADC_DSM_EN_BUF_VREF_INN;
 265:Generated_Source\PSoC5/ADC.c ****         }
 266:Generated_Source\PSoC5/ADC.c ****     #endif /* VSSA_TO_2VREF */
 267:Generated_Source\PSoC5/ADC.c ****     if(config != 0u)
 268:Generated_Source\PSoC5/ADC.c ****     {
 269:Generated_Source\PSoC5/ADC.c ****         /* Suppress compiler warning */
 270:Generated_Source\PSoC5/ADC.c ****     }
 271:Generated_Source\PSoC5/ADC.c **** 
 272:Generated_Source\PSoC5/ADC.c ****     /* Wait for 3 microseconds */
 273:Generated_Source\PSoC5/ADC.c ****     CyDelayUs(ADC_PRES_DELAY_TIME);
 274:Generated_Source\PSoC5/ADC.c **** 
 275:Generated_Source\PSoC5/ADC.c ****     /* Enable the press circuit */
 276:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR4_REG &= (uint8)~ADC_IGNORE_PRESA1;
 277:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR5_REG &= (uint8)~ADC_IGNORE_PRESA2;
 278:Generated_Source\PSoC5/ADC.c **** 
 279:Generated_Source\PSoC5/ADC.c ****     /* Enable negative pumps for DSM  */
 280:Generated_Source\PSoC5/ADC.c ****     ADC_PUMP_CR1_REG  |= ( ADC_PUMP_CR1_CLKSEL | ADC_PUMP_CR1_FORCE );
 281:Generated_Source\PSoC5/ADC.c **** 
 282:Generated_Source\PSoC5/ADC.c ****     /* Enable Modulator Chopping if required */
 283:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR2_REG = ADC_CFG1_DSM_CR2;
 284:Generated_Source\PSoC5/ADC.c **** 
 285:Generated_Source\PSoC5/ADC.c ****     /* This is only valid if there is an internal clock */
 286:Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_INTERNAL_CLK)
 287:Generated_Source\PSoC5/ADC.c ****         ADC_PWRMGR_CLK_REG |= ADC_ACT_PWR_CLK_EN;
 288:Generated_Source\PSoC5/ADC.c ****         ADC_STBY_PWRMGR_CLK_REG |= ADC_STBY_PWR_CLK_EN;
 289:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_INTERNAL_CLK */
 290:Generated_Source\PSoC5/ADC.c **** 
 291:Generated_Source\PSoC5/ADC.c ****     /* Enable the active and alternate active power for charge pump clock */
 292:Generated_Source\PSoC5/ADC.c ****     ADC_PWRMGR_CHARGE_PUMP_CLK_REG |= ADC_ACT_PWR_CHARGE_PUMP_CLK_EN;
 293:Generated_Source\PSoC5/ADC.c ****     ADC_STBY_PWRMGR_CHARGE_PUMP_CLK_REG |= ADC_STBY_PWR_CHARGE_PUMP_CLK_EN;
 294:Generated_Source\PSoC5/ADC.c **** 
 295:Generated_Source\PSoC5/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
 296:Generated_Source\PSoC5/ADC.c ****         /* Clear a pending interrupt */
 297:Generated_Source\PSoC5/ADC.c ****         CyIntClearPending(ADC_INTC_NUMBER);
 298:Generated_Source\PSoC5/ADC.c ****         /* Enable interrupt */
 299:Generated_Source\PSoC5/ADC.c ****         CyIntEnable(ADC_INTC_NUMBER);
 300:Generated_Source\PSoC5/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 301:Generated_Source\PSoC5/ADC.c **** 
 302:Generated_Source\PSoC5/ADC.c ****     CyExitCriticalSection(enableInterrupts);
 303:Generated_Source\PSoC5/ADC.c **** 
 304:Generated_Source\PSoC5/ADC.c **** }
 305:Generated_Source\PSoC5/ADC.c **** 
 306:Generated_Source\PSoC5/ADC.c **** 
 307:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 308:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_Start
 309:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 310:Generated_Source\PSoC5/ADC.c **** *
 311:Generated_Source\PSoC5/ADC.c **** * Summary:
 312:Generated_Source\PSoC5/ADC.c **** *  Performs all required initialization for this component and enables
 313:Generated_Source\PSoC5/ADC.c **** *  the power. It configure all the register the first time it is called.
 314:Generated_Source\PSoC5/ADC.c **** *  Subsequent calls of the Start function only enable the ADC and turn
 315:Generated_Source\PSoC5/ADC.c **** *  on the power. If multiple configurations are selected, it will
 316:Generated_Source\PSoC5/ADC.c **** *  configure the ADC for configuration 1 by default, unless the
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 7


 317:Generated_Source\PSoC5/ADC.c **** *  ADC_SelectConfiguration( ) function has been called to change
 318:Generated_Source\PSoC5/ADC.c **** *  the default setting.
 319:Generated_Source\PSoC5/ADC.c **** *
 320:Generated_Source\PSoC5/ADC.c **** * Parameters:
 321:Generated_Source\PSoC5/ADC.c **** *  None
 322:Generated_Source\PSoC5/ADC.c **** *
 323:Generated_Source\PSoC5/ADC.c **** * Return:
 324:Generated_Source\PSoC5/ADC.c **** *  None
 325:Generated_Source\PSoC5/ADC.c **** *
 326:Generated_Source\PSoC5/ADC.c **** * Global variables:
 327:Generated_Source\PSoC5/ADC.c **** *  ADC_initVar:  Used to check the initial configuration,
 328:Generated_Source\PSoC5/ADC.c **** *  modified when this function is called for the first time.
 329:Generated_Source\PSoC5/ADC.c **** *
 330:Generated_Source\PSoC5/ADC.c **** * Side Effects: 
 331:Generated_Source\PSoC5/ADC.c **** *  Enables internal interrupt.
 332:Generated_Source\PSoC5/ADC.c **** *
 333:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 334:Generated_Source\PSoC5/ADC.c **** void ADC_Start(void) 
 335:Generated_Source\PSoC5/ADC.c **** {
 336:Generated_Source\PSoC5/ADC.c ****     if(ADC_initVar == 0u)
 337:Generated_Source\PSoC5/ADC.c ****     {
 338:Generated_Source\PSoC5/ADC.c ****         if(ADC_started == 0u)
 339:Generated_Source\PSoC5/ADC.c ****         {
 340:Generated_Source\PSoC5/ADC.c ****             ADC_Init();
 341:Generated_Source\PSoC5/ADC.c ****         }
 342:Generated_Source\PSoC5/ADC.c ****         ADC_initVar = 1u;
 343:Generated_Source\PSoC5/ADC.c ****     }
 344:Generated_Source\PSoC5/ADC.c **** 
 345:Generated_Source\PSoC5/ADC.c ****     /* Enable the ADC */
 346:Generated_Source\PSoC5/ADC.c ****     ADC_Enable();
 347:Generated_Source\PSoC5/ADC.c **** }
 348:Generated_Source\PSoC5/ADC.c **** 
 349:Generated_Source\PSoC5/ADC.c **** 
 350:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 351:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_Stop
 352:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 353:Generated_Source\PSoC5/ADC.c **** *
 354:Generated_Source\PSoC5/ADC.c **** * Summary:
 355:Generated_Source\PSoC5/ADC.c **** *  This function stops and powers down the ADC component and the internal
 356:Generated_Source\PSoC5/ADC.c **** *  clock if the external clock is not selected. If an external clock is
 357:Generated_Source\PSoC5/ADC.c **** *  used, it is up to the designer to power down the external clock it
 358:Generated_Source\PSoC5/ADC.c **** *  required.
 359:Generated_Source\PSoC5/ADC.c **** *
 360:Generated_Source\PSoC5/ADC.c **** * Parameters:
 361:Generated_Source\PSoC5/ADC.c **** *  None
 362:Generated_Source\PSoC5/ADC.c **** *
 363:Generated_Source\PSoC5/ADC.c **** * Return:
 364:Generated_Source\PSoC5/ADC.c **** *  None
 365:Generated_Source\PSoC5/ADC.c **** *
 366:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 367:Generated_Source\PSoC5/ADC.c **** void ADC_Stop(void) 
 368:Generated_Source\PSoC5/ADC.c **** {
 369:Generated_Source\PSoC5/ADC.c ****     uint8 enableInterrupts;
 370:Generated_Source\PSoC5/ADC.c ****     enableInterrupts = CyEnterCriticalSection();
 371:Generated_Source\PSoC5/ADC.c **** 
 372:Generated_Source\PSoC5/ADC.c ****     /* Stop conversions */
 373:Generated_Source\PSoC5/ADC.c ****     ADC_DEC_CR_REG &= (uint8)~ADC_DEC_START_CONV;
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 8


 374:Generated_Source\PSoC5/ADC.c ****     ADC_DEC_SR_REG |=  ADC_DEC_INTR_CLEAR;
 375:Generated_Source\PSoC5/ADC.c **** 
 376:Generated_Source\PSoC5/ADC.c ****     /* Disable PRES, Disable power to VCMBUF0, REFBUF0 and REFBUF1,
 377:Generated_Source\PSoC5/ADC.c ****        enable PRES */
 378:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR4_REG |= ADC_IGNORE_PRESA1;
 379:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR5_REG |= ADC_IGNORE_PRESA2;
 380:Generated_Source\PSoC5/ADC.c **** 
 381:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR17_REG &= (uint8)~(ADC_DSM_EN_BUF_VREF | ADC_DSM_EN_BUF_VCM);
 382:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_REF0_REG &= (uint8)~ADC_DSM_EN_BUF_VREF_INN;
 383:Generated_Source\PSoC5/ADC.c **** 
 384:Generated_Source\PSoC5/ADC.c ****     /* Wait for 3 microseconds. */
 385:Generated_Source\PSoC5/ADC.c ****     CyDelayUs(ADC_PRES_DELAY_TIME);
 386:Generated_Source\PSoC5/ADC.c **** 
 387:Generated_Source\PSoC5/ADC.c ****     /* Enable the press circuit */
 388:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR4_REG &= (uint8)~ADC_IGNORE_PRESA1;
 389:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR5_REG &= (uint8)~ADC_IGNORE_PRESA2;
 390:Generated_Source\PSoC5/ADC.c **** 
 391:Generated_Source\PSoC5/ADC.c ****     /* Disable power to the ADC */
 392:Generated_Source\PSoC5/ADC.c ****     ADC_PWRMGR_DSM_REG &= (uint8)~ADC_ACT_PWR_DSM_EN;
 393:Generated_Source\PSoC5/ADC.c **** 
 394:Generated_Source\PSoC5/ADC.c ****     /* Disable power to Decimator block */
 395:Generated_Source\PSoC5/ADC.c ****     ADC_PWRMGR_DEC_REG &= (uint8)~ADC_ACT_PWR_DEC_EN;
 396:Generated_Source\PSoC5/ADC.c **** 
 397:Generated_Source\PSoC5/ADC.c ****     /* Disable alternative active power to the ADC */
 398:Generated_Source\PSoC5/ADC.c ****     ADC_STBY_PWRMGR_DEC_REG &= (uint8)~ADC_STBY_PWR_DEC_EN;
 399:Generated_Source\PSoC5/ADC.c ****     ADC_STBY_PWRMGR_DSM_REG &= (uint8)~ADC_STBY_PWR_DSM_EN;
 400:Generated_Source\PSoC5/ADC.c **** 
 401:Generated_Source\PSoC5/ADC.c ****    /* Disable negative pumps for DSM  */
 402:Generated_Source\PSoC5/ADC.c ****     ADC_PUMP_CR1_REG &= (uint8)~(ADC_PUMP_CR1_CLKSEL | ADC_PUMP_CR1_FORCE );
 403:Generated_Source\PSoC5/ADC.c **** 
 404:Generated_Source\PSoC5/ADC.c ****     /* This is only valid if there is an internal clock */
 405:Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_INTERNAL_CLK)
 406:Generated_Source\PSoC5/ADC.c ****         ADC_PWRMGR_CLK_REG &= (uint8)~ADC_ACT_PWR_CLK_EN;
 407:Generated_Source\PSoC5/ADC.c ****         ADC_STBY_PWRMGR_CLK_REG &= (uint8)~ADC_STBY_PWR_CLK_EN;
 408:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_INTERNAL_CLK */
 409:Generated_Source\PSoC5/ADC.c **** 
 410:Generated_Source\PSoC5/ADC.c ****     /* Disable Modulator Chopping */
 411:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR2_REG &= (uint8)~ADC_DSM_MOD_CHOP_EN;
 412:Generated_Source\PSoC5/ADC.c ****     /* Disable power to charge pump clock */
 413:Generated_Source\PSoC5/ADC.c ****     ADC_PWRMGR_CHARGE_PUMP_CLK_REG &= (uint8)~ADC_ACT_PWR_CHARGE_PUMP_CLK_EN;
 414:Generated_Source\PSoC5/ADC.c ****     ADC_STBY_PWRMGR_CHARGE_PUMP_CLK_REG &= (uint8)~ADC_STBY_PWR_CHARGE_PUMP_CLK_EN;
 415:Generated_Source\PSoC5/ADC.c ****     
 416:Generated_Source\PSoC5/ADC.c ****     CyExitCriticalSection(enableInterrupts);
 417:Generated_Source\PSoC5/ADC.c **** }
 418:Generated_Source\PSoC5/ADC.c **** 
 419:Generated_Source\PSoC5/ADC.c **** 
 420:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 421:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_SetBufferGain
 422:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 423:Generated_Source\PSoC5/ADC.c **** *
 424:Generated_Source\PSoC5/ADC.c **** * Summary:
 425:Generated_Source\PSoC5/ADC.c **** *  Sets input buffer gain.
 426:Generated_Source\PSoC5/ADC.c **** *
 427:Generated_Source\PSoC5/ADC.c **** * Parameters:
 428:Generated_Source\PSoC5/ADC.c **** *  gain:  Two bit value to select a gain of 1, 2, 4, or 8.
 429:Generated_Source\PSoC5/ADC.c **** *
 430:Generated_Source\PSoC5/ADC.c **** * Return:
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 9


 431:Generated_Source\PSoC5/ADC.c **** *  None
 432:Generated_Source\PSoC5/ADC.c **** *
 433:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 434:Generated_Source\PSoC5/ADC.c **** void ADC_SetBufferGain(uint8 gain) 
 435:Generated_Source\PSoC5/ADC.c **** {
 436:Generated_Source\PSoC5/ADC.c ****     uint8 tmpReg;
 437:Generated_Source\PSoC5/ADC.c ****     tmpReg = ADC_DSM_BUF1_REG & (uint8)~ADC_DSM_GAIN_MASK;
 438:Generated_Source\PSoC5/ADC.c ****     tmpReg |= (uint8)(gain << ADC_DSM_GAIN_SHIFT) & ADC_DSM_GAIN_MASK;
 439:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_BUF1_REG = tmpReg;
 440:Generated_Source\PSoC5/ADC.c **** }
 441:Generated_Source\PSoC5/ADC.c **** 
 442:Generated_Source\PSoC5/ADC.c **** 
 443:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 444:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_SetCoherency
 445:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 446:Generated_Source\PSoC5/ADC.c **** *
 447:Generated_Source\PSoC5/ADC.c **** * Summary:
 448:Generated_Source\PSoC5/ADC.c **** *  This function allows the user to change which of the ADC's 3 word
 449:Generated_Source\PSoC5/ADC.c **** *  result will trigger a coherency unlock. The ADC's result will not be
 450:Generated_Source\PSoC5/ADC.c **** *  updated until the set byte is read either by the ADC or DMA. 
 451:Generated_Source\PSoC5/ADC.c **** *  By default the LSB is the coherency byte for right alignment data format. 
 452:Generated_Source\PSoC5/ADC.c **** *  The middle or high byte is set automatically depend on left alignment 
 453:Generated_Source\PSoC5/ADC.c **** *  configuration for DMA data transfer.
 454:Generated_Source\PSoC5/ADC.c **** *  If DMA or if a custom API requires different byte to be read the last,
 455:Generated_Source\PSoC5/ADC.c **** *  this API should be used to set the last byte of the ADC result that is read. 
 456:Generated_Source\PSoC5/ADC.c **** *  If a multibyte read is performed either by DMA or the ARM processor, the
 457:Generated_Source\PSoC5/ADC.c **** *  coherency can be set to any byte in the last word read.
 458:Generated_Source\PSoC5/ADC.c **** *
 459:Generated_Source\PSoC5/ADC.c **** * Parameters:
 460:Generated_Source\PSoC5/ADC.c **** *  coherency:  Two bit value to set the coherency bit.
 461:Generated_Source\PSoC5/ADC.c **** *           00-Coherency checking off
 462:Generated_Source\PSoC5/ADC.c **** *           01-low byte is key byte
 463:Generated_Source\PSoC5/ADC.c **** *           02-middle byte is the key byte
 464:Generated_Source\PSoC5/ADC.c **** *           03-high byte is the key byte
 465:Generated_Source\PSoC5/ADC.c **** *
 466:Generated_Source\PSoC5/ADC.c **** * Return:
 467:Generated_Source\PSoC5/ADC.c **** *  None
 468:Generated_Source\PSoC5/ADC.c **** *
 469:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 470:Generated_Source\PSoC5/ADC.c **** void ADC_SetCoherency(uint8 coherency) 
 471:Generated_Source\PSoC5/ADC.c **** {
 472:Generated_Source\PSoC5/ADC.c ****     uint8 tmpReg;
 473:Generated_Source\PSoC5/ADC.c **** 
 474:Generated_Source\PSoC5/ADC.c ****     tmpReg = ADC_DEC_COHER_REG & (uint8)~ADC_DEC_SAMP_KEY_MASK;
 475:Generated_Source\PSoC5/ADC.c ****     tmpReg |= coherency & ADC_DEC_SAMP_KEY_MASK;
 476:Generated_Source\PSoC5/ADC.c ****     ADC_DEC_COHER_REG = tmpReg;
 477:Generated_Source\PSoC5/ADC.c **** }
 478:Generated_Source\PSoC5/ADC.c **** 
 479:Generated_Source\PSoC5/ADC.c **** 
 480:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 481:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_SetGCOR
 482:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 483:Generated_Source\PSoC5/ADC.c **** *
 484:Generated_Source\PSoC5/ADC.c **** * Summary:
 485:Generated_Source\PSoC5/ADC.c **** *  Calculates a new GCOR value and writes it into the GCOR register. 
 486:Generated_Source\PSoC5/ADC.c **** *  The GCOR value is a 16-bit value that represents a gain of 0 to 2. 
 487:Generated_Source\PSoC5/ADC.c **** *  The ADC result is multiplied by this value before it is placed in the ADC 
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 10


 488:Generated_Source\PSoC5/ADC.c **** *  output registers. The numerical format for the GCOR value is:
 489:Generated_Source\PSoC5/ADC.c **** *  0x0000 -> 0.000
 490:Generated_Source\PSoC5/ADC.c **** *  0x8000 -> 1.000
 491:Generated_Source\PSoC5/ADC.c **** *  0xFFFF -> 1.99997
 492:Generated_Source\PSoC5/ADC.c **** *  When executing the function, the old GCOR value is multiplied by
 493:Generated_Source\PSoC5/ADC.c **** *  gainAdjust and reloaded into the GCOR register.
 494:Generated_Source\PSoC5/ADC.c **** *
 495:Generated_Source\PSoC5/ADC.c **** * Parameters:
 496:Generated_Source\PSoC5/ADC.c **** *  gainAdjust:  floating point value to set GCOR registers.
 497:Generated_Source\PSoC5/ADC.c **** *
 498:Generated_Source\PSoC5/ADC.c **** * Return:
 499:Generated_Source\PSoC5/ADC.c **** *  uint8: 0 - if GCOR value is within the expected range.
 500:Generated_Source\PSoC5/ADC.c **** *         1 - the correction value is outside GCOR value range of
 501:Generated_Source\PSoC5/ADC.c **** *             0.00 to 1.9999.
 502:Generated_Source\PSoC5/ADC.c **** *
 503:Generated_Source\PSoC5/ADC.c **** * Side Effects:  The GVAL register is set to the amount of valid bits in the
 504:Generated_Source\PSoC5/ADC.c **** *                GCOR  register minus one. If GVAL is 15 (0x0F), all 16 bits
 505:Generated_Source\PSoC5/ADC.c **** *                of the GCOR registers will be valid. If for example GVAL is
 506:Generated_Source\PSoC5/ADC.c **** *                11 (0x0B) only 12 bits will be valid. The least 4 bits will
 507:Generated_Source\PSoC5/ADC.c **** *                be lost when the GCOR value is shifted 4 places to the right.
 508:Generated_Source\PSoC5/ADC.c **** *
 509:Generated_Source\PSoC5/ADC.c **** ******************************************************************************/
 510:Generated_Source\PSoC5/ADC.c **** uint8 ADC_SetGCOR(float32 gainAdjust) 
 511:Generated_Source\PSoC5/ADC.c **** {
 512:Generated_Source\PSoC5/ADC.c ****     uint16 tmpReg;
 513:Generated_Source\PSoC5/ADC.c ****     uint8 status;
 514:Generated_Source\PSoC5/ADC.c ****     float32 tmpValue;
 515:Generated_Source\PSoC5/ADC.c **** 
 516:Generated_Source\PSoC5/ADC.c ****     tmpReg = ADC_gcor[ADC_Config - 1u].gcor;
 517:Generated_Source\PSoC5/ADC.c ****     tmpValue = ((float32)tmpReg / (float32)ADC_IDEAL_GAIN_CONST);
 518:Generated_Source\PSoC5/ADC.c ****     tmpValue = tmpValue * gainAdjust;
 519:Generated_Source\PSoC5/ADC.c **** 
 520:Generated_Source\PSoC5/ADC.c ****     if (tmpValue > 1.9999)
 521:Generated_Source\PSoC5/ADC.c ****     {
 522:Generated_Source\PSoC5/ADC.c ****         status = 1u;
 523:Generated_Source\PSoC5/ADC.c ****     }
 524:Generated_Source\PSoC5/ADC.c ****     else
 525:Generated_Source\PSoC5/ADC.c ****     {
 526:Generated_Source\PSoC5/ADC.c ****         tmpValue *= (float32)ADC_IDEAL_GAIN_CONST;
 527:Generated_Source\PSoC5/ADC.c **** 		tmpReg = (uint16)tmpValue;
 528:Generated_Source\PSoC5/ADC.c ****         CY_SET_REG16(ADC_DEC_GCOR_16B_PTR, tmpReg);
 529:Generated_Source\PSoC5/ADC.c ****         /* Update gain array to be used by SelectConfiguration() API */
 530:Generated_Source\PSoC5/ADC.c ****        ADC_gcor[ADC_Config - 1u].gcor = tmpReg;
 531:Generated_Source\PSoC5/ADC.c **** 
 532:Generated_Source\PSoC5/ADC.c ****         status = 0u;
 533:Generated_Source\PSoC5/ADC.c **** 
 534:Generated_Source\PSoC5/ADC.c ****     }
 535:Generated_Source\PSoC5/ADC.c ****     return(status);
 536:Generated_Source\PSoC5/ADC.c **** }
 537:Generated_Source\PSoC5/ADC.c **** 
 538:Generated_Source\PSoC5/ADC.c **** 
 539:Generated_Source\PSoC5/ADC.c **** /******************************************************************************
 540:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_ReadGCOR
 541:Generated_Source\PSoC5/ADC.c **** *******************************************************************************
 542:Generated_Source\PSoC5/ADC.c **** *
 543:Generated_Source\PSoC5/ADC.c **** * Summary:
 544:Generated_Source\PSoC5/ADC.c **** *  This API returns the current GCOR register value, normalized based on the
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 11


 545:Generated_Source\PSoC5/ADC.c **** *  GVAL register settings.
 546:Generated_Source\PSoC5/ADC.c **** *  For example, if the GCOR value is 0x0812 and the GVAL register is set to 
 547:Generated_Source\PSoC5/ADC.c **** *  11 (0x0B) then the returned value will be shifted by for bits to the left.
 548:Generated_Source\PSoC5/ADC.c **** *  (Actual GCOR value = 0x0812, returned value = 0x8120)
 549:Generated_Source\PSoC5/ADC.c **** *
 550:Generated_Source\PSoC5/ADC.c **** * Parameters:
 551:Generated_Source\PSoC5/ADC.c **** *  None
 552:Generated_Source\PSoC5/ADC.c **** *
 553:Generated_Source\PSoC5/ADC.c **** * Return:
 554:Generated_Source\PSoC5/ADC.c **** *  uint16:  Normalized GCOR value.
 555:Generated_Source\PSoC5/ADC.c **** *
 556:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 557:Generated_Source\PSoC5/ADC.c **** uint16 ADC_ReadGCOR(void) 
 558:Generated_Source\PSoC5/ADC.c **** {
 559:Generated_Source\PSoC5/ADC.c ****     uint8 gValue;
 560:Generated_Source\PSoC5/ADC.c ****     uint16 gcorValue;
 561:Generated_Source\PSoC5/ADC.c **** 
 562:Generated_Source\PSoC5/ADC.c ****     gValue = ADC_DEC_GVAL_REG;
 563:Generated_Source\PSoC5/ADC.c ****     gcorValue = CY_GET_REG16(ADC_DEC_GCOR_16B_PTR);
 564:Generated_Source\PSoC5/ADC.c **** 
 565:Generated_Source\PSoC5/ADC.c ****     if (gValue < ADC_MAX_GVAL)
 566:Generated_Source\PSoC5/ADC.c ****     {
 567:Generated_Source\PSoC5/ADC.c ****         gcorValue <<= ADC_MAX_GVAL - gValue;
 568:Generated_Source\PSoC5/ADC.c ****     }
 569:Generated_Source\PSoC5/ADC.c **** 
 570:Generated_Source\PSoC5/ADC.c ****     return gcorValue;
 571:Generated_Source\PSoC5/ADC.c **** }
 572:Generated_Source\PSoC5/ADC.c **** 
 573:Generated_Source\PSoC5/ADC.c **** 
 574:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 575:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_StartConvert
 576:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 577:Generated_Source\PSoC5/ADC.c **** *
 578:Generated_Source\PSoC5/ADC.c **** * Summary:
 579:Generated_Source\PSoC5/ADC.c **** *  Forces the ADC to initiate a conversion. If in the "Single Sample"
 580:Generated_Source\PSoC5/ADC.c **** *  mode, one conversion will be performed then the ADC will halt. If in
 581:Generated_Source\PSoC5/ADC.c **** *  one of the other three conversion modes, the ADC will run
 582:Generated_Source\PSoC5/ADC.c **** *  continuously until the ADC_Stop() or ADC_StopConvert() is called.
 583:Generated_Source\PSoC5/ADC.c **** *
 584:Generated_Source\PSoC5/ADC.c **** * Parameters:
 585:Generated_Source\PSoC5/ADC.c **** *  None
 586:Generated_Source\PSoC5/ADC.c **** *
 587:Generated_Source\PSoC5/ADC.c **** * Return:
 588:Generated_Source\PSoC5/ADC.c **** *  None
 589:Generated_Source\PSoC5/ADC.c **** *
 590:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 591:Generated_Source\PSoC5/ADC.c **** void ADC_StartConvert(void) 
 592:Generated_Source\PSoC5/ADC.c **** {
 593:Generated_Source\PSoC5/ADC.c ****     /* Start the conversion */
 594:Generated_Source\PSoC5/ADC.c ****     ADC_DEC_CR_REG |= ADC_DEC_START_CONV;
 595:Generated_Source\PSoC5/ADC.c **** }
 596:Generated_Source\PSoC5/ADC.c **** 
 597:Generated_Source\PSoC5/ADC.c **** 
 598:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 599:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_StopConvert
 600:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 601:Generated_Source\PSoC5/ADC.c **** *
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 12


 602:Generated_Source\PSoC5/ADC.c **** * Summary:
 603:Generated_Source\PSoC5/ADC.c **** *  Forces the ADC to stop all conversions. If the ADC is in the middle of a
 604:Generated_Source\PSoC5/ADC.c **** *  conversion, the ADC will be reset and not provide a result for that partial
 605:Generated_Source\PSoC5/ADC.c **** *  conversion.
 606:Generated_Source\PSoC5/ADC.c **** *
 607:Generated_Source\PSoC5/ADC.c **** * Parameters:
 608:Generated_Source\PSoC5/ADC.c **** *  None
 609:Generated_Source\PSoC5/ADC.c **** *
 610:Generated_Source\PSoC5/ADC.c **** * Return:
 611:Generated_Source\PSoC5/ADC.c **** *  None
 612:Generated_Source\PSoC5/ADC.c **** *
 613:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 614:Generated_Source\PSoC5/ADC.c **** void ADC_StopConvert(void) 
 615:Generated_Source\PSoC5/ADC.c **** {
 616:Generated_Source\PSoC5/ADC.c ****     /* Stop all conversions */
 617:Generated_Source\PSoC5/ADC.c ****     ADC_DEC_CR_REG &= (uint8)~ADC_DEC_START_CONV;
 618:Generated_Source\PSoC5/ADC.c **** }
 619:Generated_Source\PSoC5/ADC.c **** 
 620:Generated_Source\PSoC5/ADC.c **** 
 621:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 622:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_IsEndConversion
 623:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 624:Generated_Source\PSoC5/ADC.c **** *
 625:Generated_Source\PSoC5/ADC.c **** * Summary:
 626:Generated_Source\PSoC5/ADC.c **** *  Checks the status that the most recently started conversion has completed.
 627:Generated_Source\PSoC5/ADC.c **** *  The status is cleared by any of ADC_GetResult8(), ADC_GetResult16() or 
 628:Generated_Source\PSoC5/ADC.c **** *  ADC_GetResult32() API.
 629:Generated_Source\PSoC5/ADC.c **** *  This function provides the programmer with two options. In one mode this 
 630:Generated_Source\PSoC5/ADC.c **** *  function immediately returns with the conversion status. In the other mode,
 631:Generated_Source\PSoC5/ADC.c **** *  the function does not return (blocking) until the conversion has completed.
 632:Generated_Source\PSoC5/ADC.c **** *
 633:Generated_Source\PSoC5/ADC.c **** * Parameters:
 634:Generated_Source\PSoC5/ADC.c **** *  retMode: Check conversion return mode. See the following table for options.
 635:Generated_Source\PSoC5/ADC.c **** *   ADC_RETURN_STATUS -   Immediately returns conversion result
 636:Generated_Source\PSoC5/ADC.c **** *                                      status.
 637:Generated_Source\PSoC5/ADC.c **** *   ADC_WAIT_FOR_RESULT - Does not return until ADC conversion
 638:Generated_Source\PSoC5/ADC.c **** *                                      is complete.
 639:Generated_Source\PSoC5/ADC.c **** *
 640:Generated_Source\PSoC5/ADC.c **** * Return:
 641:Generated_Source\PSoC5/ADC.c **** *  If a nonzero value is returned, the last conversion has completed.
 642:Generated_Source\PSoC5/ADC.c **** *  If the returned value is zero, the ADC is still calculating the last result.
 643:Generated_Source\PSoC5/ADC.c **** *
 644:Generated_Source\PSoC5/ADC.c **** * Global variables:
 645:Generated_Source\PSoC5/ADC.c **** *  ADC_convDone:  Used to check whether conversion is complete
 646:Generated_Source\PSoC5/ADC.c **** *  or not for single sample mode with resolution is above 16
 647:Generated_Source\PSoC5/ADC.c **** *
 648:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 649:Generated_Source\PSoC5/ADC.c **** uint8 ADC_IsEndConversion(uint8 retMode) 
 650:Generated_Source\PSoC5/ADC.c **** {
 651:Generated_Source\PSoC5/ADC.c ****     uint8 status;
 652:Generated_Source\PSoC5/ADC.c **** 
 653:Generated_Source\PSoC5/ADC.c ****     do
 654:Generated_Source\PSoC5/ADC.c ****     {
 655:Generated_Source\PSoC5/ADC.c ****         /* Check for stop convert if conversion mode is Single Sample with
 656:Generated_Source\PSoC5/ADC.c ****         *   resolution above 16 bit
 657:Generated_Source\PSoC5/ADC.c ****         */
 658:Generated_Source\PSoC5/ADC.c ****         if(ADC_stopConversion != 0u)
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 13


 659:Generated_Source\PSoC5/ADC.c ****         {
 660:Generated_Source\PSoC5/ADC.c ****             status = ADC_convDone;
 661:Generated_Source\PSoC5/ADC.c ****         }
 662:Generated_Source\PSoC5/ADC.c ****         else
 663:Generated_Source\PSoC5/ADC.c ****         {
 664:Generated_Source\PSoC5/ADC.c ****             status = ADC_DEC_SR_REG & ADC_DEC_CONV_DONE;
 665:Generated_Source\PSoC5/ADC.c ****         }
 666:Generated_Source\PSoC5/ADC.c ****     }while((status != ADC_DEC_CONV_DONE) && (retMode == ADC_WAIT_FOR_RESULT));
 667:Generated_Source\PSoC5/ADC.c **** 
 668:Generated_Source\PSoC5/ADC.c ****     return(status);
 669:Generated_Source\PSoC5/ADC.c **** }
 670:Generated_Source\PSoC5/ADC.c **** 
 671:Generated_Source\PSoC5/ADC.c **** 
 672:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 673:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_GetResult8
 674:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 675:Generated_Source\PSoC5/ADC.c **** *
 676:Generated_Source\PSoC5/ADC.c **** * Summary:
 677:Generated_Source\PSoC5/ADC.c **** *  This function returns the result of an 8-bit conversion. If the
 678:Generated_Source\PSoC5/ADC.c **** *  resolution is set greater than 8-bits, the LSB of the result will be
 679:Generated_Source\PSoC5/ADC.c **** *  returned. When the ADC is configured for 8-bit single ended mode,
 680:Generated_Source\PSoC5/ADC.c **** *  the ADC_GetResult16() function should be used instead. This
 681:Generated_Source\PSoC5/ADC.c **** *  function returns only signed 8-bit values. The maximum positive
 682:Generated_Source\PSoC5/ADC.c **** *  signed 8-bit value is 127, but in singled ended 8-bit mode, the
 683:Generated_Source\PSoC5/ADC.c **** *  maximum positive value is 255.
 684:Generated_Source\PSoC5/ADC.c **** *
 685:Generated_Source\PSoC5/ADC.c **** * Parameters:
 686:Generated_Source\PSoC5/ADC.c **** *  None
 687:Generated_Source\PSoC5/ADC.c **** *
 688:Generated_Source\PSoC5/ADC.c **** * Return:
 689:Generated_Source\PSoC5/ADC.c **** *  int8: The LSB of the last ADC conversion.
 690:Generated_Source\PSoC5/ADC.c **** *
 691:Generated_Source\PSoC5/ADC.c **** * Global variables:
 692:Generated_Source\PSoC5/ADC.c **** *  ADC_convDone:  Cleared in single sample mode with resolution
 693:Generated_Source\PSoC5/ADC.c **** *                              above 16 bits
 694:Generated_Source\PSoC5/ADC.c **** *
 695:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 696:Generated_Source\PSoC5/ADC.c **** int8 ADC_GetResult8( void ) 
 697:Generated_Source\PSoC5/ADC.c **** {
 698:Generated_Source\PSoC5/ADC.c ****     int8 result;
 699:Generated_Source\PSoC5/ADC.c ****     uint8 coherency;
 700:Generated_Source\PSoC5/ADC.c **** 
 701:Generated_Source\PSoC5/ADC.c ****     /* Read active coherency configuration */
 702:Generated_Source\PSoC5/ADC.c ****     coherency = ADC_DEC_COHER_REG & ADC_DEC_SAMP_KEY_MASK;
 703:Generated_Source\PSoC5/ADC.c **** 
 704:Generated_Source\PSoC5/ADC.c ****     result = (int8)ADC_DEC_SAMP_REG;
 705:Generated_Source\PSoC5/ADC.c **** 
 706:Generated_Source\PSoC5/ADC.c ****     if(coherency == ADC_DEC_SAMP_KEY_MID)
 707:Generated_Source\PSoC5/ADC.c ****     {   /* Dummy read of the middle byte to unlock the coherency */
 708:Generated_Source\PSoC5/ADC.c ****         (void)ADC_DEC_SAMPM_REG;
 709:Generated_Source\PSoC5/ADC.c ****     }
 710:Generated_Source\PSoC5/ADC.c ****     else  if(coherency == ADC_DEC_SAMP_KEY_HIGH)
 711:Generated_Source\PSoC5/ADC.c ****     {   /* Dummy read of the MSB byte to unlock the coherency */
 712:Generated_Source\PSoC5/ADC.c ****         (void)ADC_DEC_SAMPH_REG;
 713:Generated_Source\PSoC5/ADC.c ****     }
 714:Generated_Source\PSoC5/ADC.c ****     else /*No action required for other coherency */
 715:Generated_Source\PSoC5/ADC.c ****     {
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 14


 716:Generated_Source\PSoC5/ADC.c ****     }
 717:Generated_Source\PSoC5/ADC.c ****     /* Clear conversion complete status in Single Sample mode with resolution above 16 bit */
 718:Generated_Source\PSoC5/ADC.c ****     if(ADC_stopConversion != 0u)
 719:Generated_Source\PSoC5/ADC.c ****     {
 720:Generated_Source\PSoC5/ADC.c ****         ADC_convDone = 0u;
 721:Generated_Source\PSoC5/ADC.c ****     }
 722:Generated_Source\PSoC5/ADC.c ****     return (result);
 723:Generated_Source\PSoC5/ADC.c **** }
 724:Generated_Source\PSoC5/ADC.c **** 
 725:Generated_Source\PSoC5/ADC.c **** 
 726:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 727:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_GetResult16
 728:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 729:Generated_Source\PSoC5/ADC.c **** *
 730:Generated_Source\PSoC5/ADC.c **** * Summary:
 731:Generated_Source\PSoC5/ADC.c **** *  Returns a 16-bit result for a conversion with a result that has a
 732:Generated_Source\PSoC5/ADC.c **** *  resolution of 8 to 16 bits. If the resolution is set greater than 16-bits,
 733:Generated_Source\PSoC5/ADC.c **** *  it will return the 16 least significant bits of the result. When the ADC
 734:Generated_Source\PSoC5/ADC.c **** *  is configured for 16-bit single ended mode, the ADC_GetResult32()
 735:Generated_Source\PSoC5/ADC.c **** *  function should be used instead. This function returns only signed
 736:Generated_Source\PSoC5/ADC.c **** *  16-bit result, which allows a maximum positive value of 32767, not 65535.
 737:Generated_Source\PSoC5/ADC.c **** *  This function supports different coherency settings.
 738:Generated_Source\PSoC5/ADC.c **** *
 739:Generated_Source\PSoC5/ADC.c **** * Parameters:
 740:Generated_Source\PSoC5/ADC.c **** *   void
 741:Generated_Source\PSoC5/ADC.c **** *
 742:Generated_Source\PSoC5/ADC.c **** * Return:
 743:Generated_Source\PSoC5/ADC.c **** *  int16:  ADC result.
 744:Generated_Source\PSoC5/ADC.c **** *
 745:Generated_Source\PSoC5/ADC.c **** * Global variables:
 746:Generated_Source\PSoC5/ADC.c **** *  ADC_convDone:  Cleared in single sample mode with resolution
 747:Generated_Source\PSoC5/ADC.c **** *                              above 16 bits
 748:Generated_Source\PSoC5/ADC.c **** *
 749:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 750:Generated_Source\PSoC5/ADC.c **** int16 ADC_GetResult16(void) 
 751:Generated_Source\PSoC5/ADC.c **** {
 752:Generated_Source\PSoC5/ADC.c ****     uint16 result;
 753:Generated_Source\PSoC5/ADC.c ****     uint8 coherency;
 754:Generated_Source\PSoC5/ADC.c **** 
 755:Generated_Source\PSoC5/ADC.c ****     /* Read active coherency configuration */
 756:Generated_Source\PSoC5/ADC.c ****     coherency = ADC_DEC_COHER_REG & ADC_DEC_SAMP_KEY_MASK;
 757:Generated_Source\PSoC5/ADC.c **** 
 758:Generated_Source\PSoC5/ADC.c ****     if(coherency <= ADC_DEC_SAMP_KEY_LOW)
 759:Generated_Source\PSoC5/ADC.c ****     {   /*  Use default method to read result registers i.e. LSB byte read at the end*/
 760:Generated_Source\PSoC5/ADC.c ****         #if (CY_PSOC3)
 761:Generated_Source\PSoC5/ADC.c ****             result = ADC_DEC_SAMPM_REG;
 762:Generated_Source\PSoC5/ADC.c ****             result = (result << 8u) | ADC_DEC_SAMP_REG;
 763:Generated_Source\PSoC5/ADC.c ****         #else
 764:Generated_Source\PSoC5/ADC.c ****             result = (CY_GET_REG16(ADC_DEC_SAMP_16B_PTR));
 765:Generated_Source\PSoC5/ADC.c ****         #endif /* CY_PSOC3 */
 766:Generated_Source\PSoC5/ADC.c ****     }
 767:Generated_Source\PSoC5/ADC.c ****     else /* MID or HIGH */
 768:Generated_Source\PSoC5/ADC.c ****     {   /* Read middle byte at the end */
 769:Generated_Source\PSoC5/ADC.c ****         #if (CY_PSOC3)
 770:Generated_Source\PSoC5/ADC.c ****             result = (CY_GET_REG16(ADC_DEC_SAMP_16B_PTR));
 771:Generated_Source\PSoC5/ADC.c ****         #else
 772:Generated_Source\PSoC5/ADC.c ****             result = ADC_DEC_SAMP_REG;
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 15


 773:Generated_Source\PSoC5/ADC.c ****             result |=  (uint16)((uint16)ADC_DEC_SAMPM_REG << 8u);
 774:Generated_Source\PSoC5/ADC.c ****         #endif /* CY_PSOC3 */
 775:Generated_Source\PSoC5/ADC.c ****         if(coherency == ADC_DEC_SAMP_KEY_HIGH)
 776:Generated_Source\PSoC5/ADC.c ****         {   /* Dummy read of the MSB byte to unlock the coherency */
 777:Generated_Source\PSoC5/ADC.c ****             (void)ADC_DEC_SAMPH_REG;
 778:Generated_Source\PSoC5/ADC.c ****         }
 779:Generated_Source\PSoC5/ADC.c ****     }
 780:Generated_Source\PSoC5/ADC.c ****     /* Clear conversion complete status in Single Sample mode with resolution above 16 bit */
 781:Generated_Source\PSoC5/ADC.c ****     if(ADC_stopConversion != 0u)
 782:Generated_Source\PSoC5/ADC.c ****     {
 783:Generated_Source\PSoC5/ADC.c ****         ADC_convDone = 0u;
 784:Generated_Source\PSoC5/ADC.c ****     }
 785:Generated_Source\PSoC5/ADC.c **** 
 786:Generated_Source\PSoC5/ADC.c ****     return ((int16)result);
 787:Generated_Source\PSoC5/ADC.c **** }
 788:Generated_Source\PSoC5/ADC.c **** 
 789:Generated_Source\PSoC5/ADC.c **** 
 790:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 791:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_GetResult32
 792:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 793:Generated_Source\PSoC5/ADC.c **** *
 794:Generated_Source\PSoC5/ADC.c **** * Summary:
 795:Generated_Source\PSoC5/ADC.c **** *  Returns a 32-bit result for a conversion with a result that has a
 796:Generated_Source\PSoC5/ADC.c **** *  resolution of 8 to 20 bits.
 797:Generated_Source\PSoC5/ADC.c **** *  This function supports different coherency settings.
 798:Generated_Source\PSoC5/ADC.c **** *
 799:Generated_Source\PSoC5/ADC.c **** * Parameters:
 800:Generated_Source\PSoC5/ADC.c **** *  None
 801:Generated_Source\PSoC5/ADC.c **** *
 802:Generated_Source\PSoC5/ADC.c **** * Return:
 803:Generated_Source\PSoC5/ADC.c **** *  int32: Result of the last ADC conversion.
 804:Generated_Source\PSoC5/ADC.c **** *
 805:Generated_Source\PSoC5/ADC.c **** * Global variables:
 806:Generated_Source\PSoC5/ADC.c **** *  ADC_convDone:  Cleared in single sample mode with resolution
 807:Generated_Source\PSoC5/ADC.c **** *                              above 16 bits
 808:Generated_Source\PSoC5/ADC.c **** *
 809:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 810:Generated_Source\PSoC5/ADC.c **** int32 ADC_GetResult32(void) 
 811:Generated_Source\PSoC5/ADC.c **** {
 812:Generated_Source\PSoC5/ADC.c ****     uint32 result;
 813:Generated_Source\PSoC5/ADC.c ****     uint8 coherency;
 814:Generated_Source\PSoC5/ADC.c ****     #if (CY_PSOC3)
 815:Generated_Source\PSoC5/ADC.c **** 	    uint16 tmp;
 816:Generated_Source\PSoC5/ADC.c ****     #endif /* CY_PSOC3 */
 817:Generated_Source\PSoC5/ADC.c **** 
 818:Generated_Source\PSoC5/ADC.c ****     /* Read active coherency configuration */
 819:Generated_Source\PSoC5/ADC.c ****     coherency = ADC_DEC_COHER_REG & ADC_DEC_SAMP_KEY_MASK;
 820:Generated_Source\PSoC5/ADC.c **** 
 821:Generated_Source\PSoC5/ADC.c ****     if(coherency <= ADC_DEC_SAMP_KEY_LOW)
 822:Generated_Source\PSoC5/ADC.c ****     {   /*  Use default method to read result registers i.e. LSB byte read at the end*/
 823:Generated_Source\PSoC5/ADC.c ****         #if (CY_PSOC3)
 824:Generated_Source\PSoC5/ADC.c ****             result = ADC_DEC_SAMPH_REG;
 825:Generated_Source\PSoC5/ADC.c ****             if((result & 0x80u) != 0u)
 826:Generated_Source\PSoC5/ADC.c ****             {   /* Sign extend */
 827:Generated_Source\PSoC5/ADC.c ****                 result |= 0xFF00u;
 828:Generated_Source\PSoC5/ADC.c ****             }
 829:Generated_Source\PSoC5/ADC.c ****             result = (result << 8u) | ADC_DEC_SAMPM_REG;
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 16


 830:Generated_Source\PSoC5/ADC.c ****             result = (result << 8u) | ADC_DEC_SAMP_REG;
 831:Generated_Source\PSoC5/ADC.c ****         #else
 832:Generated_Source\PSoC5/ADC.c ****             result = CY_GET_REG16(ADC_DEC_SAMPH_16B_PTR);
 833:Generated_Source\PSoC5/ADC.c ****             result = (result << 16u) | (CY_GET_REG16(ADC_DEC_SAMP_16B_PTR));
 834:Generated_Source\PSoC5/ADC.c ****         #endif /* CY_PSOC3 */
 835:Generated_Source\PSoC5/ADC.c ****     }
 836:Generated_Source\PSoC5/ADC.c ****     else if(coherency == ADC_DEC_SAMP_KEY_MID)
 837:Generated_Source\PSoC5/ADC.c ****     {   /* Read middle byte at the end */
 838:Generated_Source\PSoC5/ADC.c ****         #if (CY_PSOC3)
 839:Generated_Source\PSoC5/ADC.c ****             result = ADC_DEC_SAMPH_REG;
 840:Generated_Source\PSoC5/ADC.c ****             if((result & 0x80u) != 0u)
 841:Generated_Source\PSoC5/ADC.c ****             {   /* Sign extend */
 842:Generated_Source\PSoC5/ADC.c ****                 result |= 0xFF00u;
 843:Generated_Source\PSoC5/ADC.c ****             }
 844:Generated_Source\PSoC5/ADC.c ****             result = (result << 16u) | (CY_GET_REG16(ADC_DEC_SAMP_16B_PTR));
 845:Generated_Source\PSoC5/ADC.c ****         #else
 846:Generated_Source\PSoC5/ADC.c ****             result = CY_GET_REG16(ADC_DEC_SAMPH_16B_PTR);
 847:Generated_Source\PSoC5/ADC.c ****             result = (result << 16u) | ADC_DEC_SAMP_REG;
 848:Generated_Source\PSoC5/ADC.c ****             result |=  (uint32)((uint32)ADC_DEC_SAMPM_REG << 8u);
 849:Generated_Source\PSoC5/ADC.c ****         #endif /* CY_PSOC3 */
 850:Generated_Source\PSoC5/ADC.c ****     }
 851:Generated_Source\PSoC5/ADC.c ****     else /*ADC_DEC_SAMP_KEY_HIGH */
 852:Generated_Source\PSoC5/ADC.c ****     {
 853:Generated_Source\PSoC5/ADC.c ****         /* Read MSB byte at the end */
 854:Generated_Source\PSoC5/ADC.c ****         #if (CY_PSOC3)
 855:Generated_Source\PSoC5/ADC.c ****             result = CY_GET_REG16(ADC_DEC_SAMP_16B_PTR);
 856:Generated_Source\PSoC5/ADC.c **** 			tmp = ADC_DEC_SAMPH_REG;
 857:Generated_Source\PSoC5/ADC.c ****             if((tmp & 0x80u) != 0u)
 858:Generated_Source\PSoC5/ADC.c ****             {   /* Sign extend */
 859:Generated_Source\PSoC5/ADC.c ****                 tmp |= 0xFF00u;
 860:Generated_Source\PSoC5/ADC.c ****             }
 861:Generated_Source\PSoC5/ADC.c ****             result |= (uint32)tmp << 16u;
 862:Generated_Source\PSoC5/ADC.c ****         #else
 863:Generated_Source\PSoC5/ADC.c ****             result = CY_GET_REG16(ADC_DEC_SAMP_16B_PTR);
 864:Generated_Source\PSoC5/ADC.c ****             result |= (uint32)((uint32)CY_GET_REG16(ADC_DEC_SAMPH_16B_PTR) << 16u);
 865:Generated_Source\PSoC5/ADC.c ****         #endif /* CY_PSOC3 */
 866:Generated_Source\PSoC5/ADC.c ****     }
 867:Generated_Source\PSoC5/ADC.c ****     /* Clear conversion complete status in Single Sample mode with resolution above 16 bit */
 868:Generated_Source\PSoC5/ADC.c ****     if(ADC_stopConversion != 0u)
 869:Generated_Source\PSoC5/ADC.c ****     {
 870:Generated_Source\PSoC5/ADC.c ****         ADC_convDone = 0u;
 871:Generated_Source\PSoC5/ADC.c ****     }
 872:Generated_Source\PSoC5/ADC.c **** 
 873:Generated_Source\PSoC5/ADC.c ****     return ((int32)result);
 874:Generated_Source\PSoC5/ADC.c **** }
 875:Generated_Source\PSoC5/ADC.c **** 
 876:Generated_Source\PSoC5/ADC.c **** 
 877:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 878:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_SetOffset
 879:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 880:Generated_Source\PSoC5/ADC.c **** *
 881:Generated_Source\PSoC5/ADC.c **** * Summary:
 882:Generated_Source\PSoC5/ADC.c **** *  Sets the ADC offset which is used by the functions ADC_CountsTo_uVolts, 
 883:Generated_Source\PSoC5/ADC.c **** *  ADC_CountsTo_mVolts, and ADC_CountsTo_Volts to subtract the offset from the 
 884:Generated_Source\PSoC5/ADC.c **** *  given reading before calculating the voltage conversion.
 885:Generated_Source\PSoC5/ADC.c **** *
 886:Generated_Source\PSoC5/ADC.c **** * Parameters:
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 17


 887:Generated_Source\PSoC5/ADC.c **** *  int32:  This value is a measured value when the inputs are shorted or 
 888:Generated_Source\PSoC5/ADC.c **** *          connected to the same input voltage.
 889:Generated_Source\PSoC5/ADC.c **** *
 890:Generated_Source\PSoC5/ADC.c **** * Return:
 891:Generated_Source\PSoC5/ADC.c **** *  None
 892:Generated_Source\PSoC5/ADC.c **** *
 893:Generated_Source\PSoC5/ADC.c **** * Global variables:
 894:Generated_Source\PSoC5/ADC.c **** *  ADC_Offset:  Modified to set the user provided offset. This
 895:Generated_Source\PSoC5/ADC.c **** *  variable is used for offset calibration purpose.
 896:Generated_Source\PSoC5/ADC.c **** *
 897:Generated_Source\PSoC5/ADC.c **** * Side Effects:
 898:Generated_Source\PSoC5/ADC.c **** *  Affects the ADC_CountsTo_Volts,
 899:Generated_Source\PSoC5/ADC.c **** *  ADC_CountsTo_mVolts, ADC_CountsTo_uVolts functions
 900:Generated_Source\PSoC5/ADC.c **** *  by subtracting the given offset.
 901:Generated_Source\PSoC5/ADC.c **** *
 902:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 903:Generated_Source\PSoC5/ADC.c **** void ADC_SetOffset(int32 offset) 
 904:Generated_Source\PSoC5/ADC.c **** {
 905:Generated_Source\PSoC5/ADC.c **** 
 906:Generated_Source\PSoC5/ADC.c ****     ADC_Offset = offset;
 907:Generated_Source\PSoC5/ADC.c **** }
 908:Generated_Source\PSoC5/ADC.c **** 
 909:Generated_Source\PSoC5/ADC.c **** 
 910:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 911:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_SetGain
 912:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 913:Generated_Source\PSoC5/ADC.c **** *
 914:Generated_Source\PSoC5/ADC.c **** * Summary:
 915:Generated_Source\PSoC5/ADC.c **** *  Sets the ADC gain in counts per volt for the voltage conversion
 916:Generated_Source\PSoC5/ADC.c **** *  functions below. This value is set by default by the reference and
 917:Generated_Source\PSoC5/ADC.c **** *  input range settings. It should only be used to further calibrate the
 918:Generated_Source\PSoC5/ADC.c **** *  ADC with a known input or if an external reference is used. This
 919:Generated_Source\PSoC5/ADC.c **** *  function may also be used to calibrate an entire signal chain, not
 920:Generated_Source\PSoC5/ADC.c **** *  just the ADC.
 921:Generated_Source\PSoC5/ADC.c **** *
 922:Generated_Source\PSoC5/ADC.c **** * Parameters:
 923:Generated_Source\PSoC5/ADC.c **** *  int32: ADC gain in counts per volt.
 924:Generated_Source\PSoC5/ADC.c **** *
 925:Generated_Source\PSoC5/ADC.c **** * Return:
 926:Generated_Source\PSoC5/ADC.c **** *  None
 927:Generated_Source\PSoC5/ADC.c **** *
 928:Generated_Source\PSoC5/ADC.c **** * Global variables:
 929:Generated_Source\PSoC5/ADC.c **** *  ADC_CountsPerVolt:  modified to set the ADC gain in counts
 930:Generated_Source\PSoC5/ADC.c **** *   per volt.
 931:Generated_Source\PSoC5/ADC.c **** *
 932:Generated_Source\PSoC5/ADC.c **** * Side Effects:
 933:Generated_Source\PSoC5/ADC.c **** *  Affects the ADC_CountsTo_Volts,
 934:Generated_Source\PSoC5/ADC.c **** *  ADC_CountsTo_mVolts, ADC_CountsTo_uVolts functions
 935:Generated_Source\PSoC5/ADC.c **** *  supplying the correct conversion between ADC counts and voltage.
 936:Generated_Source\PSoC5/ADC.c **** *
 937:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 938:Generated_Source\PSoC5/ADC.c **** void ADC_SetGain(int32 adcGain) 
 939:Generated_Source\PSoC5/ADC.c **** {
 940:Generated_Source\PSoC5/ADC.c ****     ADC_CountsPerVolt = adcGain;
 941:Generated_Source\PSoC5/ADC.c **** }
 942:Generated_Source\PSoC5/ADC.c **** 
 943:Generated_Source\PSoC5/ADC.c **** 
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 18


 944:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 945:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_CountsTo_mVolts
 946:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 947:Generated_Source\PSoC5/ADC.c **** *
 948:Generated_Source\PSoC5/ADC.c **** * Summary:
 949:Generated_Source\PSoC5/ADC.c **** *  Converts the ADC counts output to mVolts as a 16-bit integer. For
 950:Generated_Source\PSoC5/ADC.c **** *  example, if the ADC measured 0.534 volts, the return value would
 951:Generated_Source\PSoC5/ADC.c **** *  be 534 mVolts.
 952:Generated_Source\PSoC5/ADC.c **** *
 953:Generated_Source\PSoC5/ADC.c **** * Parameters:
 954:Generated_Source\PSoC5/ADC.c **** *  int32: adcCounts Result from the ADC conversion.
 955:Generated_Source\PSoC5/ADC.c **** *
 956:Generated_Source\PSoC5/ADC.c **** * Return:
 957:Generated_Source\PSoC5/ADC.c **** *  int16:  Result in mVolts
 958:Generated_Source\PSoC5/ADC.c **** *
 959:Generated_Source\PSoC5/ADC.c **** * Global variables:
 960:Generated_Source\PSoC5/ADC.c **** *  ADC_CountsPerVolt:  used to convert ADC counts to mVolts.
 961:Generated_Source\PSoC5/ADC.c **** *  ADC_Offset:  Used as the offset while converting ADC counts
 962:Generated_Source\PSoC5/ADC.c **** *   to mVolts.
 963:Generated_Source\PSoC5/ADC.c **** *
 964:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 965:Generated_Source\PSoC5/ADC.c **** int16 ADC_CountsTo_mVolts(int32 adcCounts) 
 966:Generated_Source\PSoC5/ADC.c **** {
 967:Generated_Source\PSoC5/ADC.c **** 
 968:Generated_Source\PSoC5/ADC.c ****     int16 mVolts;
 969:Generated_Source\PSoC5/ADC.c **** 
 970:Generated_Source\PSoC5/ADC.c ****     /* Convert adcCounts to the right align if left option selected */
 971:Generated_Source\PSoC5/ADC.c ****     #if(ADC_CFG1_DEC_DIV != 0)
 972:Generated_Source\PSoC5/ADC.c ****         if(ADC_Config == ADC_CFG1)
 973:Generated_Source\PSoC5/ADC.c ****         {
 974:Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG1_DEC_DIV;
 975:Generated_Source\PSoC5/ADC.c ****         }
 976:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_CFG1_DEC_DIV */
 977:Generated_Source\PSoC5/ADC.c ****     #if((ADC_CFG2_DEC_DIV != 0) && (ADC_DEFAULT_NUM_CONFIGS > 1))
 978:Generated_Source\PSoC5/ADC.c ****         if(ADC_Config == ADC_CFG2)
 979:Generated_Source\PSoC5/ADC.c ****         {
 980:Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG2_DEC_DIV;
 981:Generated_Source\PSoC5/ADC.c ****         }
 982:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_CFG2_DEC_DIV */
 983:Generated_Source\PSoC5/ADC.c ****     #if((ADC_CFG3_DEC_DIV != 0) && (ADC_DEFAULT_NUM_CONFIGS > 2))
 984:Generated_Source\PSoC5/ADC.c ****         if(ADC_Config == ADC_CFG3)
 985:Generated_Source\PSoC5/ADC.c ****         {
 986:Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG3_DEC_DIV;
 987:Generated_Source\PSoC5/ADC.c ****         }
 988:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_CFG2_DEC_DIV */
 989:Generated_Source\PSoC5/ADC.c ****     #if((ADC_CFG4_DEC_DIV != 0) && (ADC_DEFAULT_NUM_CONFIGS > 3))
 990:Generated_Source\PSoC5/ADC.c ****         if(ADC_Config == ADC_CFG4)
 991:Generated_Source\PSoC5/ADC.c ****         {
 992:Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG4_DEC_DIV;
 993:Generated_Source\PSoC5/ADC.c ****         }
 994:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_CFG2_DEC_DIV */
 995:Generated_Source\PSoC5/ADC.c **** 
 996:Generated_Source\PSoC5/ADC.c ****     /* Subtract ADC offset */
 997:Generated_Source\PSoC5/ADC.c ****     adcCounts -= ADC_Offset;
 998:Generated_Source\PSoC5/ADC.c **** 
 999:Generated_Source\PSoC5/ADC.c ****     mVolts = (int16)(( adcCounts * ADC_1MV_COUNTS ) / ADC_CountsPerVolt) ;
1000:Generated_Source\PSoC5/ADC.c **** 
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 19


1001:Generated_Source\PSoC5/ADC.c ****     return(mVolts);
1002:Generated_Source\PSoC5/ADC.c **** }
1003:Generated_Source\PSoC5/ADC.c **** 
1004:Generated_Source\PSoC5/ADC.c **** 
1005:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
1006:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_CountsTo_Volts
1007:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
1008:Generated_Source\PSoC5/ADC.c **** *
1009:Generated_Source\PSoC5/ADC.c **** * Summary:
1010:Generated_Source\PSoC5/ADC.c **** *  Converts the ADC output to Volts as a floating point number. For
1011:Generated_Source\PSoC5/ADC.c **** *  example, if the ADC measure a voltage of 1.2345 Volts, the
1012:Generated_Source\PSoC5/ADC.c **** *  returned result would be +1.2345 Volts.
1013:Generated_Source\PSoC5/ADC.c **** *
1014:Generated_Source\PSoC5/ADC.c **** * Parameters:
1015:Generated_Source\PSoC5/ADC.c **** *  int32 adcCounts:  Result from the ADC conversion.
1016:Generated_Source\PSoC5/ADC.c **** *
1017:Generated_Source\PSoC5/ADC.c **** * Return:
1018:Generated_Source\PSoC5/ADC.c **** *  float32: Result in Volts
1019:Generated_Source\PSoC5/ADC.c **** *
1020:Generated_Source\PSoC5/ADC.c **** * Global variables:
1021:Generated_Source\PSoC5/ADC.c **** *  ADC_CountsPerVolt:  used to convert to Volts.
1022:Generated_Source\PSoC5/ADC.c **** *  ADC_Offset:  Used as the offset while converting ADC counts
1023:Generated_Source\PSoC5/ADC.c **** *   to Volts.
1024:Generated_Source\PSoC5/ADC.c **** *
1025:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
1026:Generated_Source\PSoC5/ADC.c **** float32 ADC_CountsTo_Volts(int32 adcCounts) 
1027:Generated_Source\PSoC5/ADC.c **** {
1028:Generated_Source\PSoC5/ADC.c **** 
1029:Generated_Source\PSoC5/ADC.c ****     float32 Volts;
1030:Generated_Source\PSoC5/ADC.c **** 
1031:Generated_Source\PSoC5/ADC.c ****     /* Convert adcCounts to the right align if left option selected */
1032:Generated_Source\PSoC5/ADC.c ****     #if(ADC_CFG1_DEC_DIV != 0)
1033:Generated_Source\PSoC5/ADC.c ****         if(ADC_Config == ADC_CFG1)
1034:Generated_Source\PSoC5/ADC.c ****         {
1035:Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG1_DEC_DIV;
1036:Generated_Source\PSoC5/ADC.c ****         }
1037:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_CFG1_DEC_DIV */
1038:Generated_Source\PSoC5/ADC.c ****     #if((ADC_CFG2_DEC_DIV != 0) && (ADC_DEFAULT_NUM_CONFIGS > 1))
1039:Generated_Source\PSoC5/ADC.c ****         if(ADC_Config == ADC_CFG2)
1040:Generated_Source\PSoC5/ADC.c ****         {
1041:Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG2_DEC_DIV;
1042:Generated_Source\PSoC5/ADC.c ****         }
1043:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_CFG2_DEC_DIV */
1044:Generated_Source\PSoC5/ADC.c ****     #if((ADC_CFG3_DEC_DIV != 0) && (ADC_DEFAULT_NUM_CONFIGS > 2))
1045:Generated_Source\PSoC5/ADC.c ****         if(ADC_Config == ADC_CFG3)
1046:Generated_Source\PSoC5/ADC.c ****         {
1047:Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG3_DEC_DIV;
1048:Generated_Source\PSoC5/ADC.c ****         }
1049:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_CFG2_DEC_DIV */
1050:Generated_Source\PSoC5/ADC.c ****     #if((ADC_CFG4_DEC_DIV != 0) && (ADC_DEFAULT_NUM_CONFIGS > 3))
1051:Generated_Source\PSoC5/ADC.c ****         if(ADC_Config == ADC_CFG4)
1052:Generated_Source\PSoC5/ADC.c ****         {
1053:Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG4_DEC_DIV;
1054:Generated_Source\PSoC5/ADC.c ****         }
1055:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_CFG2_DEC_DIV */
1056:Generated_Source\PSoC5/ADC.c **** 
1057:Generated_Source\PSoC5/ADC.c ****     /* Subtract ADC offset */
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 20


1058:Generated_Source\PSoC5/ADC.c ****     adcCounts -= ADC_Offset;
1059:Generated_Source\PSoC5/ADC.c **** 
1060:Generated_Source\PSoC5/ADC.c ****     Volts = (float32)adcCounts / (float32)ADC_CountsPerVolt;
1061:Generated_Source\PSoC5/ADC.c **** 
1062:Generated_Source\PSoC5/ADC.c ****     return( Volts );
1063:Generated_Source\PSoC5/ADC.c **** }
1064:Generated_Source\PSoC5/ADC.c **** 
1065:Generated_Source\PSoC5/ADC.c **** 
1066:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
1067:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_CountsTo_uVolts
1068:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
1069:Generated_Source\PSoC5/ADC.c **** *
1070:Generated_Source\PSoC5/ADC.c **** * Summary:
1071:Generated_Source\PSoC5/ADC.c **** *  Converts the ADC output to uVolts as a 32-bit integer. For example,
1072:Generated_Source\PSoC5/ADC.c **** *  if the ADC measured -0.02345 Volts, the return value would be -23450 uVolts.
1073:Generated_Source\PSoC5/ADC.c **** *
1074:Generated_Source\PSoC5/ADC.c **** * Parameters:
1075:Generated_Source\PSoC5/ADC.c **** *  int32 adcCounts: Result from the ADC conversion.
1076:Generated_Source\PSoC5/ADC.c **** *
1077:Generated_Source\PSoC5/ADC.c **** * Return:
1078:Generated_Source\PSoC5/ADC.c **** *  int32:  Result in uVolts
1079:Generated_Source\PSoC5/ADC.c **** *
1080:Generated_Source\PSoC5/ADC.c **** * Global variables:
1081:Generated_Source\PSoC5/ADC.c **** *  ADC_CountsPerVolt:  used to convert ADC counts to mVolts.
1082:Generated_Source\PSoC5/ADC.c **** *  ADC_Offset:  Used as the offset while converting ADC counts
1083:Generated_Source\PSoC5/ADC.c **** *   to mVolts.
1084:Generated_Source\PSoC5/ADC.c **** *
1085:Generated_Source\PSoC5/ADC.c **** * Theory:
1086:Generated_Source\PSoC5/ADC.c **** *  Care must be taken to not exceed the maximum value for a 31 bit signed
1087:Generated_Source\PSoC5/ADC.c **** *  number in the conversion to uVolts and at the same time not lose resolution.
1088:Generated_Source\PSoC5/ADC.c **** *
1089:Generated_Source\PSoC5/ADC.c **** *  uVolts = ((A * adcCounts) / ((int32)ADC_CountsPerVolt / B));
1090:Generated_Source\PSoC5/ADC.c **** *
1091:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
1092:Generated_Source\PSoC5/ADC.c **** int32 ADC_CountsTo_uVolts(int32 adcCounts) 
1093:Generated_Source\PSoC5/ADC.c **** {
1094:Generated_Source\PSoC5/ADC.c **** 
1095:Generated_Source\PSoC5/ADC.c ****     int32 uVolts;
1096:Generated_Source\PSoC5/ADC.c ****     int32 coefA;
1097:Generated_Source\PSoC5/ADC.c ****     int32 coefB;
1098:Generated_Source\PSoC5/ADC.c ****     uint8 resolution;
1099:Generated_Source\PSoC5/ADC.c **** 
1100:Generated_Source\PSoC5/ADC.c ****     /* Set the resolution based on the configuration */
1101:Generated_Source\PSoC5/ADC.c ****     /* Convert adcCounts to the right align if left option selected */
1102:Generated_Source\PSoC5/ADC.c ****     if (ADC_Config == ADC_CFG1)
1103:Generated_Source\PSoC5/ADC.c ****     {
1104:Generated_Source\PSoC5/ADC.c ****         resolution = ADC_CFG1_RESOLUTION;
1105:Generated_Source\PSoC5/ADC.c ****         #if(ADC_CFG1_DEC_DIV != 0)
1106:Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG1_DEC_DIV;
1107:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC_CFG1_DEC_DIV */
1108:Generated_Source\PSoC5/ADC.c ****     }
1109:Generated_Source\PSoC5/ADC.c ****     else if (ADC_Config == ADC_CFG2)
1110:Generated_Source\PSoC5/ADC.c ****     {
1111:Generated_Source\PSoC5/ADC.c ****         resolution = ADC_CFG2_RESOLUTION;
1112:Generated_Source\PSoC5/ADC.c ****         #if(ADC_CFG2_DEC_DIV != 0)
1113:Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG2_DEC_DIV;
1114:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC_CFG2_DEC_DIV */
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 21


1115:Generated_Source\PSoC5/ADC.c ****     }
1116:Generated_Source\PSoC5/ADC.c ****     else if (ADC_Config == ADC_CFG3)
1117:Generated_Source\PSoC5/ADC.c ****     {
1118:Generated_Source\PSoC5/ADC.c ****         resolution = ADC_CFG3_RESOLUTION;
1119:Generated_Source\PSoC5/ADC.c ****         #if(ADC_CFG3_DEC_DIV != 0)
1120:Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG3_DEC_DIV;
1121:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC_CFG3_DEC_DIV */
1122:Generated_Source\PSoC5/ADC.c ****     }
1123:Generated_Source\PSoC5/ADC.c ****     else
1124:Generated_Source\PSoC5/ADC.c ****     {
1125:Generated_Source\PSoC5/ADC.c ****         resolution = ADC_CFG4_RESOLUTION;
1126:Generated_Source\PSoC5/ADC.c ****         #if(ADC_CFG4_DEC_DIV != 0)
1127:Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG4_DEC_DIV;
1128:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC_CFG4_DEC_DIV */
1129:Generated_Source\PSoC5/ADC.c ****     }
1130:Generated_Source\PSoC5/ADC.c **** 
1131:Generated_Source\PSoC5/ADC.c ****     switch (resolution)
1132:Generated_Source\PSoC5/ADC.c ****     {
1133:Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_12) || \
1134:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_12) || \
1135:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_12) || \
1136:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_12) )
1137:Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_12:
1138:Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_2;
1139:Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_2;
1140:Generated_Source\PSoC5/ADC.c ****                 break;
1141:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_12 */    
1142:Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_13) || \
1143:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_13) || \
1144:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_13) || \
1145:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_13) )
1146:Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_13:
1147:Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_4;
1148:Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_4;
1149:Generated_Source\PSoC5/ADC.c ****                 break;
1150:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_13 */    
1151:Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_14) || \
1152:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_14) || \
1153:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_14) || \
1154:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_14) )
1155:Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_14:
1156:Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_8;
1157:Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_8;
1158:Generated_Source\PSoC5/ADC.c ****                 break;
1159:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_14 */    
1160:Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_15) || \
1161:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_15) || \
1162:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_15) || \
1163:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_15) )
1164:Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_15:
1165:Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_16;
1166:Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_16;
1167:Generated_Source\PSoC5/ADC.c ****                 break;
1168:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_15 */    
1169:Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_16) || \
1170:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_16) || \
1171:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_16) || \
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 22


1172:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_16) )
1173:Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_16:
1174:Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_32;
1175:Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_32;
1176:Generated_Source\PSoC5/ADC.c ****                 break;
1177:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_16 */    
1178:Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_17) || \
1179:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_17) || \
1180:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_17) || \
1181:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_17) )
1182:Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_17:
1183:Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_64;
1184:Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_64;
1185:Generated_Source\PSoC5/ADC.c ****                 break;
1186:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_17 */    
1187:Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_18) || \
1188:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_18) || \
1189:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_18) || \
1190:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_18) )
1191:Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_18:
1192:Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_125;
1193:Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_125;
1194:Generated_Source\PSoC5/ADC.c ****                 break;
1195:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_18 */    
1196:Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_19) || \
1197:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_19) || \
1198:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_19) || \
1199:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_19) )
1200:Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_19:
1201:Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_250;
1202:Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_250;
1203:Generated_Source\PSoC5/ADC.c ****                 break;
1204:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_19 */    
1205:Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_20) || \
1206:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_20) || \
1207:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_20) || \
1208:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_20) )
1209:Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_20:
1210:Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_500;
1211:Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_500;
1212:Generated_Source\PSoC5/ADC.c ****                 break;
1213:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_20 */    
1214:Generated_Source\PSoC5/ADC.c ****         default:    /* resolution < 12 */
1215:Generated_Source\PSoC5/ADC.c ****             /* 11 bits ADC + 2^20(1048576) = 31 bits */
1216:Generated_Source\PSoC5/ADC.c ****             coefA = ADC_1UV_COUNTS;
1217:Generated_Source\PSoC5/ADC.c ****             coefB = ADC_DIVISOR_1;
1218:Generated_Source\PSoC5/ADC.c ****             break;
1219:Generated_Source\PSoC5/ADC.c ****     }
1220:Generated_Source\PSoC5/ADC.c ****     coefB = ADC_CountsPerVolt / coefB;
1221:Generated_Source\PSoC5/ADC.c ****     uVolts = ((coefA * adcCounts) / coefB) - ((coefA * ADC_Offset) / coefB);
1222:Generated_Source\PSoC5/ADC.c **** 
1223:Generated_Source\PSoC5/ADC.c ****     return( uVolts );
1224:Generated_Source\PSoC5/ADC.c **** }
1225:Generated_Source\PSoC5/ADC.c **** 
1226:Generated_Source\PSoC5/ADC.c **** 
1227:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
1228:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_InitConfig(uint8 config)
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 23


1229:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
1230:Generated_Source\PSoC5/ADC.c **** *
1231:Generated_Source\PSoC5/ADC.c **** * Summary:
1232:Generated_Source\PSoC5/ADC.c **** *  Initializes all registers based on customizer settings
1233:Generated_Source\PSoC5/ADC.c **** *
1234:Generated_Source\PSoC5/ADC.c **** * Parameters:
1235:Generated_Source\PSoC5/ADC.c **** *   void
1236:Generated_Source\PSoC5/ADC.c **** *
1237:Generated_Source\PSoC5/ADC.c **** * Return:
1238:Generated_Source\PSoC5/ADC.c **** *  None
1239:Generated_Source\PSoC5/ADC.c **** *
1240:Generated_Source\PSoC5/ADC.c **** * Global variables:
1241:Generated_Source\PSoC5/ADC.c **** *  ADC_CountsPerVolt:  Used to set the default counts per volt.
1242:Generated_Source\PSoC5/ADC.c **** *
1243:Generated_Source\PSoC5/ADC.c **** * Side Effects: Rewrites the coherency set by ADC_SetCoherency()
1244:Generated_Source\PSoC5/ADC.c **** *   API to the default value.
1245:Generated_Source\PSoC5/ADC.c **** *
1246:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
1247:Generated_Source\PSoC5/ADC.c **** static void ADC_InitConfig(uint8 config) 
1248:Generated_Source\PSoC5/ADC.c **** {
1249:Generated_Source\PSoC5/ADC.c ****     ADC_stopConversion = 0u;
1250:Generated_Source\PSoC5/ADC.c **** 
1251:Generated_Source\PSoC5/ADC.c ****     if (config == 1u)
1252:Generated_Source\PSoC5/ADC.c ****     {
1253:Generated_Source\PSoC5/ADC.c ****         /* Default Config */
1254:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_CR_REG      = ADC_CFG1_DEC_CR;
1255:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_SHIFT1_REG  = ADC_CFG1_DEC_SHIFT1;
1256:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_SHIFT2_REG  = ADC_CFG1_DEC_SHIFT2;
1257:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_DR2_REG     = ADC_CFG1_DEC_DR2;
1258:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_DR2H_REG    = ADC_CFG1_DEC_DR2H;
1259:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_DR1_REG     = ADC_CFG1_DEC_DR1;
1260:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_OCOR_REG    = ADC_CFG1_DEC_OCOR;
1261:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_OCORM_REG   = ADC_CFG1_DEC_OCORM;
1262:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_OCORH_REG   = ADC_CFG1_DEC_OCORH;
1263:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_COHER_REG   = ADC_CFG1_DEC_COHER;
1264:Generated_Source\PSoC5/ADC.c **** 
1265:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR4_REG     = ADC_CFG1_DSM_CR4;
1266:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR5_REG     = ADC_CFG1_DSM_CR5;
1267:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR6_REG     = ADC_CFG1_DSM_CR6;
1268:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR7_REG     = ADC_CFG1_DSM_CR7;
1269:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR10_REG    = ADC_CFG1_DSM_CR10;
1270:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR11_REG    = ADC_CFG1_DSM_CR11;
1271:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR12_REG    = ADC_CFG1_DSM_CR12;
1272:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR14_REG    = ADC_CFG1_DSM_CR14;
1273:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR15_REG    = ADC_CFG1_DSM_CR15;
1274:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR16_REG    = ADC_CFG1_DSM_CR16;
1275:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR17_REG    = ADC_CFG1_DSM_CR17;
1276:Generated_Source\PSoC5/ADC.c ****         /* Set DSM_REF0_REG by disabling and enabling the PRESS circuit */
1277:Generated_Source\PSoC5/ADC.c ****         ADC_SetDSMRef0Reg(ADC_CFG1_DSM_REF0);
1278:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_REF2_REG    = ADC_CFG1_DSM_REF2;
1279:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_REF3_REG    = ADC_CFG1_DSM_REF3;
1280:Generated_Source\PSoC5/ADC.c **** 
1281:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_BUF0_REG    = ADC_CFG1_DSM_BUF0;
1282:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_BUF1_REG    = ADC_CFG1_DSM_BUF1;
1283:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_BUF2_REG    = ADC_CFG1_DSM_BUF2;
1284:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_BUF3_REG    = ADC_CFG1_DSM_BUF3;
1285:Generated_Source\PSoC5/ADC.c **** 
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 24


1286:Generated_Source\PSoC5/ADC.c ****         /* To select either Vssa or Vref to -ve input of DSM depending on
1287:Generated_Source\PSoC5/ADC.c ****         *  the input  range selected.
1288:Generated_Source\PSoC5/ADC.c ****         */
1289:Generated_Source\PSoC5/ADC.c ****         #if(ADC_DEFAULT_INPUT_MODE)
1290:Generated_Source\PSoC5/ADC.c ****             #if (ADC_CFG1_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF)
1291:Generated_Source\PSoC5/ADC.c ****                 ADC_AMux_Select(1u);
1292:Generated_Source\PSoC5/ADC.c ****             #else
1293:Generated_Source\PSoC5/ADC.c ****                 ADC_AMux_Select(0u);
1294:Generated_Source\PSoC5/ADC.c ****             #endif /* ADC_IR_VSSA_TO_2VREF) */
1295:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC_DEFAULT_INPUT_MODE */
1296:Generated_Source\PSoC5/ADC.c **** 
1297:Generated_Source\PSoC5/ADC.c ****         /* Set the Conversion stop if resolution is above 16 bit and conversion
1298:Generated_Source\PSoC5/ADC.c ****         *   mode is Single sample
1299:Generated_Source\PSoC5/ADC.c ****         */
1300:Generated_Source\PSoC5/ADC.c ****         #if(ADC_CFG1_RESOLUTION > 16 && \
1301:Generated_Source\PSoC5/ADC.c ****             ADC_CFG1_CONV_MODE == ADC_MODE_SINGLE_SAMPLE)
1302:Generated_Source\PSoC5/ADC.c ****             ADC_stopConversion = 1u;
1303:Generated_Source\PSoC5/ADC.c ****         #endif /* Single sample with resolution above 16 bits. */
1304:Generated_Source\PSoC5/ADC.c **** 
1305:Generated_Source\PSoC5/ADC.c ****         ADC_CountsPerVolt = (int32)ADC_CFG1_COUNTS_PER_VOLT;
1306:Generated_Source\PSoC5/ADC.c **** 
1307:Generated_Source\PSoC5/ADC.c ****         ADC_Ext_CP_Clk_SetDividerRegister(ADC_CFG1_CP_CLK_DIVIDER, 1u);
1308:Generated_Source\PSoC5/ADC.c **** 
1309:Generated_Source\PSoC5/ADC.c ****         /* This is only valid if there is an internal clock */
1310:Generated_Source\PSoC5/ADC.c ****         #if(ADC_DEFAULT_INTERNAL_CLK)
1311:Generated_Source\PSoC5/ADC.c ****             ADC_theACLK_SetDividerRegister(ADC_CFG1_ADC_CLK_DIVIDER, 1u);
1312:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC_DEFAULT_INTERNAL_CLK */
1313:Generated_Source\PSoC5/ADC.c **** 
1314:Generated_Source\PSoC5/ADC.c ****         #if(ADC_IRQ_REMOVE == 0u)
1315:Generated_Source\PSoC5/ADC.c ****             /* Set interrupt vector */
1316:Generated_Source\PSoC5/ADC.c ****             (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR1);
1317:Generated_Source\PSoC5/ADC.c ****         #endif   /* End ADC_IRQ_REMOVE */
1318:Generated_Source\PSoC5/ADC.c ****     }
1319:Generated_Source\PSoC5/ADC.c **** 
1320:Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_NUM_CONFIGS > 1)
1321:Generated_Source\PSoC5/ADC.c ****         if(config == 2u)
1322:Generated_Source\PSoC5/ADC.c ****         {
1323:Generated_Source\PSoC5/ADC.c ****             /* Second Config */
1324:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_CR_REG      = ADC_CFG2_DEC_CR;
1325:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_SHIFT1_REG  = ADC_CFG2_DEC_SHIFT1;
1326:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_SHIFT2_REG  = ADC_CFG2_DEC_SHIFT2;
1327:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR2_REG     = ADC_CFG2_DEC_DR2;
1328:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR2H_REG    = ADC_CFG2_DEC_DR2H;
1329:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR1_REG     = ADC_CFG2_DEC_DR1;
1330:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCOR_REG    = ADC_CFG2_DEC_OCOR;
1331:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCORM_REG   = ADC_CFG2_DEC_OCORM;
1332:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCORH_REG   = ADC_CFG2_DEC_OCORH;
1333:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_COHER_REG   = ADC_CFG2_DEC_COHER;
1334:Generated_Source\PSoC5/ADC.c **** 
1335:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR4_REG     = ADC_CFG2_DSM_CR4;
1336:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR5_REG     = ADC_CFG2_DSM_CR5;
1337:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR6_REG     = ADC_CFG2_DSM_CR6;
1338:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR7_REG     = ADC_CFG2_DSM_CR7;
1339:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR10_REG    = ADC_CFG2_DSM_CR10;
1340:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR11_REG    = ADC_CFG2_DSM_CR11;
1341:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR12_REG    = ADC_CFG2_DSM_CR12;
1342:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR14_REG    = ADC_CFG2_DSM_CR14;
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 25


1343:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR15_REG    = ADC_CFG2_DSM_CR15;
1344:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR16_REG    = ADC_CFG2_DSM_CR16;
1345:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR17_REG    = ADC_CFG2_DSM_CR17;
1346:Generated_Source\PSoC5/ADC.c ****             /* Set DSM_REF0_REG by disabling and enabling the PRESS cirucit */
1347:Generated_Source\PSoC5/ADC.c ****             ADC_SetDSMRef0Reg(ADC_CFG2_DSM_REF0);
1348:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_REF2_REG    = ADC_CFG2_DSM_REF2;
1349:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_REF3_REG    = ADC_CFG2_DSM_REF3;
1350:Generated_Source\PSoC5/ADC.c **** 
1351:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF0_REG    = ADC_CFG2_DSM_BUF0;
1352:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF1_REG    = ADC_CFG2_DSM_BUF1;
1353:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF2_REG    = ADC_CFG2_DSM_BUF2;
1354:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF3_REG    = ADC_CFG2_DSM_BUF3;
1355:Generated_Source\PSoC5/ADC.c **** 
1356:Generated_Source\PSoC5/ADC.c ****             /* To select either Vssa or Vref to -ve input of DSM depending on
1357:Generated_Source\PSoC5/ADC.c ****             *  the input range selected.
1358:Generated_Source\PSoC5/ADC.c ****             */
1359:Generated_Source\PSoC5/ADC.c **** 
1360:Generated_Source\PSoC5/ADC.c ****             #if(ADC_DEFAULT_INPUT_MODE)
1361:Generated_Source\PSoC5/ADC.c ****                 #if (ADC_CFG2_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF)
1362:Generated_Source\PSoC5/ADC.c ****                     ADC_AMux_Select(1u);
1363:Generated_Source\PSoC5/ADC.c ****                 #else
1364:Generated_Source\PSoC5/ADC.c ****                     ADC_AMux_Select(0u);
1365:Generated_Source\PSoC5/ADC.c ****                 #endif /* ADC_IR_VSSA_TO_2VREF) */
1366:Generated_Source\PSoC5/ADC.c ****             #endif /* ADC_DEFAULT_INPUT_MODE */
1367:Generated_Source\PSoC5/ADC.c **** 
1368:Generated_Source\PSoC5/ADC.c ****             /* Set the Conversion stop if resolution is above 16 bit and
1369:Generated_Source\PSoC5/ADC.c ****             *   conversion mode is Single sample
1370:Generated_Source\PSoC5/ADC.c ****             */
1371:Generated_Source\PSoC5/ADC.c ****             #if(ADC_CFG2_RESOLUTION > 16 && \
1372:Generated_Source\PSoC5/ADC.c ****                 ADC_CFG2_CONV_MODE == ADC_MODE_SINGLE_SAMPLE)
1373:Generated_Source\PSoC5/ADC.c ****                 ADC_stopConversion = 1u;
1374:Generated_Source\PSoC5/ADC.c ****             #endif /* Single sample with resolution above 16 bits. */
1375:Generated_Source\PSoC5/ADC.c **** 
1376:Generated_Source\PSoC5/ADC.c ****             ADC_CountsPerVolt = (int32)ADC_CFG2_COUNTS_PER_VOLT;
1377:Generated_Source\PSoC5/ADC.c **** 
1378:Generated_Source\PSoC5/ADC.c ****             ADC_Ext_CP_Clk_SetDividerRegister(ADC_CFG2_CP_CLK_DIVIDER, 1u);
1379:Generated_Source\PSoC5/ADC.c **** 
1380:Generated_Source\PSoC5/ADC.c ****             /* This is only valid if there is an internal clock */
1381:Generated_Source\PSoC5/ADC.c ****             #if(ADC_DEFAULT_INTERNAL_CLK)
1382:Generated_Source\PSoC5/ADC.c ****                 ADC_theACLK_SetDividerRegister(ADC_CFG2_ADC_CLK_DIVIDER, 1u);
1383:Generated_Source\PSoC5/ADC.c ****             #endif /* ADC_DEFAULT_INTERNAL_CLK */
1384:Generated_Source\PSoC5/ADC.c **** 
1385:Generated_Source\PSoC5/ADC.c ****             #if(ADC_IRQ_REMOVE == 0u)
1386:Generated_Source\PSoC5/ADC.c ****                 /* Set interrupt vector */
1387:Generated_Source\PSoC5/ADC.c ****                 (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR2);
1388:Generated_Source\PSoC5/ADC.c ****             #endif   /* End ADC_IRQ_REMOVE */
1389:Generated_Source\PSoC5/ADC.c ****         }
1390:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_NUM_CONFIGS > 1 */
1391:Generated_Source\PSoC5/ADC.c **** 
1392:Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_NUM_CONFIGS > 2)
1393:Generated_Source\PSoC5/ADC.c ****         if(config == 3u)
1394:Generated_Source\PSoC5/ADC.c ****         {
1395:Generated_Source\PSoC5/ADC.c ****             /* Third Config */
1396:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_CR_REG      = ADC_CFG3_DEC_CR;
1397:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_SHIFT1_REG  = ADC_CFG3_DEC_SHIFT1;
1398:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_SHIFT2_REG  = ADC_CFG3_DEC_SHIFT2;
1399:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR2_REG     = ADC_CFG3_DEC_DR2;
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 26


1400:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR2H_REG    = ADC_CFG3_DEC_DR2H;
1401:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR1_REG     = ADC_CFG3_DEC_DR1;
1402:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCOR_REG    = ADC_CFG3_DEC_OCOR;
1403:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCORM_REG   = ADC_CFG3_DEC_OCORM;
1404:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCORH_REG   = ADC_CFG3_DEC_OCORH;
1405:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_COHER_REG   = ADC_CFG3_DEC_COHER;
1406:Generated_Source\PSoC5/ADC.c **** 
1407:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR4_REG     = ADC_CFG3_DSM_CR4;
1408:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR5_REG     = ADC_CFG3_DSM_CR5;
1409:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR6_REG     = ADC_CFG3_DSM_CR6;
1410:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR7_REG     = ADC_CFG3_DSM_CR7;
1411:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR10_REG    = ADC_CFG3_DSM_CR10;
1412:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR11_REG    = ADC_CFG3_DSM_CR11;
1413:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR12_REG    = ADC_CFG3_DSM_CR12;
1414:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR14_REG    = ADC_CFG3_DSM_CR14;
1415:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR15_REG    = ADC_CFG3_DSM_CR15;
1416:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR16_REG    = ADC_CFG3_DSM_CR16;
1417:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR17_REG    = ADC_CFG3_DSM_CR17;
1418:Generated_Source\PSoC5/ADC.c ****             /* Set DSM_REF0_REG by disabling and enabling the PRESS circuit */
1419:Generated_Source\PSoC5/ADC.c ****             ADC_SetDSMRef0Reg(ADC_CFG3_DSM_REF0);
1420:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_REF2_REG    = ADC_CFG3_DSM_REF2;
1421:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_REF3_REG    = ADC_CFG3_DSM_REF3;
1422:Generated_Source\PSoC5/ADC.c **** 
1423:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF0_REG    = ADC_CFG3_DSM_BUF0;
1424:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF1_REG    = ADC_CFG3_DSM_BUF1;
1425:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF2_REG    = ADC_CFG3_DSM_BUF2;
1426:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF3_REG    = ADC_CFG3_DSM_BUF3;
1427:Generated_Source\PSoC5/ADC.c **** 
1428:Generated_Source\PSoC5/ADC.c ****             /* To select either Vssa or Vref to -ve input of DSM depending on
1429:Generated_Source\PSoC5/ADC.c ****             *  the input range selected.
1430:Generated_Source\PSoC5/ADC.c ****             */
1431:Generated_Source\PSoC5/ADC.c ****             #if(ADC_DEFAULT_INPUT_MODE)
1432:Generated_Source\PSoC5/ADC.c ****                 #if (ADC_CFG3_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF)
1433:Generated_Source\PSoC5/ADC.c ****                     ADC_AMux_Select(1u);
1434:Generated_Source\PSoC5/ADC.c ****                 #else
1435:Generated_Source\PSoC5/ADC.c ****                     ADC_AMux_Select(0u);
1436:Generated_Source\PSoC5/ADC.c ****                 #endif /* ADC_IR_VSSA_TO_2VREF) */
1437:Generated_Source\PSoC5/ADC.c ****             #endif /* ADC_DEFAULT_INPUT_MODE */
1438:Generated_Source\PSoC5/ADC.c **** 
1439:Generated_Source\PSoC5/ADC.c ****             /* Set the Conversion stop if resolution is above 16 bit and
1440:Generated_Source\PSoC5/ADC.c ****                conversion  mode is Single sample */
1441:Generated_Source\PSoC5/ADC.c ****             #if(ADC_CFG3_RESOLUTION > 16 && \
1442:Generated_Source\PSoC5/ADC.c ****                 ADC_CFG3_CONV_MODE == ADC_MODE_SINGLE_SAMPLE)
1443:Generated_Source\PSoC5/ADC.c ****                 ADC_stopConversion = 1u;
1444:Generated_Source\PSoC5/ADC.c ****             #endif /* Single sample with resolution above 16 bits */
1445:Generated_Source\PSoC5/ADC.c **** 
1446:Generated_Source\PSoC5/ADC.c ****             ADC_CountsPerVolt = (int32)ADC_CFG3_COUNTS_PER_VOLT;
1447:Generated_Source\PSoC5/ADC.c **** 
1448:Generated_Source\PSoC5/ADC.c ****             ADC_Ext_CP_Clk_SetDividerRegister(ADC_CFG3_CP_CLK_DIVIDER, 1u);
1449:Generated_Source\PSoC5/ADC.c **** 
1450:Generated_Source\PSoC5/ADC.c ****             /* This is only valid if there is an internal clock */
1451:Generated_Source\PSoC5/ADC.c ****             #if(ADC_DEFAULT_INTERNAL_CLK)
1452:Generated_Source\PSoC5/ADC.c ****                 ADC_theACLK_SetDividerRegister(ADC_CFG3_ADC_CLK_DIVIDER, 1u);
1453:Generated_Source\PSoC5/ADC.c ****             #endif /* ADC_DEFAULT_INTERNAL_CLK */
1454:Generated_Source\PSoC5/ADC.c **** 
1455:Generated_Source\PSoC5/ADC.c ****             #if(ADC_IRQ_REMOVE == 0u)
1456:Generated_Source\PSoC5/ADC.c ****                 /* Set interrupt vector */
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 27


1457:Generated_Source\PSoC5/ADC.c ****                 (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR3);
1458:Generated_Source\PSoC5/ADC.c ****             #endif   /* End ADC_IRQ_REMOVE */
1459:Generated_Source\PSoC5/ADC.c ****         }
1460:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_NUM_CONFIGS > 2 */
1461:Generated_Source\PSoC5/ADC.c **** 
1462:Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_NUM_CONFIGS > 3)
1463:Generated_Source\PSoC5/ADC.c ****         if (config == 4u)
1464:Generated_Source\PSoC5/ADC.c ****         {
1465:Generated_Source\PSoC5/ADC.c ****             /* Fourth Config */
1466:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_CR_REG      = ADC_CFG4_DEC_CR;
1467:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_SHIFT1_REG  = ADC_CFG4_DEC_SHIFT1;
1468:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_SHIFT2_REG  = ADC_CFG4_DEC_SHIFT2;
1469:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR2_REG     = ADC_CFG4_DEC_DR2;
1470:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR2H_REG    = ADC_CFG4_DEC_DR2H;
1471:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR1_REG     = ADC_CFG4_DEC_DR1;
1472:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCOR_REG    = ADC_CFG4_DEC_OCOR;
1473:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCORM_REG   = ADC_CFG4_DEC_OCORM;
1474:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCORH_REG   = ADC_CFG4_DEC_OCORH;
1475:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_COHER_REG   = ADC_CFG4_DEC_COHER;
1476:Generated_Source\PSoC5/ADC.c **** 
1477:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR4_REG     = ADC_CFG4_DSM_CR4;
1478:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR5_REG     = ADC_CFG4_DSM_CR5;
1479:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR6_REG     = ADC_CFG4_DSM_CR6;
1480:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR7_REG     = ADC_CFG4_DSM_CR7;
1481:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR10_REG    = ADC_CFG4_DSM_CR10;
1482:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR11_REG    = ADC_CFG4_DSM_CR11;
1483:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR12_REG    = ADC_CFG4_DSM_CR12;
1484:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR14_REG    = ADC_CFG4_DSM_CR14;
1485:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR15_REG    = ADC_CFG4_DSM_CR15;
1486:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR16_REG    = ADC_CFG4_DSM_CR16;
1487:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR17_REG    = ADC_CFG4_DSM_CR17;
1488:Generated_Source\PSoC5/ADC.c ****             /* Set DSM_REF0_REG by disabling and enabling the PRESS circuit */
1489:Generated_Source\PSoC5/ADC.c ****             ADC_SetDSMRef0Reg(ADC_CFG4_DSM_REF0);
1490:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_REF2_REG    = ADC_CFG4_DSM_REF2;
1491:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_REF3_REG    = ADC_CFG4_DSM_REF3;
1492:Generated_Source\PSoC5/ADC.c **** 
1493:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF0_REG    = ADC_CFG4_DSM_BUF0;
1494:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF1_REG    = ADC_CFG4_DSM_BUF1;
1495:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF2_REG    = ADC_CFG4_DSM_BUF2;
1496:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF3_REG    = ADC_CFG4_DSM_BUF3;
1497:Generated_Source\PSoC5/ADC.c **** 
1498:Generated_Source\PSoC5/ADC.c ****             /* To select either Vssa or Vref to -ve input of DSM depending on
1499:Generated_Source\PSoC5/ADC.c ****             *  the input range selected.
1500:Generated_Source\PSoC5/ADC.c ****             */
1501:Generated_Source\PSoC5/ADC.c ****             #if(ADC_DEFAULT_INPUT_MODE)
1502:Generated_Source\PSoC5/ADC.c ****                 #if (ADC_CFG4_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF)
1503:Generated_Source\PSoC5/ADC.c ****                     ADC_AMux_Select(1u);
1504:Generated_Source\PSoC5/ADC.c ****                 #else
1505:Generated_Source\PSoC5/ADC.c ****                     ADC_AMux_Select(0u);
1506:Generated_Source\PSoC5/ADC.c ****                 #endif /* ADC_IR_VSSA_TO_2VREF) */
1507:Generated_Source\PSoC5/ADC.c ****             #endif /* ADC_DEFAULT_INPUT_MODE */
1508:Generated_Source\PSoC5/ADC.c **** 
1509:Generated_Source\PSoC5/ADC.c ****             /* Set the Conversion stop if resolution is above 16 bit and
1510:Generated_Source\PSoC5/ADC.c ****                conversion mode is Single sample */
1511:Generated_Source\PSoC5/ADC.c ****             #if(ADC_CFG4_RESOLUTION > 16 && \
1512:Generated_Source\PSoC5/ADC.c ****                 ADC_CFG4_CONV_MODE == ADC_MODE_SINGLE_SAMPLE)
1513:Generated_Source\PSoC5/ADC.c ****                 ADC_stopConversion = 1u;
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 28


1514:Generated_Source\PSoC5/ADC.c ****             #endif /* Single sample with resolution above 16 bits */
1515:Generated_Source\PSoC5/ADC.c **** 
1516:Generated_Source\PSoC5/ADC.c ****             ADC_CountsPerVolt = (int32)ADC_CFG4_COUNTS_PER_VOLT;
1517:Generated_Source\PSoC5/ADC.c **** 
1518:Generated_Source\PSoC5/ADC.c ****             ADC_Ext_CP_Clk_SetDividerRegister(ADC_CFG4_CP_CLK_DIVIDER, 1u);
1519:Generated_Source\PSoC5/ADC.c **** 
1520:Generated_Source\PSoC5/ADC.c ****             /* This is only valid if there is an internal clock */
1521:Generated_Source\PSoC5/ADC.c ****             #if(ADC_DEFAULT_INTERNAL_CLK)
1522:Generated_Source\PSoC5/ADC.c ****                 ADC_theACLK_SetDividerRegister(ADC_CFG4_ADC_CLK_DIVIDER, 1u);
1523:Generated_Source\PSoC5/ADC.c ****             #endif /* ADC_DEFAULT_INTERNAL_CLK */
1524:Generated_Source\PSoC5/ADC.c **** 
1525:Generated_Source\PSoC5/ADC.c ****             #if(ADC_IRQ_REMOVE == 0u)
1526:Generated_Source\PSoC5/ADC.c ****                 /* Set interrupt vector */
1527:Generated_Source\PSoC5/ADC.c ****                 (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR4);
1528:Generated_Source\PSoC5/ADC.c ****             #endif   /* End ADC_IRQ_REMOVE */
1529:Generated_Source\PSoC5/ADC.c ****         }
1530:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_NUM_CONFIGS > 3 */
1531:Generated_Source\PSoC5/ADC.c **** }
1532:Generated_Source\PSoC5/ADC.c **** 
1533:Generated_Source\PSoC5/ADC.c **** 
1534:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
1535:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_SelectCofiguration
1536:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
1537:Generated_Source\PSoC5/ADC.c **** *
1538:Generated_Source\PSoC5/ADC.c **** * Summary:
1539:Generated_Source\PSoC5/ADC.c **** *  Sets one of up to four ADC configurations. Before setting the new
1540:Generated_Source\PSoC5/ADC.c **** *  configuration, the ADC is stopped and powered down. After setting
1541:Generated_Source\PSoC5/ADC.c **** *  the new configuration, the ADC can be powered and conversion
1542:Generated_Source\PSoC5/ADC.c **** *  can be restarted depending up on the value of second parameter
1543:Generated_Source\PSoC5/ADC.c **** *  restart. If the value of this parameter is 1, then ADC will be
1544:Generated_Source\PSoC5/ADC.c **** *  restarted. If this value is zero, then user must call ADC_Start
1545:Generated_Source\PSoC5/ADC.c **** *  and ADC_StartConvert() to restart the conversion.
1546:Generated_Source\PSoC5/ADC.c **** *
1547:Generated_Source\PSoC5/ADC.c **** * Parameters:
1548:Generated_Source\PSoC5/ADC.c **** *  config:  configuration user wants to select.
1549:Generated_Source\PSoC5/ADC.c **** *           Valid range: 1..4
1550:Generated_Source\PSoC5/ADC.c **** *  restart:  Restart option. 1 means start the ADC and restart the conversion.
1551:Generated_Source\PSoC5/ADC.c **** *                            0 means do not start the ADC and conversion.
1552:Generated_Source\PSoC5/ADC.c **** *
1553:Generated_Source\PSoC5/ADC.c **** * Return:
1554:Generated_Source\PSoC5/ADC.c **** *  None
1555:Generated_Source\PSoC5/ADC.c **** *
1556:Generated_Source\PSoC5/ADC.c **** * Side Effects: 
1557:Generated_Source\PSoC5/ADC.c **** *  Enables internal interrupt.
1558:Generated_Source\PSoC5/ADC.c **** *
1559:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
1560:Generated_Source\PSoC5/ADC.c **** void ADC_SelectConfiguration(uint8 config, uint8 restart)
1561:Generated_Source\PSoC5/ADC.c ****                                               
1562:Generated_Source\PSoC5/ADC.c **** {
1563:Generated_Source\PSoC5/ADC.c ****     /* Check whether the configuration number is valid or not */
1564:Generated_Source\PSoC5/ADC.c ****     if((config > 0u) && (config <= ADC_DEFAULT_NUM_CONFIGS))
1565:Generated_Source\PSoC5/ADC.c ****     {
1566:Generated_Source\PSoC5/ADC.c ****         /* Set the flag to ensure Start() API doesn't override the 
1567:Generated_Source\PSoC5/ADC.c **** 		*  selected configuration
1568:Generated_Source\PSoC5/ADC.c **** 		*/
1569:Generated_Source\PSoC5/ADC.c ****         if(ADC_initVar == 0u)
1570:Generated_Source\PSoC5/ADC.c ****         {
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 29


1571:Generated_Source\PSoC5/ADC.c ****             ADC_started = 1u;
1572:Generated_Source\PSoC5/ADC.c ****         }
1573:Generated_Source\PSoC5/ADC.c **** 
1574:Generated_Source\PSoC5/ADC.c ****         /* Update the config flag */
1575:Generated_Source\PSoC5/ADC.c ****         ADC_Config = config;
1576:Generated_Source\PSoC5/ADC.c **** 
1577:Generated_Source\PSoC5/ADC.c ****         /* Stop the ADC  */
1578:Generated_Source\PSoC5/ADC.c ****         ADC_Stop();
1579:Generated_Source\PSoC5/ADC.c **** 
1580:Generated_Source\PSoC5/ADC.c ****         /* Set the  ADC registers based on the configuration */
1581:Generated_Source\PSoC5/ADC.c ****         ADC_InitConfig(config);
1582:Generated_Source\PSoC5/ADC.c **** 
1583:Generated_Source\PSoC5/ADC.c ****         /* Compensate the gain */
1584:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_GVAL_REG = ADC_gcor[config - 1u].gval;
1585:Generated_Source\PSoC5/ADC.c ****         CY_SET_REG16(ADC_DEC_GCOR_16B_PTR, ADC_gcor[config - 1u].gcor);
1586:Generated_Source\PSoC5/ADC.c **** 
1587:Generated_Source\PSoC5/ADC.c ****         if(restart == 1u)
1588:Generated_Source\PSoC5/ADC.c ****         {
1589:Generated_Source\PSoC5/ADC.c ****             /* Restart the ADC */
1590:Generated_Source\PSoC5/ADC.c ****             ADC_Start();
1591:Generated_Source\PSoC5/ADC.c **** 
1592:Generated_Source\PSoC5/ADC.c ****             /* Restart the ADC conversion */
1593:Generated_Source\PSoC5/ADC.c ****             ADC_StartConvert();
1594:Generated_Source\PSoC5/ADC.c ****         }
1595:Generated_Source\PSoC5/ADC.c ****     }
1596:Generated_Source\PSoC5/ADC.c ****     else
1597:Generated_Source\PSoC5/ADC.c ****     {
1598:Generated_Source\PSoC5/ADC.c ****         /* Halt CPU in debug mode if config is out of valid range */
1599:Generated_Source\PSoC5/ADC.c ****         CYASSERT(0u != 0u);
1600:Generated_Source\PSoC5/ADC.c ****     }
1601:Generated_Source\PSoC5/ADC.c **** }
1602:Generated_Source\PSoC5/ADC.c **** 
1603:Generated_Source\PSoC5/ADC.c **** 
1604:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
1605:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_GainCompensation
1606:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
1607:Generated_Source\PSoC5/ADC.c **** *
1608:Generated_Source\PSoC5/ADC.c **** * Summary:
1609:Generated_Source\PSoC5/ADC.c **** *  This API calculates the trim value and then store this to gcor structure.
1610:Generated_Source\PSoC5/ADC.c **** *
1611:Generated_Source\PSoC5/ADC.c **** * Parameters:
1612:Generated_Source\PSoC5/ADC.c **** *  inputRange:  input range for which trim value is to be calculated.
1613:Generated_Source\PSoC5/ADC.c **** *  IdealDecGain:  Ideal Decimator gain for the selected resolution and
1614:Generated_Source\PSoC5/ADC.c **** *                 conversion  mode.
1615:Generated_Source\PSoC5/ADC.c **** *  IdealOddDecGain:  Ideal odd decimation gain for the selected resolution and
1616:Generated_Source\PSoC5/ADC.c ****                      conversion mode.
1617:Generated_Source\PSoC5/ADC.c **** *  resolution:  Resolution to select the proper flash location for trim value.
1618:Generated_Source\PSoC5/ADC.c **** *  config:      Specifies the configuration number
1619:Generated_Source\PSoC5/ADC.c **** *               Valid range: 1..4
1620:Generated_Source\PSoC5/ADC.c **** *
1621:Generated_Source\PSoC5/ADC.c **** * Return:
1622:Generated_Source\PSoC5/ADC.c **** *  None
1623:Generated_Source\PSoC5/ADC.c **** *
1624:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
1625:Generated_Source\PSoC5/ADC.c **** static void ADC_GainCompensation(uint8 inputRange, uint16 idealDecGain, uint16 idealOddDecGain,
1626:Generated_Source\PSoC5/ADC.c ****                               uint8 resolution, uint8 config) 
1627:Generated_Source\PSoC5/ADC.c **** {
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 30


  27              		.loc 1 1627 0
  28              		.cfi_startproc
  29              		@ args = 4, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 38B5     		push	{r3, r4, r5, lr}
  33              		.cfi_def_cfa_offset 16
  34              		.cfi_offset 3, -16
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 9DF81050 		ldrb	r5, [sp, #16]	@ zero_extendqisi2
1628:Generated_Source\PSoC5/ADC.c ****     int8 flash;
1629:Generated_Source\PSoC5/ADC.c **** 	int32 normalised;
1630:Generated_Source\PSoC5/ADC.c **** 	uint16 gcorValue;
1631:Generated_Source\PSoC5/ADC.c ****     uint32 gcorTmp;
1632:Generated_Source\PSoC5/ADC.c **** 
1633:Generated_Source\PSoC5/ADC.c ****     if((config > 0u) && (config <= ADC_DEFAULT_NUM_CONFIGS))
  39              		.loc 1 1633 0
  40 0006 6C1E     		subs	r4, r5, #1
  41 0008 E4B2     		uxtb	r4, r4
  42 000a 012C     		cmp	r4, #1
  43 000c 51D8     		bhi	.L2
1634:Generated_Source\PSoC5/ADC.c ****     {
1635:Generated_Source\PSoC5/ADC.c ****         switch(inputRange)
  44              		.loc 1 1635 0
  45 000e 0138     		subs	r0, r0, #1
  46              	.LVL1:
  47 0010 0928     		cmp	r0, #9
  48 0012 2ED8     		bhi	.L16
  49 0014 DFE800F0 		tbb	[pc, r0]
  50              	.L5:
  51 0018 05       		.byte	(.L4-.L5)/2
  52 0019 2D       		.byte	(.L16-.L5)/2
  53 001a 2D       		.byte	(.L16-.L5)/2
  54 001b 05       		.byte	(.L4-.L5)/2
  55 001c 2D       		.byte	(.L16-.L5)/2
  56 001d 2D       		.byte	(.L16-.L5)/2
  57 001e 0F       		.byte	(.L6-.L5)/2
  58 001f 19       		.byte	(.L7-.L5)/2
  59 0020 2D       		.byte	(.L16-.L5)/2
  60 0021 23       		.byte	(.L8-.L5)/2
  61              		.p2align 1
  62              	.L4:
1636:Generated_Source\PSoC5/ADC.c ****         {
1637:Generated_Source\PSoC5/ADC.c ****             case ADC_IR_VNEG_VREF_DIFF:
1638:Generated_Source\PSoC5/ADC.c ****             case ADC_IR_VSSA_TO_2VREF:
1639:Generated_Source\PSoC5/ADC.c ****                 /* Normalize the flash Value */
1640:Generated_Source\PSoC5/ADC.c ****                 if(resolution > 15u)
  63              		.loc 1 1640 0
  64 0022 0F2B     		cmp	r3, #15
  65 0024 03D9     		bls	.L9
1641:Generated_Source\PSoC5/ADC.c ****                 {
1642:Generated_Source\PSoC5/ADC.c ****                     flash = ADC_DEC_TRIM_VREF_DIFF_16_20;
  66              		.loc 1 1642 0
  67 0026 2548     		ldr	r0, .L18
  68 0028 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 31


  69 002a 40B2     		sxtb	r0, r0
  70              	.LVL2:
  71 002c 22E0     		b	.L3
  72              	.LVL3:
  73              	.L9:
1643:Generated_Source\PSoC5/ADC.c ****                 }
1644:Generated_Source\PSoC5/ADC.c ****                 else
1645:Generated_Source\PSoC5/ADC.c ****                 {
1646:Generated_Source\PSoC5/ADC.c ****                     flash = ADC_DEC_TRIM_VREF_DIFF_8_15;
  74              		.loc 1 1646 0
  75 002e 2448     		ldr	r0, .L18+4
  76 0030 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
  77 0032 40B2     		sxtb	r0, r0
  78              	.LVL4:
  79 0034 1EE0     		b	.L3
  80              	.LVL5:
  81              	.L6:
1647:Generated_Source\PSoC5/ADC.c ****                 }
1648:Generated_Source\PSoC5/ADC.c ****                 break;
1649:Generated_Source\PSoC5/ADC.c **** 
1650:Generated_Source\PSoC5/ADC.c ****             case ADC_IR_VNEG_VREF_2_DIFF:
1651:Generated_Source\PSoC5/ADC.c ****                 /* Normalize the flash Value */
1652:Generated_Source\PSoC5/ADC.c ****                 if(resolution > 15u)
  82              		.loc 1 1652 0
  83 0036 0F2B     		cmp	r3, #15
  84 0038 03D9     		bls	.L10
1653:Generated_Source\PSoC5/ADC.c ****                 {
1654:Generated_Source\PSoC5/ADC.c ****                     flash = ADC_DEC_TRIM_VREF_2_DIFF_16_20;
  85              		.loc 1 1654 0
  86 003a 2248     		ldr	r0, .L18+8
  87 003c 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
  88 003e 40B2     		sxtb	r0, r0
  89              	.LVL6:
  90 0040 18E0     		b	.L3
  91              	.LVL7:
  92              	.L10:
1655:Generated_Source\PSoC5/ADC.c ****                 }
1656:Generated_Source\PSoC5/ADC.c ****                 else
1657:Generated_Source\PSoC5/ADC.c ****                 {
1658:Generated_Source\PSoC5/ADC.c ****                     flash = ADC_DEC_TRIM_VREF_2_DIFF_8_15;
  93              		.loc 1 1658 0
  94 0042 2148     		ldr	r0, .L18+12
  95 0044 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
  96 0046 40B2     		sxtb	r0, r0
  97              	.LVL8:
  98 0048 14E0     		b	.L3
  99              	.LVL9:
 100              	.L7:
1659:Generated_Source\PSoC5/ADC.c ****                 }
1660:Generated_Source\PSoC5/ADC.c ****                 break;
1661:Generated_Source\PSoC5/ADC.c **** 
1662:Generated_Source\PSoC5/ADC.c ****             case ADC_IR_VNEG_VREF_4_DIFF:
1663:Generated_Source\PSoC5/ADC.c ****                 /* Normalize the flash Value */
1664:Generated_Source\PSoC5/ADC.c ****                 if(resolution > 15u)
 101              		.loc 1 1664 0
 102 004a 0F2B     		cmp	r3, #15
 103 004c 03D9     		bls	.L11
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 32


1665:Generated_Source\PSoC5/ADC.c ****                 {
1666:Generated_Source\PSoC5/ADC.c ****                     flash = ADC_DEC_TRIM_VREF_4_DIFF_16_20;
 104              		.loc 1 1666 0
 105 004e 1F48     		ldr	r0, .L18+16
 106 0050 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 107 0052 40B2     		sxtb	r0, r0
 108              	.LVL10:
 109 0054 0EE0     		b	.L3
 110              	.LVL11:
 111              	.L11:
1667:Generated_Source\PSoC5/ADC.c ****                 }
1668:Generated_Source\PSoC5/ADC.c ****                 else
1669:Generated_Source\PSoC5/ADC.c ****                 {
1670:Generated_Source\PSoC5/ADC.c ****                     flash = ADC_DEC_TRIM_VREF_4_DIFF_8_15;
 112              		.loc 1 1670 0
 113 0056 1E48     		ldr	r0, .L18+20
 114 0058 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 115 005a 40B2     		sxtb	r0, r0
 116              	.LVL12:
 117 005c 0AE0     		b	.L3
 118              	.LVL13:
 119              	.L8:
1671:Generated_Source\PSoC5/ADC.c ****                 }
1672:Generated_Source\PSoC5/ADC.c ****                 break;
1673:Generated_Source\PSoC5/ADC.c **** 
1674:Generated_Source\PSoC5/ADC.c ****             case ADC_IR_VNEG_VREF_16_DIFF:
1675:Generated_Source\PSoC5/ADC.c ****                 /* Normalize the flash Value */
1676:Generated_Source\PSoC5/ADC.c ****                 if(resolution > 15u)
 120              		.loc 1 1676 0
 121 005e 0F2B     		cmp	r3, #15
 122 0060 03D9     		bls	.L12
1677:Generated_Source\PSoC5/ADC.c ****                 {
1678:Generated_Source\PSoC5/ADC.c ****                     flash = ADC_DEC_TRIM_VREF_16_DIFF_16_20;
 123              		.loc 1 1678 0
 124 0062 1C48     		ldr	r0, .L18+24
 125 0064 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 126 0066 40B2     		sxtb	r0, r0
 127              	.LVL14:
 128 0068 04E0     		b	.L3
 129              	.LVL15:
 130              	.L12:
1679:Generated_Source\PSoC5/ADC.c ****                 }
1680:Generated_Source\PSoC5/ADC.c ****                 else
1681:Generated_Source\PSoC5/ADC.c ****                 {
1682:Generated_Source\PSoC5/ADC.c ****                     flash = ADC_DEC_TRIM_VREF_16_DIFF_8_15;
 131              		.loc 1 1682 0
 132 006a 1B48     		ldr	r0, .L18+28
 133 006c 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 134 006e 40B2     		sxtb	r0, r0
 135              	.LVL16:
 136 0070 00E0     		b	.L3
 137              	.LVL17:
 138              	.L16:
1683:Generated_Source\PSoC5/ADC.c ****                 }
1684:Generated_Source\PSoC5/ADC.c ****                 break;
1685:Generated_Source\PSoC5/ADC.c **** 
1686:Generated_Source\PSoC5/ADC.c ****             default:
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 33


1687:Generated_Source\PSoC5/ADC.c ****                 flash = 0;
 139              		.loc 1 1687 0
 140 0072 0020     		movs	r0, #0
 141              	.L3:
 142              	.LVL18:
1688:Generated_Source\PSoC5/ADC.c ****                 break;
1689:Generated_Source\PSoC5/ADC.c ****         }
1690:Generated_Source\PSoC5/ADC.c **** 
1691:Generated_Source\PSoC5/ADC.c ****         /* Add two values */
1692:Generated_Source\PSoC5/ADC.c **** 		normalised = (int32)idealDecGain + ((int32)flash * 32);
 143              		.loc 1 1692 0
 144 0074 01EB4011 		add	r1, r1, r0, lsl #5
 145              	.LVL19:
1693:Generated_Source\PSoC5/ADC.c ****         gcorTmp = (uint32)normalised * (uint32)idealOddDecGain;
 146              		.loc 1 1693 0
 147 0078 01FB02F1 		mul	r1, r1, r2
 148              	.LVL20:
1694:Generated_Source\PSoC5/ADC.c ****         gcorValue = (uint16)(gcorTmp / ADC_IDEAL_GAIN_CONST);
 149              		.loc 1 1694 0
 150 007c C90B     		lsrs	r1, r1, #15
 151              	.LVL21:
 152 007e 8AB2     		uxth	r2, r1
 153              	.LVL22:
1695:Generated_Source\PSoC5/ADC.c **** 
1696:Generated_Source\PSoC5/ADC.c ****         if (resolution < (ADC_MAX_GVAL - 1u))
 154              		.loc 1 1696 0
 155 0080 0D2B     		cmp	r3, #13
 156 0082 0BD8     		bhi	.L13
1697:Generated_Source\PSoC5/ADC.c ****         {
1698:Generated_Source\PSoC5/ADC.c ****             gcorValue = (gcorValue >> (ADC_MAX_GVAL - (resolution + 1u)));
 157              		.loc 1 1698 0
 158 0084 C3F10E02 		rsb	r2, r3, #14
 159              	.LVL23:
 160 0088 89B2     		uxth	r1, r1
 161 008a 1141     		asrs	r1, r1, r2
 162              	.LVL24:
 163 008c 8AB2     		uxth	r2, r1
 164              	.LVL25:
1699:Generated_Source\PSoC5/ADC.c ****             ADC_gcor[config - 1u].gval = (resolution + 1u);
 165              		.loc 1 1699 0
 166 008e 691E     		subs	r1, r5, #1
 167 0090 1248     		ldr	r0, .L18+32
 168              	.LVL26:
 169 0092 00EB8101 		add	r1, r0, r1, lsl #2
 170 0096 0133     		adds	r3, r3, #1
 171              	.LVL27:
 172 0098 8B70     		strb	r3, [r1, #2]
 173 009a 05E0     		b	.L14
 174              	.LVL28:
 175              	.L13:
1700:Generated_Source\PSoC5/ADC.c ****         }
1701:Generated_Source\PSoC5/ADC.c ****         else
1702:Generated_Source\PSoC5/ADC.c ****         {
1703:Generated_Source\PSoC5/ADC.c ****             /* Use all 16 bits */
1704:Generated_Source\PSoC5/ADC.c ****             ADC_gcor[config - 1u].gval = ADC_MAX_GVAL;
 176              		.loc 1 1704 0
 177 009c 6B1E     		subs	r3, r5, #1
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 34


 178              	.LVL29:
 179 009e 0F49     		ldr	r1, .L18+32
 180 00a0 01EB8303 		add	r3, r1, r3, lsl #2
 181 00a4 0F21     		movs	r1, #15
 182 00a6 9970     		strb	r1, [r3, #2]
 183              	.LVL30:
 184              	.L14:
1705:Generated_Source\PSoC5/ADC.c ****         }
1706:Generated_Source\PSoC5/ADC.c **** 
1707:Generated_Source\PSoC5/ADC.c ****         /* Save the gain correction register value */
1708:Generated_Source\PSoC5/ADC.c ****         ADC_gcor[config - 1u].gcor = gcorValue;
 185              		.loc 1 1708 0
 186 00a8 013D     		subs	r5, r5, #1
 187 00aa 0C4B     		ldr	r3, .L18+32
 188 00ac 23F82520 		strh	r2, [r3, r5, lsl #2]	@ movhi
 189 00b0 38BD     		pop	{r3, r4, r5, pc}
 190              	.LVL31:
 191              	.L2:
1709:Generated_Source\PSoC5/ADC.c ****     }
1710:Generated_Source\PSoC5/ADC.c ****     else
1711:Generated_Source\PSoC5/ADC.c ****     {
1712:Generated_Source\PSoC5/ADC.c ****         /* Halt CPU in debug mode if config is out of valid range */
1713:Generated_Source\PSoC5/ADC.c ****         CYASSERT(0u != 0u);
 192              		.loc 1 1713 0 discriminator 1
 193 00b2 0020     		movs	r0, #0
 194              	.LVL32:
 195 00b4 FFF7FEFF 		bl	CyHalt
 196              	.LVL33:
 197 00b8 38BD     		pop	{r3, r4, r5, pc}
 198              	.LVL34:
 199              	.L19:
 200 00ba 00BF     		.align	2
 201              	.L18:
 202 00bc 18010049 		.word	1224737048
 203 00c0 1C010049 		.word	1224737052
 204 00c4 19010049 		.word	1224737049
 205 00c8 1D010049 		.word	1224737053
 206 00cc 1A010049 		.word	1224737050
 207 00d0 1E010049 		.word	1224737054
 208 00d4 1B010049 		.word	1224737051
 209 00d8 1F010049 		.word	1224737055
 210 00dc 00000000 		.word	.LANCHOR0
 211              		.cfi_endproc
 212              	.LFE21:
 213              		.size	ADC_GainCompensation, .-ADC_GainCompensation
 214              		.section	.text.ADC_SetDSMRef0Reg,"ax",%progbits
 215              		.align	2
 216              		.thumb
 217              		.thumb_func
 218              		.type	ADC_SetDSMRef0Reg, %function
 219              	ADC_SetDSMRef0Reg:
 220              	.LFB22:
1714:Generated_Source\PSoC5/ADC.c ****     }
1715:Generated_Source\PSoC5/ADC.c **** }
1716:Generated_Source\PSoC5/ADC.c **** 
1717:Generated_Source\PSoC5/ADC.c **** 
1718:Generated_Source\PSoC5/ADC.c **** /******************************************************************************
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 35


1719:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_SetDSMRef0Reg(uint8)
1720:Generated_Source\PSoC5/ADC.c **** ******************************************************************************
1721:Generated_Source\PSoC5/ADC.c **** *
1722:Generated_Source\PSoC5/ADC.c **** * Summary:
1723:Generated_Source\PSoC5/ADC.c **** *  This API sets the DSM_REF0 register. This is written for internal use.
1724:Generated_Source\PSoC5/ADC.c **** *
1725:Generated_Source\PSoC5/ADC.c **** * Parameters:
1726:Generated_Source\PSoC5/ADC.c **** *  value:  Value to be written to DSM_REF0 register.
1727:Generated_Source\PSoC5/ADC.c **** *
1728:Generated_Source\PSoC5/ADC.c **** * Return:
1729:Generated_Source\PSoC5/ADC.c **** *  None
1730:Generated_Source\PSoC5/ADC.c **** *
1731:Generated_Source\PSoC5/ADC.c **** ******************************************************************************/
1732:Generated_Source\PSoC5/ADC.c **** static void ADC_SetDSMRef0Reg(uint8 value) 
1733:Generated_Source\PSoC5/ADC.c **** {
 221              		.loc 1 1733 0
 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 0
 224              		@ frame_needed = 0, uses_anonymous_args = 0
 225              	.LVL35:
 226 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 227              		.cfi_def_cfa_offset 24
 228              		.cfi_offset 3, -24
 229              		.cfi_offset 4, -20
 230              		.cfi_offset 5, -16
 231              		.cfi_offset 6, -12
 232              		.cfi_offset 7, -8
 233              		.cfi_offset 14, -4
 234 0002 0746     		mov	r7, r0
1734:Generated_Source\PSoC5/ADC.c ****     uint8 enableInterrupts;
1735:Generated_Source\PSoC5/ADC.c ****     enableInterrupts = CyEnterCriticalSection();
 235              		.loc 1 1735 0
 236 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 237              	.LVL36:
 238 0008 0646     		mov	r6, r0
 239              	.LVL37:
1736:Generated_Source\PSoC5/ADC.c **** 
1737:Generated_Source\PSoC5/ADC.c ****     /* Disable PRES, Enable power to VCMBUF0, REFBUF0 and REFBUF1, enable PRES */
1738:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR4_REG |= (ADC_IGNORE_PRESA1 | ADC_IGNORE_PRESD1);
 240              		.loc 1 1738 0
 241 000a 0D4D     		ldr	r5, .L22
 242 000c 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 243 000e 43F00303 		orr	r3, r3, #3
 244 0012 2B70     		strb	r3, [r5]
1739:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR5_REG |= (ADC_IGNORE_PRESA2 | ADC_IGNORE_PRESD2);
 245              		.loc 1 1739 0
 246 0014 0B4C     		ldr	r4, .L22+4
 247 0016 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 248 0018 43F00303 		orr	r3, r3, #3
 249 001c 2370     		strb	r3, [r4]
1740:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_REF0_REG = value;
 250              		.loc 1 1740 0
 251 001e 0A4B     		ldr	r3, .L22+8
 252 0020 1F70     		strb	r7, [r3]
1741:Generated_Source\PSoC5/ADC.c **** 
1742:Generated_Source\PSoC5/ADC.c ****     /* Wait for 3 microseconds */
1743:Generated_Source\PSoC5/ADC.c ****     CyDelayUs(ADC_PRES_DELAY_TIME);
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 36


 253              		.loc 1 1743 0
 254 0022 0320     		movs	r0, #3
 255 0024 FFF7FEFF 		bl	CyDelayUs
 256              	.LVL38:
1744:Generated_Source\PSoC5/ADC.c ****     /* Enable the press circuit */
1745:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR4_REG &= (uint8)~(ADC_IGNORE_PRESA1 | ADC_IGNORE_PRESD1);
 257              		.loc 1 1745 0
 258 0028 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 259 002a 03F0FC03 		and	r3, r3, #252
 260 002e 2B70     		strb	r3, [r5]
1746:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR5_REG &= (uint8)~(ADC_IGNORE_PRESA2 | ADC_IGNORE_PRESD2);
 261              		.loc 1 1746 0
 262 0030 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 263 0032 03F0FC03 		and	r3, r3, #252
 264 0036 2370     		strb	r3, [r4]
1747:Generated_Source\PSoC5/ADC.c **** 
1748:Generated_Source\PSoC5/ADC.c ****     CyExitCriticalSection(enableInterrupts);
 265              		.loc 1 1748 0
 266 0038 3046     		mov	r0, r6
 267 003a FFF7FEFF 		bl	CyExitCriticalSection
 268              	.LVL39:
 269 003e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 270              	.LVL40:
 271              	.L23:
 272              		.align	2
 273              	.L22:
 274 0040 F8460040 		.word	1073759992
 275 0044 F9460040 		.word	1073759993
 276 0048 92580040 		.word	1073764498
 277              		.cfi_endproc
 278              	.LFE22:
 279              		.size	ADC_SetDSMRef0Reg, .-ADC_SetDSMRef0Reg
 280              		.section	.text.ADC_InitConfig,"ax",%progbits
 281              		.align	2
 282              		.thumb
 283              		.thumb_func
 284              		.type	ADC_InitConfig, %function
 285              	ADC_InitConfig:
 286              	.LFB19:
1248:Generated_Source\PSoC5/ADC.c ****     ADC_stopConversion = 0u;
 287              		.loc 1 1248 0
 288              		.cfi_startproc
 289              		@ args = 0, pretend = 0, frame = 0
 290              		@ frame_needed = 0, uses_anonymous_args = 0
 291              	.LVL41:
 292 0000 70B5     		push	{r4, r5, r6, lr}
 293              		.cfi_def_cfa_offset 16
 294              		.cfi_offset 4, -16
 295              		.cfi_offset 5, -12
 296              		.cfi_offset 6, -8
 297              		.cfi_offset 14, -4
 298 0002 0446     		mov	r4, r0
1249:Generated_Source\PSoC5/ADC.c **** 
 299              		.loc 1 1249 0
 300 0004 0022     		movs	r2, #0
 301 0006 604B     		ldr	r3, .L28
 302 0008 1A72     		strb	r2, [r3, #8]
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 37


1251:Generated_Source\PSoC5/ADC.c ****     {
 303              		.loc 1 1251 0
 304 000a 0128     		cmp	r0, #1
 305 000c 5BD1     		bne	.L25
1254:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_SHIFT1_REG  = ADC_CFG1_DEC_SHIFT1;
 306              		.loc 1 1254 0
 307 000e 7422     		movs	r2, #116
 308 0010 5E4B     		ldr	r3, .L28+4
 309 0012 1A70     		strb	r2, [r3]
1255:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_SHIFT2_REG  = ADC_CFG1_DEC_SHIFT2;
 310              		.loc 1 1255 0
 311 0014 0025     		movs	r5, #0
 312 0016 0233     		adds	r3, r3, #2
 313 0018 1D70     		strb	r5, [r3]
1256:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_DR2_REG     = ADC_CFG1_DEC_DR2;
 314              		.loc 1 1256 0
 315 001a 0922     		movs	r2, #9
 316 001c 0133     		adds	r3, r3, #1
 317 001e 1A70     		strb	r2, [r3]
1257:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_DR2H_REG    = ADC_CFG1_DEC_DR2H;
 318              		.loc 1 1257 0
 319 0020 7F23     		movs	r3, #127
 320 0022 5B4A     		ldr	r2, .L28+8
 321 0024 1370     		strb	r3, [r2]
1258:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_DR1_REG     = ADC_CFG1_DEC_DR1;
 322              		.loc 1 1258 0
 323 0026 0132     		adds	r2, r2, #1
 324 0028 1570     		strb	r5, [r2]
1259:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_OCOR_REG    = ADC_CFG1_DEC_OCOR;
 325              		.loc 1 1259 0
 326 002a 0132     		adds	r2, r2, #1
 327 002c 1370     		strb	r3, [r2]
1260:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_OCORM_REG   = ADC_CFG1_DEC_OCORM;
 328              		.loc 1 1260 0
 329 002e 594B     		ldr	r3, .L28+12
 330 0030 1D70     		strb	r5, [r3]
1261:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_OCORH_REG   = ADC_CFG1_DEC_OCORH;
 331              		.loc 1 1261 0
 332 0032 0133     		adds	r3, r3, #1
 333 0034 1D70     		strb	r5, [r3]
1262:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_COHER_REG   = ADC_CFG1_DEC_COHER;
 334              		.loc 1 1262 0
 335 0036 0133     		adds	r3, r3, #1
 336 0038 1D70     		strb	r5, [r3]
1263:Generated_Source\PSoC5/ADC.c **** 
 337              		.loc 1 1263 0
 338 003a 0126     		movs	r6, #1
 339 003c 0A33     		adds	r3, r3, #10
 340 003e 1E70     		strb	r6, [r3]
1265:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR5_REG     = ADC_CFG1_DSM_CR5;
 341              		.loc 1 1265 0
 342 0040 5022     		movs	r2, #80
 343 0042 03F52763 		add	r3, r3, #2672
 344 0046 1A70     		strb	r2, [r3]
1266:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR6_REG     = ADC_CFG1_DSM_CR6;
 345              		.loc 1 1266 0
 346 0048 0722     		movs	r2, #7
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 38


 347 004a 0133     		adds	r3, r3, #1
 348 004c 1A70     		strb	r2, [r3]
1267:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR7_REG     = ADC_CFG1_DSM_CR7;
 349              		.loc 1 1267 0
 350 004e 2922     		movs	r2, #41
 351 0050 0133     		adds	r3, r3, #1
 352 0052 1A70     		strb	r2, [r3]
1268:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR10_REG    = ADC_CFG1_DSM_CR10;
 353              		.loc 1 1268 0
 354 0054 0133     		adds	r3, r3, #1
 355 0056 1D70     		strb	r5, [r3]
1269:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR11_REG    = ADC_CFG1_DSM_CR11;
 356              		.loc 1 1269 0
 357 0058 5522     		movs	r2, #85
 358 005a 0333     		adds	r3, r3, #3
 359 005c 1A70     		strb	r2, [r3]
1270:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR12_REG    = ADC_CFG1_DSM_CR12;
 360              		.loc 1 1270 0
 361 005e 5A22     		movs	r2, #90
 362 0060 0133     		adds	r3, r3, #1
 363 0062 1A70     		strb	r2, [r3]
1271:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR14_REG    = ADC_CFG1_DSM_CR14;
 364              		.loc 1 1271 0
 365 0064 0133     		adds	r3, r3, #1
 366 0066 1D70     		strb	r5, [r3]
1272:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR15_REG    = ADC_CFG1_DSM_CR15;
 367              		.loc 1 1272 0
 368 0068 0222     		movs	r2, #2
 369 006a 0233     		adds	r3, r3, #2
 370 006c 1A70     		strb	r2, [r3]
1273:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR16_REG    = ADC_CFG1_DSM_CR16;
 371              		.loc 1 1273 0
 372 006e 1222     		movs	r2, #18
 373 0070 0133     		adds	r3, r3, #1
 374 0072 1A70     		strb	r2, [r3]
1274:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR17_REG    = ADC_CFG1_DSM_CR17;
 375              		.loc 1 1274 0
 376 0074 2822     		movs	r2, #40
 377 0076 0133     		adds	r3, r3, #1
 378 0078 1A70     		strb	r2, [r3]
1275:Generated_Source\PSoC5/ADC.c ****         /* Set DSM_REF0_REG by disabling and enabling the PRESS circuit */
 379              		.loc 1 1275 0
 380 007a EB22     		movs	r2, #235
 381 007c 0133     		adds	r3, r3, #1
 382 007e 1A70     		strb	r2, [r3]
1277:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_REF2_REG    = ADC_CFG1_DSM_REF2;
 383              		.loc 1 1277 0
 384 0080 4420     		movs	r0, #68
 385              	.LVL42:
 386 0082 FFF7FEFF 		bl	ADC_SetDSMRef0Reg
 387              	.LVL43:
1278:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_REF3_REG    = ADC_CFG1_DSM_REF3;
 388              		.loc 1 1278 0
 389 0086 5822     		movs	r2, #88
 390 0088 434B     		ldr	r3, .L28+16
 391 008a 1A70     		strb	r2, [r3]
1279:Generated_Source\PSoC5/ADC.c **** 
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 39


 392              		.loc 1 1279 0
 393 008c 0133     		adds	r3, r3, #1
 394 008e 1D70     		strb	r5, [r3]
1281:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_BUF1_REG    = ADC_CFG1_DSM_BUF1;
 395              		.loc 1 1281 0
 396 0090 0533     		adds	r3, r3, #5
 397 0092 1E70     		strb	r6, [r3]
1282:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_BUF2_REG    = ADC_CFG1_DSM_BUF2;
 398              		.loc 1 1282 0
 399 0094 0133     		adds	r3, r3, #1
 400 0096 1E70     		strb	r6, [r3]
1283:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_BUF3_REG    = ADC_CFG1_DSM_BUF3;
 401              		.loc 1 1283 0
 402 0098 0133     		adds	r3, r3, #1
 403 009a 1D70     		strb	r5, [r3]
1284:Generated_Source\PSoC5/ADC.c **** 
 404              		.loc 1 1284 0
 405 009c 0A22     		movs	r2, #10
 406 009e 0133     		adds	r3, r3, #1
 407 00a0 1A70     		strb	r2, [r3]
1293:Generated_Source\PSoC5/ADC.c ****             #endif /* ADC_IR_VSSA_TO_2VREF) */
 408              		.loc 1 1293 0
 409 00a2 2846     		mov	r0, r5
 410 00a4 FFF7FEFF 		bl	ADC_AMux_Select
 411              	.LVL44:
1305:Generated_Source\PSoC5/ADC.c **** 
 412              		.loc 1 1305 0
 413 00a8 3C4A     		ldr	r2, .L28+20
 414 00aa 3D4B     		ldr	r3, .L28+24
 415 00ac 1A60     		str	r2, [r3]
1307:Generated_Source\PSoC5/ADC.c **** 
 416              		.loc 1 1307 0
 417 00ae 3146     		mov	r1, r6
 418 00b0 0420     		movs	r0, #4
 419 00b2 FFF7FEFF 		bl	ADC_Ext_CP_Clk_SetDividerRegister
 420              	.LVL45:
1311:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC_DEFAULT_INTERNAL_CLK */
 421              		.loc 1 1311 0
 422 00b6 3146     		mov	r1, r6
 423 00b8 1120     		movs	r0, #17
 424 00ba FFF7FEFF 		bl	ADC_theACLK_SetDividerRegister
 425              	.LVL46:
1316:Generated_Source\PSoC5/ADC.c ****         #endif   /* End ADC_IRQ_REMOVE */
 426              		.loc 1 1316 0
 427 00be 3949     		ldr	r1, .L28+28
 428 00c0 1D20     		movs	r0, #29
 429 00c2 FFF7FEFF 		bl	CyIntSetVector
 430              	.LVL47:
 431              	.L25:
1321:Generated_Source\PSoC5/ADC.c ****         {
 432              		.loc 1 1321 0
 433 00c6 022C     		cmp	r4, #2
 434 00c8 5DD1     		bne	.L24
1324:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_SHIFT1_REG  = ADC_CFG2_DEC_SHIFT1;
 435              		.loc 1 1324 0
 436 00ca 3822     		movs	r2, #56
 437 00cc 2F4B     		ldr	r3, .L28+4
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 40


 438 00ce 1A70     		strb	r2, [r3]
1325:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_SHIFT2_REG  = ADC_CFG2_DEC_SHIFT2;
 439              		.loc 1 1325 0
 440 00d0 0422     		movs	r2, #4
 441 00d2 0233     		adds	r3, r3, #2
 442 00d4 1A70     		strb	r2, [r3]
1326:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR2_REG     = ADC_CFG2_DEC_DR2;
 443              		.loc 1 1326 0
 444 00d6 0622     		movs	r2, #6
 445 00d8 0133     		adds	r3, r3, #1
 446 00da 1A70     		strb	r2, [r3]
1327:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR2H_REG    = ADC_CFG2_DEC_DR2H;
 447              		.loc 1 1327 0
 448 00dc 0024     		movs	r4, #0
 449 00de 0133     		adds	r3, r3, #1
 450 00e0 1C70     		strb	r4, [r3]
1328:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR1_REG     = ADC_CFG2_DEC_DR1;
 451              		.loc 1 1328 0
 452 00e2 0133     		adds	r3, r3, #1
 453 00e4 1C70     		strb	r4, [r3]
1329:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCOR_REG    = ADC_CFG2_DEC_OCOR;
 454              		.loc 1 1329 0
 455 00e6 3F22     		movs	r2, #63
 456 00e8 0133     		adds	r3, r3, #1
 457 00ea 1A70     		strb	r2, [r3]
1330:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCORM_REG   = ADC_CFG2_DEC_OCORM;
 458              		.loc 1 1330 0
 459 00ec 0233     		adds	r3, r3, #2
 460 00ee 1C70     		strb	r4, [r3]
1331:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCORH_REG   = ADC_CFG2_DEC_OCORH;
 461              		.loc 1 1331 0
 462 00f0 0133     		adds	r3, r3, #1
 463 00f2 1C70     		strb	r4, [r3]
1332:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_COHER_REG   = ADC_CFG2_DEC_COHER;
 464              		.loc 1 1332 0
 465 00f4 0133     		adds	r3, r3, #1
 466 00f6 1C70     		strb	r4, [r3]
1333:Generated_Source\PSoC5/ADC.c **** 
 467              		.loc 1 1333 0
 468 00f8 0125     		movs	r5, #1
 469 00fa 0A33     		adds	r3, r3, #10
 470 00fc 1D70     		strb	r5, [r3]
1335:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR5_REG     = ADC_CFG2_DSM_CR5;
 471              		.loc 1 1335 0
 472 00fe 5022     		movs	r2, #80
 473 0100 03F52763 		add	r3, r3, #2672
 474 0104 1A70     		strb	r2, [r3]
1336:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR6_REG     = ADC_CFG2_DSM_CR6;
 475              		.loc 1 1336 0
 476 0106 2722     		movs	r2, #39
 477 0108 0133     		adds	r3, r3, #1
 478 010a 1A70     		strb	r2, [r3]
1337:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR7_REG     = ADC_CFG2_DSM_CR7;
 479              		.loc 1 1337 0
 480 010c 2C22     		movs	r2, #44
 481 010e 0133     		adds	r3, r3, #1
 482 0110 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 41


1338:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR10_REG    = ADC_CFG2_DSM_CR10;
 483              		.loc 1 1338 0
 484 0112 0133     		adds	r3, r3, #1
 485 0114 1C70     		strb	r4, [r3]
1339:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR11_REG    = ADC_CFG2_DSM_CR11;
 486              		.loc 1 1339 0
 487 0116 5522     		movs	r2, #85
 488 0118 0333     		adds	r3, r3, #3
 489 011a 1A70     		strb	r2, [r3]
1340:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR12_REG    = ADC_CFG2_DSM_CR12;
 490              		.loc 1 1340 0
 491 011c 5A22     		movs	r2, #90
 492 011e 0133     		adds	r3, r3, #1
 493 0120 1A70     		strb	r2, [r3]
1341:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR14_REG    = ADC_CFG2_DSM_CR14;
 494              		.loc 1 1341 0
 495 0122 0526     		movs	r6, #5
 496 0124 0133     		adds	r3, r3, #1
 497 0126 1E70     		strb	r6, [r3]
1342:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR15_REG    = ADC_CFG2_DSM_CR15;
 498              		.loc 1 1342 0
 499 0128 0233     		adds	r3, r3, #2
 500 012a 1D70     		strb	r5, [r3]
1343:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR16_REG    = ADC_CFG2_DSM_CR16;
 501              		.loc 1 1343 0
 502 012c 1122     		movs	r2, #17
 503 012e 0133     		adds	r3, r3, #1
 504 0130 1A70     		strb	r2, [r3]
1344:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR17_REG    = ADC_CFG2_DSM_CR17;
 505              		.loc 1 1344 0
 506 0132 1922     		movs	r2, #25
 507 0134 0133     		adds	r3, r3, #1
 508 0136 1A70     		strb	r2, [r3]
1345:Generated_Source\PSoC5/ADC.c ****             /* Set DSM_REF0_REG by disabling and enabling the PRESS cirucit */
 509              		.loc 1 1345 0
 510 0138 9722     		movs	r2, #151
 511 013a 0133     		adds	r3, r3, #1
 512 013c 1A70     		strb	r2, [r3]
1347:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_REF2_REG    = ADC_CFG2_DSM_REF2;
 513              		.loc 1 1347 0
 514 013e 4420     		movs	r0, #68
 515 0140 FFF7FEFF 		bl	ADC_SetDSMRef0Reg
 516              	.LVL48:
1348:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_REF3_REG    = ADC_CFG2_DSM_REF3;
 517              		.loc 1 1348 0
 518 0144 5822     		movs	r2, #88
 519 0146 144B     		ldr	r3, .L28+16
 520 0148 1A70     		strb	r2, [r3]
1349:Generated_Source\PSoC5/ADC.c **** 
 521              		.loc 1 1349 0
 522 014a 0133     		adds	r3, r3, #1
 523 014c 1C70     		strb	r4, [r3]
1351:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF1_REG    = ADC_CFG2_DSM_BUF1;
 524              		.loc 1 1351 0
 525 014e 0533     		adds	r3, r3, #5
 526 0150 1E70     		strb	r6, [r3]
1352:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF2_REG    = ADC_CFG2_DSM_BUF2;
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 42


 527              		.loc 1 1352 0
 528 0152 0222     		movs	r2, #2
 529 0154 0133     		adds	r3, r3, #1
 530 0156 1A70     		strb	r2, [r3]
1353:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF3_REG    = ADC_CFG2_DSM_BUF3;
 531              		.loc 1 1353 0
 532 0158 0133     		adds	r3, r3, #1
 533 015a 1C70     		strb	r4, [r3]
1354:Generated_Source\PSoC5/ADC.c **** 
 534              		.loc 1 1354 0
 535 015c 0133     		adds	r3, r3, #1
 536 015e 1C70     		strb	r4, [r3]
1364:Generated_Source\PSoC5/ADC.c ****                 #endif /* ADC_IR_VSSA_TO_2VREF) */
 537              		.loc 1 1364 0
 538 0160 2046     		mov	r0, r4
 539 0162 FFF7FEFF 		bl	ADC_AMux_Select
 540              	.LVL49:
1376:Generated_Source\PSoC5/ADC.c **** 
 541              		.loc 1 1376 0
 542 0166 4FF47A42 		mov	r2, #64000
 543 016a 0D4B     		ldr	r3, .L28+24
 544 016c 1A60     		str	r2, [r3]
1378:Generated_Source\PSoC5/ADC.c **** 
 545              		.loc 1 1378 0
 546 016e 2946     		mov	r1, r5
 547 0170 3046     		mov	r0, r6
 548 0172 FFF7FEFF 		bl	ADC_Ext_CP_Clk_SetDividerRegister
 549              	.LVL50:
1382:Generated_Source\PSoC5/ADC.c ****             #endif /* ADC_DEFAULT_INTERNAL_CLK */
 550              		.loc 1 1382 0
 551 0176 2946     		mov	r1, r5
 552 0178 2520     		movs	r0, #37
 553 017a FFF7FEFF 		bl	ADC_theACLK_SetDividerRegister
 554              	.LVL51:
1387:Generated_Source\PSoC5/ADC.c ****             #endif   /* End ADC_IRQ_REMOVE */
 555              		.loc 1 1387 0
 556 017e 0A49     		ldr	r1, .L28+32
 557 0180 1D20     		movs	r0, #29
 558 0182 FFF7FEFF 		bl	CyIntSetVector
 559              	.LVL52:
 560              	.L24:
 561 0186 70BD     		pop	{r4, r5, r6, pc}
 562              	.L29:
 563              		.align	2
 564              	.L28:
 565 0188 00000000 		.word	.LANCHOR0
 566 018c 004E0040 		.word	1073761792
 567 0190 044E0040 		.word	1073761796
 568 0194 084E0040 		.word	1073761800
 569 0198 94580040 		.word	1073764500
 570 019c AB9A0200 		.word	170667
 571 01a0 00000000 		.word	ADC_CountsPerVolt
 572 01a4 00000000 		.word	ADC_ISR1
 573 01a8 00000000 		.word	ADC_ISR2
 574              		.cfi_endproc
 575              	.LFE19:
 576              		.size	ADC_InitConfig, .-ADC_InitConfig
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 43


 577              		.section	.text.ADC_Init,"ax",%progbits
 578              		.align	2
 579              		.global	ADC_Init
 580              		.thumb
 581              		.thumb_func
 582              		.type	ADC_Init, %function
 583              	ADC_Init:
 584              	.LFB0:
  92:Generated_Source\PSoC5/ADC.c **** 
 585              		.loc 1 92 0
 586              		.cfi_startproc
 587              		@ args = 0, pretend = 0, frame = 0
 588              		@ frame_needed = 0, uses_anonymous_args = 0
 589 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 590              		.cfi_def_cfa_offset 20
 591              		.cfi_offset 4, -20
 592              		.cfi_offset 5, -16
 593              		.cfi_offset 6, -12
 594              		.cfi_offset 7, -8
 595              		.cfi_offset 14, -4
 596 0002 83B0     		sub	sp, sp, #12
 597              		.cfi_def_cfa_offset 32
  94:Generated_Source\PSoC5/ADC.c ****     ADC_convDone = 0u;
 598              		.loc 1 94 0
 599 0004 2C4D     		ldr	r5, .L32
 600 0006 0127     		movs	r7, #1
 601 0008 2F70     		strb	r7, [r5]
  95:Generated_Source\PSoC5/ADC.c **** 
 602              		.loc 1 95 0
 603 000a 2C4E     		ldr	r6, .L32+4
 604 000c 0024     		movs	r4, #0
 605 000e 7472     		strb	r4, [r6, #9]
  97:Generated_Source\PSoC5/ADC.c **** 
 606              		.loc 1 97 0
 607 0010 1020     		movs	r0, #16
 608 0012 FFF7FEFF 		bl	ADC_Ext_CP_Clk_SetModeRegister
 609              	.LVL53:
 101:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_INTERNAL_CLK */
 610              		.loc 1 101 0
 611 0016 1020     		movs	r0, #16
 612 0018 FFF7FEFF 		bl	ADC_theACLK_SetModeRegister
 613              	.LVL54:
 106:Generated_Source\PSoC5/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 614              		.loc 1 106 0
 615 001c 0721     		movs	r1, #7
 616 001e 1D20     		movs	r0, #29
 617 0020 FFF7FEFF 		bl	CyIntSetPriority
 618              	.LVL55:
 110:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_DEM1_REG    = ADC_CFG1_DSM_DEM1;
 619              		.loc 1 110 0
 620 0024 0422     		movs	r2, #4
 621 0026 264B     		ldr	r3, .L32+8
 622 0028 1A70     		strb	r2, [r3]
 111:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_MISC_REG    = ADC_CFG1_DSM_MISC;
 623              		.loc 1 111 0
 624 002a 0133     		adds	r3, r3, #1
 625 002c 1C70     		strb	r4, [r3]
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 44


 112:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CLK_REG    |= ADC_CFG1_DSM_CLK;
 626              		.loc 1 112 0
 627 002e 0733     		adds	r3, r3, #7
 628 0030 1C70     		strb	r4, [r3]
 113:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_REF1_REG    = ADC_CFG1_DSM_REF1;
 629              		.loc 1 113 0
 630 0032 244A     		ldr	r2, .L32+12
 631 0034 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 632 0036 43F01803 		orr	r3, r3, #24
 633 003a 1370     		strb	r3, [r2]
 114:Generated_Source\PSoC5/ADC.c **** 
 634              		.loc 1 114 0
 635 003c 224B     		ldr	r3, .L32+16
 636 003e 1C70     		strb	r4, [r3]
 116:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_OUT1_REG    = ADC_CFG1_DSM_OUT1;
 637              		.loc 1 116 0
 638 0040 03F2F523 		addw	r3, r3, #757
 639 0044 1C70     		strb	r4, [r3]
 117:Generated_Source\PSoC5/ADC.c **** 
 640              		.loc 1 117 0
 641 0046 0133     		adds	r3, r3, #1
 642 0048 1C70     		strb	r4, [r3]
 119:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR1_REG     = ADC_CFG1_DSM_CR1;
 643              		.loc 1 119 0
 644 004a 0A22     		movs	r2, #10
 645 004c A3F20933 		subw	r3, r3, #777
 646 0050 1A70     		strb	r2, [r3]
 120:Generated_Source\PSoC5/ADC.c **** #if(ADC_MI_ENABLE != 0u) /* Enable Modulator Input */
 647              		.loc 1 120 0
 648 0052 0133     		adds	r3, r3, #1
 649 0054 1C70     		strb	r4, [r3]
 124:Generated_Source\PSoC5/ADC.c **** #endif /* ADC_MI_ENABLE != 0u*/    
 650              		.loc 1 124 0
 651 0056 0233     		adds	r3, r3, #2
 652 0058 1C70     		strb	r4, [r3]
 126:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR9_REG     = ADC_CFG1_DSM_CR9;
 653              		.loc 1 126 0
 654 005a 5B22     		movs	r2, #91
 655 005c 0533     		adds	r3, r3, #5
 656 005e 1A70     		strb	r2, [r3]
 127:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR13_REG    = ADC_CFG1_DSM_CR13;
 657              		.loc 1 127 0
 658 0060 5E22     		movs	r2, #94
 659 0062 0133     		adds	r3, r3, #1
 660 0064 1A70     		strb	r2, [r3]
 128:Generated_Source\PSoC5/ADC.c **** 
 661              		.loc 1 128 0
 662 0066 0433     		adds	r3, r3, #4
 663 0068 1C70     		strb	r4, [r3]
 130:Generated_Source\PSoC5/ADC.c **** 
 664              		.loc 1 130 0
 665 006a 1423     		movs	r3, #20
 666 006c 174A     		ldr	r2, .L32+20
 667 006e 1370     		strb	r3, [r2]
 133:Generated_Source\PSoC5/ADC.c ****                                       ADC_CFG1_IDEAL_DEC_GAIN,
 668              		.loc 1 133 0
 669 0070 0097     		str	r7, [sp]
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 45


 670 0072 4FF40042 		mov	r2, #32768
 671 0076 47F60271 		movw	r1, #32514
 672 007a 0320     		movs	r0, #3
 673 007c FFF7FEFF 		bl	ADC_GainCompensation
 674              	.LVL56:
 139:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG2_IDEAL_DEC_GAIN,
 675              		.loc 1 139 0
 676 0080 0223     		movs	r3, #2
 677 0082 0093     		str	r3, [sp]
 678 0084 1023     		movs	r3, #16
 679 0086 4FF40042 		mov	r2, #32768
 680 008a 49F2DA01 		movw	r1, #37082
 681 008e 2046     		mov	r0, r4
 682 0090 FFF7FEFF 		bl	ADC_GainCompensation
 683              	.LVL57:
 161:Generated_Source\PSoC5/ADC.c ****     CY_SET_REG16(ADC_DEC_GCOR_16B_PTR, ADC_gcor[ADC_Config - 1u].gcor);
 684              		.loc 1 161 0
 685 0094 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 686 0096 013B     		subs	r3, r3, #1
 687 0098 06EB8303 		add	r3, r6, r3, lsl #2
 688 009c 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 689 009e 0C4B     		ldr	r3, .L32+24
 690 00a0 1A70     		strb	r2, [r3]
 162:Generated_Source\PSoC5/ADC.c **** 
 691              		.loc 1 162 0
 692 00a2 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 693 00a4 013B     		subs	r3, r3, #1
 694 00a6 36F82320 		ldrh	r2, [r6, r3, lsl #2]
 695 00aa 0A4B     		ldr	r3, .L32+28
 696 00ac 1A80     		strh	r2, [r3]	@ movhi
 165:Generated_Source\PSoC5/ADC.c **** }
 697              		.loc 1 165 0
 698 00ae 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 699 00b0 FFF7FEFF 		bl	ADC_InitConfig
 700              	.LVL58:
 166:Generated_Source\PSoC5/ADC.c **** 
 701              		.loc 1 166 0
 702 00b4 03B0     		add	sp, sp, #12
 703              		.cfi_def_cfa_offset 20
 704              		@ sp needed
 705 00b6 F0BD     		pop	{r4, r5, r6, r7, pc}
 706              	.L33:
 707              		.align	2
 708              	.L32:
 709 00b8 00000000 		.word	.LANCHOR1
 710 00bc 00000000 		.word	.LANCHOR0
 711 00c0 96580040 		.word	1073764502
 712 00c4 075B0040 		.word	1073765127
 713 00c8 93580040 		.word	1073764499
 714 00cc 014E0040 		.word	1073761793
 715 00d0 0E4E0040 		.word	1073761806
 716 00d4 0C4E0040 		.word	1073761804
 717              		.cfi_endproc
 718              	.LFE0:
 719              		.size	ADC_Init, .-ADC_Init
 720              		.section	.text.ADC_Enable,"ax",%progbits
 721              		.align	2
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 46


 722              		.global	ADC_Enable
 723              		.thumb
 724              		.thumb_func
 725              		.type	ADC_Enable, %function
 726              	ADC_Enable:
 727              	.LFB1:
 187:Generated_Source\PSoC5/ADC.c **** 	uint8 config;
 728              		.loc 1 187 0
 729              		.cfi_startproc
 730              		@ args = 0, pretend = 0, frame = 0
 731              		@ frame_needed = 0, uses_anonymous_args = 0
 732 0000 70B5     		push	{r4, r5, r6, lr}
 733              		.cfi_def_cfa_offset 16
 734              		.cfi_offset 4, -16
 735              		.cfi_offset 5, -12
 736              		.cfi_offset 6, -8
 737              		.cfi_offset 14, -4
 190:Generated_Source\PSoC5/ADC.c **** 
 738              		.loc 1 190 0
 739 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 740              	.LVL59:
 741 0006 0646     		mov	r6, r0
 742              	.LVL60:
 193:Generated_Source\PSoC5/ADC.c ****     
 743              		.loc 1 193 0
 744 0008 2A4B     		ldr	r3, .L36
 745 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 746              	.LVL61:
 196:Generated_Source\PSoC5/ADC.c ****     ADC_PWRMGR_DSM_REG |= ADC_ACT_PWR_DSM_EN;
 747              		.loc 1 196 0
 748 000c 2A4B     		ldr	r3, .L36+4
 749 000e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 750 0010 42F00102 		orr	r2, r2, #1
 751 0014 1A70     		strb	r2, [r3]
 197:Generated_Source\PSoC5/ADC.c **** 
 752              		.loc 1 197 0
 753 0016 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 754 0018 42F01002 		orr	r2, r2, #16
 755 001c 1A70     		strb	r2, [r3]
 200:Generated_Source\PSoC5/ADC.c ****     ADC_STBY_PWRMGR_DSM_REG |= ADC_STBY_PWR_DSM_EN;
 756              		.loc 1 200 0
 757 001e 1033     		adds	r3, r3, #16
 758 0020 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 759 0022 42F00102 		orr	r2, r2, #1
 760 0026 1A70     		strb	r2, [r3]
 201:Generated_Source\PSoC5/ADC.c **** 
 761              		.loc 1 201 0
 762 0028 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 763 002a 42F01002 		orr	r2, r2, #16
 764 002e 1A70     		strb	r2, [r3]
 204:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR5_REG |= ADC_IGNORE_PRESA2;
 765              		.loc 1 204 0
 766 0030 224D     		ldr	r5, .L36+8
 767 0032 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 768 0034 43F00203 		orr	r3, r3, #2
 769 0038 2B70     		strb	r3, [r5]
 205:Generated_Source\PSoC5/ADC.c **** 
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 47


 770              		.loc 1 205 0
 771 003a 214C     		ldr	r4, .L36+12
 772 003c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 773 003e 43F00203 		orr	r3, r3, #2
 774 0042 2370     		strb	r3, [r4]
 207:Generated_Source\PSoC5/ADC.c **** 
 775              		.loc 1 207 0
 776 0044 1F4A     		ldr	r2, .L36+16
 777 0046 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 778 0048 43F00303 		orr	r3, r3, #3
 779 004c 1370     		strb	r3, [r2]
 273:Generated_Source\PSoC5/ADC.c **** 
 780              		.loc 1 273 0
 781 004e 0320     		movs	r0, #3
 782 0050 FFF7FEFF 		bl	CyDelayUs
 783              	.LVL62:
 276:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR5_REG &= (uint8)~ADC_IGNORE_PRESA2;
 784              		.loc 1 276 0
 785 0054 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 786 0056 03F0FD03 		and	r3, r3, #253
 787 005a 2B70     		strb	r3, [r5]
 277:Generated_Source\PSoC5/ADC.c **** 
 788              		.loc 1 277 0
 789 005c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 790 005e 03F0FD03 		and	r3, r3, #253
 791 0062 2370     		strb	r3, [r4]
 280:Generated_Source\PSoC5/ADC.c **** 
 792              		.loc 1 280 0
 793 0064 184A     		ldr	r2, .L36+20
 794 0066 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 795 0068 43F00603 		orr	r3, r3, #6
 796 006c 1370     		strb	r3, [r2]
 283:Generated_Source\PSoC5/ADC.c **** 
 797              		.loc 1 283 0
 798 006e 7A22     		movs	r2, #122
 799 0070 164B     		ldr	r3, .L36+24
 800 0072 1A70     		strb	r2, [r3]
 287:Generated_Source\PSoC5/ADC.c ****         ADC_STBY_PWRMGR_CLK_REG |= ADC_STBY_PWR_CLK_EN;
 801              		.loc 1 287 0
 802 0074 164A     		ldr	r2, .L36+28
 803 0076 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 804 0078 43F00103 		orr	r3, r3, #1
 805 007c 1370     		strb	r3, [r2]
 288:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_INTERNAL_CLK */
 806              		.loc 1 288 0
 807 007e 1032     		adds	r2, r2, #16
 808 0080 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 809 0082 43F00103 		orr	r3, r3, #1
 810 0086 1370     		strb	r3, [r2]
 292:Generated_Source\PSoC5/ADC.c ****     ADC_STBY_PWRMGR_CHARGE_PUMP_CLK_REG |= ADC_STBY_PWR_CHARGE_PUMP_CLK_EN;
 811              		.loc 1 292 0
 812 0088 0F3A     		subs	r2, r2, #15
 813 008a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 814 008c 43F00103 		orr	r3, r3, #1
 815 0090 1370     		strb	r3, [r2]
 293:Generated_Source\PSoC5/ADC.c **** 
 816              		.loc 1 293 0
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 48


 817 0092 1032     		adds	r2, r2, #16
 818 0094 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 819 0096 43F00103 		orr	r3, r3, #1
 820 009a 1370     		strb	r3, [r2]
 297:Generated_Source\PSoC5/ADC.c ****         /* Enable interrupt */
 821              		.loc 1 297 0
 822 009c 4FF00053 		mov	r3, #536870912
 823 00a0 0C4A     		ldr	r2, .L36+32
 824 00a2 1360     		str	r3, [r2]
 299:Generated_Source\PSoC5/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 825              		.loc 1 299 0
 826 00a4 A2F5C072 		sub	r2, r2, #384
 827 00a8 1360     		str	r3, [r2]
 302:Generated_Source\PSoC5/ADC.c **** 
 828              		.loc 1 302 0
 829 00aa 3046     		mov	r0, r6
 830 00ac FFF7FEFF 		bl	CyExitCriticalSection
 831              	.LVL63:
 832 00b0 70BD     		pop	{r4, r5, r6, pc}
 833              	.LVL64:
 834              	.L37:
 835 00b2 00BF     		.align	2
 836              	.L36:
 837 00b4 00000000 		.word	.LANCHOR1
 838 00b8 AA430040 		.word	1073759146
 839 00bc F8460040 		.word	1073759992
 840 00c0 F9460040 		.word	1073759993
 841 00c4 91580040 		.word	1073764497
 842 00c8 77580040 		.word	1073764471
 843 00cc 82580040 		.word	1073764482
 844 00d0 A1430040 		.word	1073759137
 845 00d4 80E200E0 		.word	-536812928
 846              		.cfi_endproc
 847              	.LFE1:
 848              		.size	ADC_Enable, .-ADC_Enable
 849              		.section	.text.ADC_Start,"ax",%progbits
 850              		.align	2
 851              		.global	ADC_Start
 852              		.thumb
 853              		.thumb_func
 854              		.type	ADC_Start, %function
 855              	ADC_Start:
 856              	.LFB2:
 335:Generated_Source\PSoC5/ADC.c ****     if(ADC_initVar == 0u)
 857              		.loc 1 335 0
 858              		.cfi_startproc
 859              		@ args = 0, pretend = 0, frame = 0
 860              		@ frame_needed = 0, uses_anonymous_args = 0
 861 0000 08B5     		push	{r3, lr}
 862              		.cfi_def_cfa_offset 8
 863              		.cfi_offset 3, -8
 864              		.cfi_offset 14, -4
 336:Generated_Source\PSoC5/ADC.c ****     {
 865              		.loc 1 336 0
 866 0002 084B     		ldr	r3, .L42
 867 0004 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 868 0006 4BB9     		cbnz	r3, .L39
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 49


 338:Generated_Source\PSoC5/ADC.c ****         {
 869              		.loc 1 338 0
 870 0008 064B     		ldr	r3, .L42
 871 000a DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 872 000c 13F0FF0F 		tst	r3, #255
 873 0010 01D1     		bne	.L40
 340:Generated_Source\PSoC5/ADC.c ****         }
 874              		.loc 1 340 0
 875 0012 FFF7FEFF 		bl	ADC_Init
 876              	.LVL65:
 877              	.L40:
 342:Generated_Source\PSoC5/ADC.c ****     }
 878              		.loc 1 342 0
 879 0016 0122     		movs	r2, #1
 880 0018 024B     		ldr	r3, .L42
 881 001a 9A72     		strb	r2, [r3, #10]
 882              	.L39:
 346:Generated_Source\PSoC5/ADC.c **** }
 883              		.loc 1 346 0
 884 001c FFF7FEFF 		bl	ADC_Enable
 885              	.LVL66:
 886 0020 08BD     		pop	{r3, pc}
 887              	.L43:
 888 0022 00BF     		.align	2
 889              	.L42:
 890 0024 00000000 		.word	.LANCHOR0
 891              		.cfi_endproc
 892              	.LFE2:
 893              		.size	ADC_Start, .-ADC_Start
 894              		.section	.text.ADC_Stop,"ax",%progbits
 895              		.align	2
 896              		.global	ADC_Stop
 897              		.thumb
 898              		.thumb_func
 899              		.type	ADC_Stop, %function
 900              	ADC_Stop:
 901              	.LFB3:
 368:Generated_Source\PSoC5/ADC.c ****     uint8 enableInterrupts;
 902              		.loc 1 368 0
 903              		.cfi_startproc
 904              		@ args = 0, pretend = 0, frame = 0
 905              		@ frame_needed = 0, uses_anonymous_args = 0
 906 0000 70B5     		push	{r4, r5, r6, lr}
 907              		.cfi_def_cfa_offset 16
 908              		.cfi_offset 4, -16
 909              		.cfi_offset 5, -12
 910              		.cfi_offset 6, -8
 911              		.cfi_offset 14, -4
 370:Generated_Source\PSoC5/ADC.c **** 
 912              		.loc 1 370 0
 913 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 914              	.LVL67:
 915 0006 0646     		mov	r6, r0
 916              	.LVL68:
 373:Generated_Source\PSoC5/ADC.c ****     ADC_DEC_SR_REG |=  ADC_DEC_INTR_CLEAR;
 917              		.loc 1 373 0
 918 0008 314A     		ldr	r2, .L46
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 50


 919 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 920 000c 03F0FE03 		and	r3, r3, #254
 921 0010 1370     		strb	r3, [r2]
 374:Generated_Source\PSoC5/ADC.c **** 
 922              		.loc 1 374 0
 923 0012 0132     		adds	r2, r2, #1
 924 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 925 0016 43F00403 		orr	r3, r3, #4
 926 001a 1370     		strb	r3, [r2]
 378:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR5_REG |= ADC_IGNORE_PRESA2;
 927              		.loc 1 378 0
 928 001c 2D4D     		ldr	r5, .L46+4
 929 001e 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 930 0020 43F00203 		orr	r3, r3, #2
 931 0024 2B70     		strb	r3, [r5]
 379:Generated_Source\PSoC5/ADC.c **** 
 932              		.loc 1 379 0
 933 0026 2C4C     		ldr	r4, .L46+8
 934 0028 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 935 002a 43F00203 		orr	r3, r3, #2
 936 002e 2370     		strb	r3, [r4]
 381:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_REF0_REG &= (uint8)~ADC_DSM_EN_BUF_VREF_INN;
 937              		.loc 1 381 0
 938 0030 02F52962 		add	r2, r2, #2704
 939 0034 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 940 0036 03F0FC03 		and	r3, r3, #252
 941 003a 1370     		strb	r3, [r2]
 382:Generated_Source\PSoC5/ADC.c **** 
 942              		.loc 1 382 0
 943 003c 0132     		adds	r2, r2, #1
 944 003e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 945 0040 03F0F703 		and	r3, r3, #247
 946 0044 1370     		strb	r3, [r2]
 385:Generated_Source\PSoC5/ADC.c **** 
 947              		.loc 1 385 0
 948 0046 0320     		movs	r0, #3
 949 0048 FFF7FEFF 		bl	CyDelayUs
 950              	.LVL69:
 388:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR5_REG &= (uint8)~ADC_IGNORE_PRESA2;
 951              		.loc 1 388 0
 952 004c 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 953 004e 03F0FD03 		and	r3, r3, #253
 954 0052 2B70     		strb	r3, [r5]
 389:Generated_Source\PSoC5/ADC.c **** 
 955              		.loc 1 389 0
 956 0054 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 957 0056 03F0FD03 		and	r3, r3, #253
 958 005a 2370     		strb	r3, [r4]
 392:Generated_Source\PSoC5/ADC.c **** 
 959              		.loc 1 392 0
 960 005c 1F4B     		ldr	r3, .L46+12
 961 005e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 962 0060 02F0EF02 		and	r2, r2, #239
 963 0064 1A70     		strb	r2, [r3]
 395:Generated_Source\PSoC5/ADC.c **** 
 964              		.loc 1 395 0
 965 0066 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 51


 966 0068 02F0FE02 		and	r2, r2, #254
 967 006c 1A70     		strb	r2, [r3]
 398:Generated_Source\PSoC5/ADC.c ****     ADC_STBY_PWRMGR_DSM_REG &= (uint8)~ADC_STBY_PWR_DSM_EN;
 968              		.loc 1 398 0
 969 006e 1033     		adds	r3, r3, #16
 970 0070 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 971 0072 02F0FE02 		and	r2, r2, #254
 972 0076 1A70     		strb	r2, [r3]
 399:Generated_Source\PSoC5/ADC.c **** 
 973              		.loc 1 399 0
 974 0078 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 975 007a 02F0EF02 		and	r2, r2, #239
 976 007e 1A70     		strb	r2, [r3]
 402:Generated_Source\PSoC5/ADC.c **** 
 977              		.loc 1 402 0
 978 0080 174A     		ldr	r2, .L46+16
 979 0082 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 980 0084 03F0F903 		and	r3, r3, #249
 981 0088 1370     		strb	r3, [r2]
 406:Generated_Source\PSoC5/ADC.c ****         ADC_STBY_PWRMGR_CLK_REG &= (uint8)~ADC_STBY_PWR_CLK_EN;
 982              		.loc 1 406 0
 983 008a A2F5A652 		sub	r2, r2, #5312
 984 008e 163A     		subs	r2, r2, #22
 985 0090 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 986 0092 03F0FE03 		and	r3, r3, #254
 987 0096 1370     		strb	r3, [r2]
 407:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_INTERNAL_CLK */
 988              		.loc 1 407 0
 989 0098 1032     		adds	r2, r2, #16
 990 009a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 991 009c 03F0FE03 		and	r3, r3, #254
 992 00a0 1370     		strb	r3, [r2]
 411:Generated_Source\PSoC5/ADC.c ****     /* Disable power to charge pump clock */
 993              		.loc 1 411 0
 994 00a2 02F5A652 		add	r2, r2, #5312
 995 00a6 1132     		adds	r2, r2, #17
 996 00a8 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 997 00aa 03F0F703 		and	r3, r3, #247
 998 00ae 1370     		strb	r3, [r2]
 413:Generated_Source\PSoC5/ADC.c ****     ADC_STBY_PWRMGR_CHARGE_PUMP_CLK_REG &= (uint8)~ADC_STBY_PWR_CHARGE_PUMP_CLK_EN;
 999              		.loc 1 413 0
 1000 00b0 A2F5A752 		sub	r2, r2, #5344
 1001 00b4 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1002 00b6 03F0FE03 		and	r3, r3, #254
 1003 00ba 1370     		strb	r3, [r2]
 414:Generated_Source\PSoC5/ADC.c ****     
 1004              		.loc 1 414 0
 1005 00bc 1032     		adds	r2, r2, #16
 1006 00be 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1007 00c0 03F0FE03 		and	r3, r3, #254
 1008 00c4 1370     		strb	r3, [r2]
 416:Generated_Source\PSoC5/ADC.c **** }
 1009              		.loc 1 416 0
 1010 00c6 3046     		mov	r0, r6
 1011 00c8 FFF7FEFF 		bl	CyExitCriticalSection
 1012              	.LVL70:
 1013 00cc 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 52


 1014              	.LVL71:
 1015              	.L47:
 1016 00ce 00BF     		.align	2
 1017              	.L46:
 1018 00d0 004E0040 		.word	1073761792
 1019 00d4 F8460040 		.word	1073759992
 1020 00d8 F9460040 		.word	1073759993
 1021 00dc AA430040 		.word	1073759146
 1022 00e0 77580040 		.word	1073764471
 1023              		.cfi_endproc
 1024              	.LFE3:
 1025              		.size	ADC_Stop, .-ADC_Stop
 1026              		.section	.text.ADC_SetBufferGain,"ax",%progbits
 1027              		.align	2
 1028              		.global	ADC_SetBufferGain
 1029              		.thumb
 1030              		.thumb_func
 1031              		.type	ADC_SetBufferGain, %function
 1032              	ADC_SetBufferGain:
 1033              	.LFB4:
 435:Generated_Source\PSoC5/ADC.c ****     uint8 tmpReg;
 1034              		.loc 1 435 0
 1035              		.cfi_startproc
 1036              		@ args = 0, pretend = 0, frame = 0
 1037              		@ frame_needed = 0, uses_anonymous_args = 0
 1038              		@ link register save eliminated.
 1039              	.LVL72:
 437:Generated_Source\PSoC5/ADC.c ****     tmpReg |= (uint8)(gain << ADC_DSM_GAIN_SHIFT) & ADC_DSM_GAIN_MASK;
 1040              		.loc 1 437 0
 1041 0000 044A     		ldr	r2, .L49
 1042 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1043 0004 03F0F303 		and	r3, r3, #243
 1044              	.LVL73:
 438:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_BUF1_REG = tmpReg;
 1045              		.loc 1 438 0
 1046 0008 8000     		lsls	r0, r0, #2
 1047              	.LVL74:
 1048 000a 00F00C00 		and	r0, r0, #12
 1049 000e 1843     		orrs	r0, r0, r3
 1050              	.LVL75:
 439:Generated_Source\PSoC5/ADC.c **** }
 1051              		.loc 1 439 0
 1052 0010 1070     		strb	r0, [r2]
 1053 0012 7047     		bx	lr
 1054              	.L50:
 1055              		.align	2
 1056              	.L49:
 1057 0014 9B580040 		.word	1073764507
 1058              		.cfi_endproc
 1059              	.LFE4:
 1060              		.size	ADC_SetBufferGain, .-ADC_SetBufferGain
 1061              		.section	.text.ADC_SetCoherency,"ax",%progbits
 1062              		.align	2
 1063              		.global	ADC_SetCoherency
 1064              		.thumb
 1065              		.thumb_func
 1066              		.type	ADC_SetCoherency, %function
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 53


 1067              	ADC_SetCoherency:
 1068              	.LFB5:
 471:Generated_Source\PSoC5/ADC.c ****     uint8 tmpReg;
 1069              		.loc 1 471 0
 1070              		.cfi_startproc
 1071              		@ args = 0, pretend = 0, frame = 0
 1072              		@ frame_needed = 0, uses_anonymous_args = 0
 1073              		@ link register save eliminated.
 1074              	.LVL76:
 474:Generated_Source\PSoC5/ADC.c ****     tmpReg |= coherency & ADC_DEC_SAMP_KEY_MASK;
 1075              		.loc 1 474 0
 1076 0000 044A     		ldr	r2, .L52
 1077 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1078 0004 03F0FC03 		and	r3, r3, #252
 1079              	.LVL77:
 475:Generated_Source\PSoC5/ADC.c ****     ADC_DEC_COHER_REG = tmpReg;
 1080              		.loc 1 475 0
 1081 0008 00F00300 		and	r0, r0, #3
 1082              	.LVL78:
 1083 000c 1843     		orrs	r0, r0, r3
 1084              	.LVL79:
 476:Generated_Source\PSoC5/ADC.c **** }
 1085              		.loc 1 476 0
 1086 000e 1070     		strb	r0, [r2]
 1087 0010 7047     		bx	lr
 1088              	.L53:
 1089 0012 00BF     		.align	2
 1090              	.L52:
 1091 0014 144E0040 		.word	1073761812
 1092              		.cfi_endproc
 1093              	.LFE5:
 1094              		.size	ADC_SetCoherency, .-ADC_SetCoherency
 1095              		.global	__aeabi_ui2f
 1096              		.global	__aeabi_fmul
 1097              		.global	__aeabi_f2d
 1098              		.global	__aeabi_dcmpgt
 1099              		.global	__aeabi_f2uiz
 1100              		.section	.text.ADC_SetGCOR,"ax",%progbits
 1101              		.align	2
 1102              		.global	ADC_SetGCOR
 1103              		.thumb
 1104              		.thumb_func
 1105              		.type	ADC_SetGCOR, %function
 1106              	ADC_SetGCOR:
 1107              	.LFB6:
 511:Generated_Source\PSoC5/ADC.c ****     uint16 tmpReg;
 1108              		.loc 1 511 0
 1109              		.cfi_startproc
 1110              		@ args = 0, pretend = 0, frame = 0
 1111              		@ frame_needed = 0, uses_anonymous_args = 0
 1112              	.LVL80:
 1113 0000 10B5     		push	{r4, lr}
 1114              		.cfi_def_cfa_offset 8
 1115              		.cfi_offset 4, -8
 1116              		.cfi_offset 14, -4
 1117 0002 0446     		mov	r4, r0
 516:Generated_Source\PSoC5/ADC.c ****     tmpValue = ((float32)tmpReg / (float32)ADC_IDEAL_GAIN_CONST);
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 54


 1118              		.loc 1 516 0
 1119 0004 184B     		ldr	r3, .L58+8
 1120 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1121 0008 013B     		subs	r3, r3, #1
 1122              	.LVL81:
 517:Generated_Source\PSoC5/ADC.c ****     tmpValue = tmpValue * gainAdjust;
 1123              		.loc 1 517 0
 1124 000a 184A     		ldr	r2, .L58+12
 1125 000c 32F82300 		ldrh	r0, [r2, r3, lsl #2]
 1126              	.LVL82:
 1127 0010 FFF7FEFF 		bl	__aeabi_ui2f
 1128              	.LVL83:
 1129 0014 4FF06051 		mov	r1, #939524096
 1130 0018 FFF7FEFF 		bl	__aeabi_fmul
 1131              	.LVL84:
 518:Generated_Source\PSoC5/ADC.c **** 
 1132              		.loc 1 518 0
 1133 001c 2146     		mov	r1, r4
 1134 001e FFF7FEFF 		bl	__aeabi_fmul
 1135              	.LVL85:
 1136 0022 0446     		mov	r4, r0
 1137              	.LVL86:
 520:Generated_Source\PSoC5/ADC.c ****     {
 1138              		.loc 1 520 0
 1139 0024 FFF7FEFF 		bl	__aeabi_f2d
 1140              	.LVL87:
 1141 0028 0DA3     		adr	r3, .L58
 1142 002a D3E90023 		ldrd	r2, [r3]
 1143 002e FFF7FEFF 		bl	__aeabi_dcmpgt
 1144              	.LVL88:
 1145 0032 88B9     		cbnz	r0, .L56
 526:Generated_Source\PSoC5/ADC.c **** 		tmpReg = (uint16)tmpValue;
 1146              		.loc 1 526 0
 1147 0034 4FF08E41 		mov	r1, #1191182336
 1148 0038 2046     		mov	r0, r4
 1149 003a FFF7FEFF 		bl	__aeabi_fmul
 1150              	.LVL89:
 527:Generated_Source\PSoC5/ADC.c ****         CY_SET_REG16(ADC_DEC_GCOR_16B_PTR, tmpReg);
 1151              		.loc 1 527 0
 1152 003e FFF7FEFF 		bl	__aeabi_f2uiz
 1153              	.LVL90:
 1154 0042 80B2     		uxth	r0, r0
 1155              	.LVL91:
 528:Generated_Source\PSoC5/ADC.c ****         /* Update gain array to be used by SelectConfiguration() API */
 1156              		.loc 1 528 0
 1157 0044 0A4B     		ldr	r3, .L58+16
 1158 0046 1880     		strh	r0, [r3]	@ movhi
 530:Generated_Source\PSoC5/ADC.c **** 
 1159              		.loc 1 530 0
 1160 0048 074B     		ldr	r3, .L58+8
 1161 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1162 004c 013B     		subs	r3, r3, #1
 1163 004e 074A     		ldr	r2, .L58+12
 1164 0050 22F82300 		strh	r0, [r2, r3, lsl #2]	@ movhi
 1165              	.LVL92:
 532:Generated_Source\PSoC5/ADC.c **** 
 1166              		.loc 1 532 0
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 55


 1167 0054 0020     		movs	r0, #0
 1168              	.LVL93:
 1169 0056 10BD     		pop	{r4, pc}
 1170              	.LVL94:
 1171              	.L56:
 522:Generated_Source\PSoC5/ADC.c ****     }
 1172              		.loc 1 522 0
 1173 0058 0120     		movs	r0, #1
 1174              	.LVL95:
 536:Generated_Source\PSoC5/ADC.c **** 
 1175              		.loc 1 536 0
 1176 005a 10BD     		pop	{r4, pc}
 1177              	.LVL96:
 1178              	.L59:
 1179 005c AFF30080 		.align	3
 1180              	.L58:
 1181 0060 8F537424 		.word	611603343
 1182 0064 97FFFF3F 		.word	1073741719
 1183 0068 00000000 		.word	.LANCHOR1
 1184 006c 00000000 		.word	.LANCHOR0
 1185 0070 0C4E0040 		.word	1073761804
 1186              		.cfi_endproc
 1187              	.LFE6:
 1188              		.size	ADC_SetGCOR, .-ADC_SetGCOR
 1189              		.section	.text.ADC_ReadGCOR,"ax",%progbits
 1190              		.align	2
 1191              		.global	ADC_ReadGCOR
 1192              		.thumb
 1193              		.thumb_func
 1194              		.type	ADC_ReadGCOR, %function
 1195              	ADC_ReadGCOR:
 1196              	.LFB7:
 558:Generated_Source\PSoC5/ADC.c ****     uint8 gValue;
 1197              		.loc 1 558 0
 1198              		.cfi_startproc
 1199              		@ args = 0, pretend = 0, frame = 0
 1200              		@ frame_needed = 0, uses_anonymous_args = 0
 1201              		@ link register save eliminated.
 562:Generated_Source\PSoC5/ADC.c ****     gcorValue = CY_GET_REG16(ADC_DEC_GCOR_16B_PTR);
 1202              		.loc 1 562 0
 1203 0000 064B     		ldr	r3, .L62
 1204 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1205 0004 DBB2     		uxtb	r3, r3
 1206              	.LVL97:
 563:Generated_Source\PSoC5/ADC.c **** 
 1207              		.loc 1 563 0
 1208 0006 064A     		ldr	r2, .L62+4
 1209 0008 1088     		ldrh	r0, [r2]
 1210 000a 80B2     		uxth	r0, r0
 1211              	.LVL98:
 565:Generated_Source\PSoC5/ADC.c ****     {
 1212              		.loc 1 565 0
 1213 000c 0E2B     		cmp	r3, #14
 1214 000e 03D8     		bhi	.L61
 567:Generated_Source\PSoC5/ADC.c ****     }
 1215              		.loc 1 567 0
 1216 0010 C3F10F03 		rsb	r3, r3, #15
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 56


 1217              	.LVL99:
 1218 0014 9840     		lsls	r0, r0, r3
 1219              	.LVL100:
 1220 0016 80B2     		uxth	r0, r0
 1221              	.LVL101:
 1222              	.L61:
 571:Generated_Source\PSoC5/ADC.c **** 
 1223              		.loc 1 571 0
 1224 0018 7047     		bx	lr
 1225              	.L63:
 1226 001a 00BF     		.align	2
 1227              	.L62:
 1228 001c 0E4E0040 		.word	1073761806
 1229 0020 0C4E0040 		.word	1073761804
 1230              		.cfi_endproc
 1231              	.LFE7:
 1232              		.size	ADC_ReadGCOR, .-ADC_ReadGCOR
 1233              		.section	.text.ADC_StartConvert,"ax",%progbits
 1234              		.align	2
 1235              		.global	ADC_StartConvert
 1236              		.thumb
 1237              		.thumb_func
 1238              		.type	ADC_StartConvert, %function
 1239              	ADC_StartConvert:
 1240              	.LFB8:
 592:Generated_Source\PSoC5/ADC.c ****     /* Start the conversion */
 1241              		.loc 1 592 0
 1242              		.cfi_startproc
 1243              		@ args = 0, pretend = 0, frame = 0
 1244              		@ frame_needed = 0, uses_anonymous_args = 0
 1245              		@ link register save eliminated.
 594:Generated_Source\PSoC5/ADC.c **** }
 1246              		.loc 1 594 0
 1247 0000 024A     		ldr	r2, .L65
 1248 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1249 0004 43F00103 		orr	r3, r3, #1
 1250 0008 1370     		strb	r3, [r2]
 1251 000a 7047     		bx	lr
 1252              	.L66:
 1253              		.align	2
 1254              	.L65:
 1255 000c 004E0040 		.word	1073761792
 1256              		.cfi_endproc
 1257              	.LFE8:
 1258              		.size	ADC_StartConvert, .-ADC_StartConvert
 1259              		.section	.text.ADC_StopConvert,"ax",%progbits
 1260              		.align	2
 1261              		.global	ADC_StopConvert
 1262              		.thumb
 1263              		.thumb_func
 1264              		.type	ADC_StopConvert, %function
 1265              	ADC_StopConvert:
 1266              	.LFB9:
 615:Generated_Source\PSoC5/ADC.c ****     /* Stop all conversions */
 1267              		.loc 1 615 0
 1268              		.cfi_startproc
 1269              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 57


 1270              		@ frame_needed = 0, uses_anonymous_args = 0
 1271              		@ link register save eliminated.
 617:Generated_Source\PSoC5/ADC.c **** }
 1272              		.loc 1 617 0
 1273 0000 024A     		ldr	r2, .L68
 1274 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1275 0004 03F0FE03 		and	r3, r3, #254
 1276 0008 1370     		strb	r3, [r2]
 1277 000a 7047     		bx	lr
 1278              	.L69:
 1279              		.align	2
 1280              	.L68:
 1281 000c 004E0040 		.word	1073761792
 1282              		.cfi_endproc
 1283              	.LFE9:
 1284              		.size	ADC_StopConvert, .-ADC_StopConvert
 1285              		.section	.text.ADC_IsEndConversion,"ax",%progbits
 1286              		.align	2
 1287              		.global	ADC_IsEndConversion
 1288              		.thumb
 1289              		.thumb_func
 1290              		.type	ADC_IsEndConversion, %function
 1291              	ADC_IsEndConversion:
 1292              	.LFB10:
 650:Generated_Source\PSoC5/ADC.c ****     uint8 status;
 1293              		.loc 1 650 0
 1294              		.cfi_startproc
 1295              		@ args = 0, pretend = 0, frame = 0
 1296              		@ frame_needed = 0, uses_anonymous_args = 0
 1297              		@ link register save eliminated.
 1298              	.LVL102:
 1299              	.L74:
 658:Generated_Source\PSoC5/ADC.c ****         {
 1300              		.loc 1 658 0
 1301 0000 094B     		ldr	r3, .L75
 1302 0002 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 1303 0004 13F0FF0F 		tst	r3, #255
 1304 0008 03D0     		beq	.L71
 660:Generated_Source\PSoC5/ADC.c ****         }
 1305              		.loc 1 660 0
 1306 000a 074B     		ldr	r3, .L75
 1307 000c 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 1308 000e DBB2     		uxtb	r3, r3
 1309              	.LVL103:
 1310 0010 03E0     		b	.L72
 1311              	.LVL104:
 1312              	.L71:
 664:Generated_Source\PSoC5/ADC.c ****         }
 1313              		.loc 1 664 0
 1314 0012 064B     		ldr	r3, .L75+4
 1315 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1316 0016 03F00103 		and	r3, r3, #1
 1317              	.LVL105:
 1318              	.L72:
 666:Generated_Source\PSoC5/ADC.c **** 
 1319              		.loc 1 666 0
 1320 001a 012B     		cmp	r3, #1
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 58


 1321 001c 01D0     		beq	.L73
 666:Generated_Source\PSoC5/ADC.c **** 
 1322              		.loc 1 666 0 is_stmt 0 discriminator 1
 1323 001e 0028     		cmp	r0, #0
 1324 0020 EED0     		beq	.L74
 1325              	.L73:
 669:Generated_Source\PSoC5/ADC.c **** 
 1326              		.loc 1 669 0 is_stmt 1
 1327 0022 1846     		mov	r0, r3
 1328              	.LVL106:
 1329 0024 7047     		bx	lr
 1330              	.L76:
 1331 0026 00BF     		.align	2
 1332              	.L75:
 1333 0028 00000000 		.word	.LANCHOR0
 1334 002c 014E0040 		.word	1073761793
 1335              		.cfi_endproc
 1336              	.LFE10:
 1337              		.size	ADC_IsEndConversion, .-ADC_IsEndConversion
 1338              		.section	.text.ADC_GetResult8,"ax",%progbits
 1339              		.align	2
 1340              		.global	ADC_GetResult8
 1341              		.thumb
 1342              		.thumb_func
 1343              		.type	ADC_GetResult8, %function
 1344              	ADC_GetResult8:
 1345              	.LFB11:
 697:Generated_Source\PSoC5/ADC.c ****     int8 result;
 1346              		.loc 1 697 0
 1347              		.cfi_startproc
 1348              		@ args = 0, pretend = 0, frame = 0
 1349              		@ frame_needed = 0, uses_anonymous_args = 0
 1350              		@ link register save eliminated.
 702:Generated_Source\PSoC5/ADC.c **** 
 1351              		.loc 1 702 0
 1352 0000 0C4B     		ldr	r3, .L81
 1353 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1354 0004 03F00303 		and	r3, r3, #3
 1355              	.LVL107:
 704:Generated_Source\PSoC5/ADC.c **** 
 1356              		.loc 1 704 0
 1357 0008 0B4A     		ldr	r2, .L81+4
 1358 000a 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 1359 000c 40B2     		sxtb	r0, r0
 1360              	.LVL108:
 706:Generated_Source\PSoC5/ADC.c ****     {   /* Dummy read of the middle byte to unlock the coherency */
 1361              		.loc 1 706 0
 1362 000e 022B     		cmp	r3, #2
 1363 0010 02D1     		bne	.L78
 708:Generated_Source\PSoC5/ADC.c ****     }
 1364              		.loc 1 708 0
 1365 0012 0A4B     		ldr	r3, .L81+8
 1366              	.LVL109:
 1367 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1368 0016 03E0     		b	.L79
 1369              	.LVL110:
 1370              	.L78:
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 59


 710:Generated_Source\PSoC5/ADC.c ****     {   /* Dummy read of the MSB byte to unlock the coherency */
 1371              		.loc 1 710 0
 1372 0018 032B     		cmp	r3, #3
 1373 001a 01D1     		bne	.L79
 712:Generated_Source\PSoC5/ADC.c ****     }
 1374              		.loc 1 712 0
 1375 001c 084B     		ldr	r3, .L81+12
 1376              	.LVL111:
 1377 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1378              	.L79:
 718:Generated_Source\PSoC5/ADC.c ****     {
 1379              		.loc 1 718 0
 1380 0020 084B     		ldr	r3, .L81+16
 1381 0022 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 1382 0024 13F0FF0F 		tst	r3, #255
 1383 0028 02D0     		beq	.L80
 720:Generated_Source\PSoC5/ADC.c ****     }
 1384              		.loc 1 720 0
 1385 002a 0022     		movs	r2, #0
 1386 002c 054B     		ldr	r3, .L81+16
 1387 002e 5A72     		strb	r2, [r3, #9]
 1388              	.L80:
 723:Generated_Source\PSoC5/ADC.c **** 
 1389              		.loc 1 723 0
 1390 0030 7047     		bx	lr
 1391              	.L82:
 1392 0032 00BF     		.align	2
 1393              	.L81:
 1394 0034 144E0040 		.word	1073761812
 1395 0038 104E0040 		.word	1073761808
 1396 003c 114E0040 		.word	1073761809
 1397 0040 124E0040 		.word	1073761810
 1398 0044 00000000 		.word	.LANCHOR0
 1399              		.cfi_endproc
 1400              	.LFE11:
 1401              		.size	ADC_GetResult8, .-ADC_GetResult8
 1402              		.section	.text.ADC_GetResult16,"ax",%progbits
 1403              		.align	2
 1404              		.global	ADC_GetResult16
 1405              		.thumb
 1406              		.thumb_func
 1407              		.type	ADC_GetResult16, %function
 1408              	ADC_GetResult16:
 1409              	.LFB12:
 751:Generated_Source\PSoC5/ADC.c ****     uint16 result;
 1410              		.loc 1 751 0
 1411              		.cfi_startproc
 1412              		@ args = 0, pretend = 0, frame = 0
 1413              		@ frame_needed = 0, uses_anonymous_args = 0
 1414              		@ link register save eliminated.
 756:Generated_Source\PSoC5/ADC.c **** 
 1415              		.loc 1 756 0
 1416 0000 0E4B     		ldr	r3, .L87
 1417 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1418 0004 03F00303 		and	r3, r3, #3
 1419              	.LVL112:
 758:Generated_Source\PSoC5/ADC.c ****     {   /*  Use default method to read result registers i.e. LSB byte read at the end*/
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 60


 1420              		.loc 1 758 0
 1421 0008 012B     		cmp	r3, #1
 1422 000a 03D8     		bhi	.L84
 764:Generated_Source\PSoC5/ADC.c ****         #endif /* CY_PSOC3 */
 1423              		.loc 1 764 0
 1424 000c 0C4B     		ldr	r3, .L87+4
 1425              	.LVL113:
 1426 000e 1888     		ldrh	r0, [r3]
 1427 0010 80B2     		uxth	r0, r0
 1428              	.LVL114:
 1429 0012 09E0     		b	.L85
 1430              	.LVL115:
 1431              	.L84:
 772:Generated_Source\PSoC5/ADC.c ****             result |=  (uint16)((uint16)ADC_DEC_SAMPM_REG << 8u);
 1432              		.loc 1 772 0
 1433 0014 0A4A     		ldr	r2, .L87+4
 1434 0016 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1435              	.LVL116:
 773:Generated_Source\PSoC5/ADC.c ****         #endif /* CY_PSOC3 */
 1436              		.loc 1 773 0
 1437 0018 0A49     		ldr	r1, .L87+8
 1438 001a 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 1439 001c 42EA0020 		orr	r0, r2, r0, lsl #8
 1440              	.LVL117:
 775:Generated_Source\PSoC5/ADC.c ****         {   /* Dummy read of the MSB byte to unlock the coherency */
 1441              		.loc 1 775 0
 1442 0020 032B     		cmp	r3, #3
 1443 0022 01D1     		bne	.L85
 777:Generated_Source\PSoC5/ADC.c ****         }
 1444              		.loc 1 777 0
 1445 0024 084B     		ldr	r3, .L87+12
 1446              	.LVL118:
 1447 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1448              	.L85:
 781:Generated_Source\PSoC5/ADC.c ****     {
 1449              		.loc 1 781 0
 1450 0028 084B     		ldr	r3, .L87+16
 1451 002a 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 1452 002c 13F0FF0F 		tst	r3, #255
 1453 0030 02D0     		beq	.L86
 783:Generated_Source\PSoC5/ADC.c ****     }
 1454              		.loc 1 783 0
 1455 0032 0022     		movs	r2, #0
 1456 0034 054B     		ldr	r3, .L87+16
 1457 0036 5A72     		strb	r2, [r3, #9]
 1458              	.L86:
 787:Generated_Source\PSoC5/ADC.c **** 
 1459              		.loc 1 787 0
 1460 0038 00B2     		sxth	r0, r0
 1461 003a 7047     		bx	lr
 1462              	.L88:
 1463              		.align	2
 1464              	.L87:
 1465 003c 144E0040 		.word	1073761812
 1466 0040 104E0040 		.word	1073761808
 1467 0044 114E0040 		.word	1073761809
 1468 0048 124E0040 		.word	1073761810
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 61


 1469 004c 00000000 		.word	.LANCHOR0
 1470              		.cfi_endproc
 1471              	.LFE12:
 1472              		.size	ADC_GetResult16, .-ADC_GetResult16
 1473              		.section	.text.ADC_GetResult32,"ax",%progbits
 1474              		.align	2
 1475              		.global	ADC_GetResult32
 1476              		.thumb
 1477              		.thumb_func
 1478              		.type	ADC_GetResult32, %function
 1479              	ADC_GetResult32:
 1480              	.LFB13:
 811:Generated_Source\PSoC5/ADC.c ****     uint32 result;
 1481              		.loc 1 811 0
 1482              		.cfi_startproc
 1483              		@ args = 0, pretend = 0, frame = 0
 1484              		@ frame_needed = 0, uses_anonymous_args = 0
 1485              		@ link register save eliminated.
 819:Generated_Source\PSoC5/ADC.c **** 
 1486              		.loc 1 819 0
 1487 0000 154B     		ldr	r3, .L94
 1488 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1489 0004 03F00303 		and	r3, r3, #3
 1490              	.LVL119:
 821:Generated_Source\PSoC5/ADC.c ****     {   /*  Use default method to read result registers i.e. LSB byte read at the end*/
 1491              		.loc 1 821 0
 1492 0008 012B     		cmp	r3, #1
 1493 000a 07D8     		bhi	.L90
 832:Generated_Source\PSoC5/ADC.c ****             result = (result << 16u) | (CY_GET_REG16(ADC_DEC_SAMP_16B_PTR));
 1494              		.loc 1 832 0
 1495 000c 134B     		ldr	r3, .L94+4
 1496              	.LVL120:
 1497 000e 1888     		ldrh	r0, [r3]
 1498              	.LVL121:
 833:Generated_Source\PSoC5/ADC.c ****         #endif /* CY_PSOC3 */
 1499              		.loc 1 833 0
 1500 0010 023B     		subs	r3, r3, #2
 1501 0012 1B88     		ldrh	r3, [r3]
 1502 0014 9BB2     		uxth	r3, r3
 1503 0016 43EA0040 		orr	r0, r3, r0, lsl #16
 1504              	.LVL122:
 1505 001a 13E0     		b	.L91
 1506              	.LVL123:
 1507              	.L90:
 836:Generated_Source\PSoC5/ADC.c ****     {   /* Read middle byte at the end */
 1508              		.loc 1 836 0
 1509 001c 022B     		cmp	r3, #2
 1510 001e 0AD1     		bne	.L92
 846:Generated_Source\PSoC5/ADC.c ****             result = (result << 16u) | ADC_DEC_SAMP_REG;
 1511              		.loc 1 846 0
 1512 0020 0E4B     		ldr	r3, .L94+4
 1513              	.LVL124:
 1514 0022 1888     		ldrh	r0, [r3]
 1515              	.LVL125:
 847:Generated_Source\PSoC5/ADC.c ****             result |=  (uint32)((uint32)ADC_DEC_SAMPM_REG << 8u);
 1516              		.loc 1 847 0
 1517 0024 023B     		subs	r3, r3, #2
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 62


 1518 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1519 0028 43EA0043 		orr	r3, r3, r0, lsl #16
 1520              	.LVL126:
 848:Generated_Source\PSoC5/ADC.c ****         #endif /* CY_PSOC3 */
 1521              		.loc 1 848 0
 1522 002c 0C4A     		ldr	r2, .L94+8
 1523 002e 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 1524 0030 43EA0020 		orr	r0, r3, r0, lsl #8
 1525              	.LVL127:
 1526 0034 06E0     		b	.L91
 1527              	.LVL128:
 1528              	.L92:
 863:Generated_Source\PSoC5/ADC.c ****             result |= (uint32)((uint32)CY_GET_REG16(ADC_DEC_SAMPH_16B_PTR) << 16u);
 1529              		.loc 1 863 0
 1530 0036 0B4B     		ldr	r3, .L94+12
 1531              	.LVL129:
 1532 0038 1888     		ldrh	r0, [r3]
 1533 003a 83B2     		uxth	r3, r0
 1534              	.LVL130:
 864:Generated_Source\PSoC5/ADC.c ****         #endif /* CY_PSOC3 */
 1535              		.loc 1 864 0
 1536 003c 074A     		ldr	r2, .L94+4
 1537 003e 1088     		ldrh	r0, [r2]
 1538 0040 43EA0040 		orr	r0, r3, r0, lsl #16
 1539              	.LVL131:
 1540              	.L91:
 868:Generated_Source\PSoC5/ADC.c ****     {
 1541              		.loc 1 868 0
 1542 0044 084B     		ldr	r3, .L94+16
 1543 0046 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 1544 0048 13F0FF0F 		tst	r3, #255
 1545 004c 02D0     		beq	.L93
 870:Generated_Source\PSoC5/ADC.c ****     }
 1546              		.loc 1 870 0
 1547 004e 0022     		movs	r2, #0
 1548 0050 054B     		ldr	r3, .L94+16
 1549 0052 5A72     		strb	r2, [r3, #9]
 1550              	.L93:
 874:Generated_Source\PSoC5/ADC.c **** 
 1551              		.loc 1 874 0
 1552 0054 7047     		bx	lr
 1553              	.L95:
 1554 0056 00BF     		.align	2
 1555              	.L94:
 1556 0058 144E0040 		.word	1073761812
 1557 005c 124E0040 		.word	1073761810
 1558 0060 114E0040 		.word	1073761809
 1559 0064 104E0040 		.word	1073761808
 1560 0068 00000000 		.word	.LANCHOR0
 1561              		.cfi_endproc
 1562              	.LFE13:
 1563              		.size	ADC_GetResult32, .-ADC_GetResult32
 1564              		.section	.text.ADC_SetOffset,"ax",%progbits
 1565              		.align	2
 1566              		.global	ADC_SetOffset
 1567              		.thumb
 1568              		.thumb_func
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 63


 1569              		.type	ADC_SetOffset, %function
 1570              	ADC_SetOffset:
 1571              	.LFB14:
 904:Generated_Source\PSoC5/ADC.c **** 
 1572              		.loc 1 904 0
 1573              		.cfi_startproc
 1574              		@ args = 0, pretend = 0, frame = 0
 1575              		@ frame_needed = 0, uses_anonymous_args = 0
 1576              		@ link register save eliminated.
 1577              	.LVL132:
 906:Generated_Source\PSoC5/ADC.c **** }
 1578              		.loc 1 906 0
 1579 0000 014B     		ldr	r3, .L97
 1580 0002 D860     		str	r0, [r3, #12]
 1581 0004 7047     		bx	lr
 1582              	.L98:
 1583 0006 00BF     		.align	2
 1584              	.L97:
 1585 0008 00000000 		.word	.LANCHOR0
 1586              		.cfi_endproc
 1587              	.LFE14:
 1588              		.size	ADC_SetOffset, .-ADC_SetOffset
 1589              		.section	.text.ADC_SetGain,"ax",%progbits
 1590              		.align	2
 1591              		.global	ADC_SetGain
 1592              		.thumb
 1593              		.thumb_func
 1594              		.type	ADC_SetGain, %function
 1595              	ADC_SetGain:
 1596              	.LFB15:
 939:Generated_Source\PSoC5/ADC.c ****     ADC_CountsPerVolt = adcGain;
 1597              		.loc 1 939 0
 1598              		.cfi_startproc
 1599              		@ args = 0, pretend = 0, frame = 0
 1600              		@ frame_needed = 0, uses_anonymous_args = 0
 1601              		@ link register save eliminated.
 1602              	.LVL133:
 940:Generated_Source\PSoC5/ADC.c **** }
 1603              		.loc 1 940 0
 1604 0000 014B     		ldr	r3, .L100
 1605 0002 1860     		str	r0, [r3]
 1606 0004 7047     		bx	lr
 1607              	.L101:
 1608 0006 00BF     		.align	2
 1609              	.L100:
 1610 0008 00000000 		.word	ADC_CountsPerVolt
 1611              		.cfi_endproc
 1612              	.LFE15:
 1613              		.size	ADC_SetGain, .-ADC_SetGain
 1614              		.section	.text.ADC_CountsTo_mVolts,"ax",%progbits
 1615              		.align	2
 1616              		.global	ADC_CountsTo_mVolts
 1617              		.thumb
 1618              		.thumb_func
 1619              		.type	ADC_CountsTo_mVolts, %function
 1620              	ADC_CountsTo_mVolts:
 1621              	.LFB16:
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 64


 966:Generated_Source\PSoC5/ADC.c **** 
 1622              		.loc 1 966 0
 1623              		.cfi_startproc
 1624              		@ args = 0, pretend = 0, frame = 0
 1625              		@ frame_needed = 0, uses_anonymous_args = 0
 1626              		@ link register save eliminated.
 1627              	.LVL134:
 997:Generated_Source\PSoC5/ADC.c **** 
 1628              		.loc 1 997 0
 1629 0000 064B     		ldr	r3, .L103
 1630 0002 DB68     		ldr	r3, [r3, #12]
 1631 0004 C01A     		subs	r0, r0, r3
 1632              	.LVL135:
 999:Generated_Source\PSoC5/ADC.c **** 
 1633              		.loc 1 999 0
 1634 0006 4FF47A73 		mov	r3, #1000
 1635 000a 03FB00F0 		mul	r0, r3, r0
 1636              	.LVL136:
 1637 000e 044B     		ldr	r3, .L103+4
 1638 0010 1B68     		ldr	r3, [r3]
 1639 0012 90FBF3F0 		sdiv	r0, r0, r3
 1640              	.LVL137:
1002:Generated_Source\PSoC5/ADC.c **** 
 1641              		.loc 1 1002 0
 1642 0016 00B2     		sxth	r0, r0
 1643 0018 7047     		bx	lr
 1644              	.L104:
 1645 001a 00BF     		.align	2
 1646              	.L103:
 1647 001c 00000000 		.word	.LANCHOR0
 1648 0020 00000000 		.word	ADC_CountsPerVolt
 1649              		.cfi_endproc
 1650              	.LFE16:
 1651              		.size	ADC_CountsTo_mVolts, .-ADC_CountsTo_mVolts
 1652              		.global	__aeabi_i2f
 1653              		.global	__aeabi_fdiv
 1654              		.section	.text.ADC_CountsTo_Volts,"ax",%progbits
 1655              		.align	2
 1656              		.global	ADC_CountsTo_Volts
 1657              		.thumb
 1658              		.thumb_func
 1659              		.type	ADC_CountsTo_Volts, %function
 1660              	ADC_CountsTo_Volts:
 1661              	.LFB17:
1027:Generated_Source\PSoC5/ADC.c **** 
 1662              		.loc 1 1027 0
 1663              		.cfi_startproc
 1664              		@ args = 0, pretend = 0, frame = 0
 1665              		@ frame_needed = 0, uses_anonymous_args = 0
 1666              	.LVL138:
 1667 0000 10B5     		push	{r4, lr}
 1668              		.cfi_def_cfa_offset 8
 1669              		.cfi_offset 4, -8
 1670              		.cfi_offset 14, -4
1058:Generated_Source\PSoC5/ADC.c **** 
 1671              		.loc 1 1058 0
 1672 0002 074B     		ldr	r3, .L107
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 65


 1673 0004 DB68     		ldr	r3, [r3, #12]
 1674              	.LVL139:
1060:Generated_Source\PSoC5/ADC.c **** 
 1675              		.loc 1 1060 0
 1676 0006 C01A     		subs	r0, r0, r3
 1677              	.LVL140:
 1678 0008 FFF7FEFF 		bl	__aeabi_i2f
 1679              	.LVL141:
 1680 000c 0446     		mov	r4, r0
 1681 000e 054B     		ldr	r3, .L107+4
 1682 0010 1868     		ldr	r0, [r3]
 1683 0012 FFF7FEFF 		bl	__aeabi_i2f
 1684              	.LVL142:
 1685 0016 0146     		mov	r1, r0
 1686 0018 2046     		mov	r0, r4
 1687 001a FFF7FEFF 		bl	__aeabi_fdiv
 1688              	.LVL143:
1063:Generated_Source\PSoC5/ADC.c **** 
 1689              		.loc 1 1063 0
 1690 001e 10BD     		pop	{r4, pc}
 1691              	.L108:
 1692              		.align	2
 1693              	.L107:
 1694 0020 00000000 		.word	.LANCHOR0
 1695 0024 00000000 		.word	ADC_CountsPerVolt
 1696              		.cfi_endproc
 1697              	.LFE17:
 1698              		.size	ADC_CountsTo_Volts, .-ADC_CountsTo_Volts
 1699              		.section	.text.ADC_CountsTo_uVolts,"ax",%progbits
 1700              		.align	2
 1701              		.global	ADC_CountsTo_uVolts
 1702              		.thumb
 1703              		.thumb_func
 1704              		.type	ADC_CountsTo_uVolts, %function
 1705              	ADC_CountsTo_uVolts:
 1706              	.LFB18:
1093:Generated_Source\PSoC5/ADC.c **** 
 1707              		.loc 1 1093 0
 1708              		.cfi_startproc
 1709              		@ args = 0, pretend = 0, frame = 0
 1710              		@ frame_needed = 0, uses_anonymous_args = 0
 1711              		@ link register save eliminated.
 1712              	.LVL144:
 1713 0000 10B4     		push	{r4}
 1714              		.cfi_def_cfa_offset 4
 1715              		.cfi_offset 4, -4
1102:Generated_Source\PSoC5/ADC.c ****     {
 1716              		.loc 1 1102 0
 1717 0002 194B     		ldr	r3, .L119
 1718 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1719 0006 DBB2     		uxtb	r3, r3
 1720 0008 012B     		cmp	r3, #1
 1721 000a 08D0     		beq	.L114
1109:Generated_Source\PSoC5/ADC.c ****     {
 1722              		.loc 1 1109 0
 1723 000c 164B     		ldr	r3, .L119
 1724 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 66


 1725 0010 DBB2     		uxtb	r3, r3
 1726 0012 022B     		cmp	r3, #2
 1727 0014 05D0     		beq	.L115
1116:Generated_Source\PSoC5/ADC.c ****     {
 1728              		.loc 1 1116 0
 1729 0016 144B     		ldr	r3, .L119
 1730 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1118:Generated_Source\PSoC5/ADC.c ****         #if(ADC_CFG3_DEC_DIV != 0)
 1731              		.loc 1 1118 0
 1732 001a 1023     		movs	r3, #16
 1733 001c 02E0     		b	.L110
 1734              	.L114:
1104:Generated_Source\PSoC5/ADC.c ****         #if(ADC_CFG1_DEC_DIV != 0)
 1735              		.loc 1 1104 0
 1736 001e 1423     		movs	r3, #20
 1737 0020 00E0     		b	.L110
 1738              	.L115:
1111:Generated_Source\PSoC5/ADC.c ****         #if(ADC_CFG2_DEC_DIV != 0)
 1739              		.loc 1 1111 0
 1740 0022 1023     		movs	r3, #16
 1741              	.L110:
 1742              	.LVL145:
1131:Generated_Source\PSoC5/ADC.c ****     {
 1743              		.loc 1 1131 0
 1744 0024 102B     		cmp	r3, #16
 1745 0026 02D0     		beq	.L112
 1746 0028 142B     		cmp	r3, #20
 1747 002a 07D0     		beq	.L116
 1748 002c 03E0     		b	.L117
 1749              	.L112:
1175:Generated_Source\PSoC5/ADC.c ****                 break;
 1750              		.loc 1 1175 0
 1751 002e 2021     		movs	r1, #32
1174:Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_32;
 1752              		.loc 1 1174 0
 1753 0030 47F61224 		movw	r4, #31250
 1754 0034 06E0     		b	.L113
 1755              	.L117:
 1756              	.LVL146:
1217:Generated_Source\PSoC5/ADC.c ****             break;
 1757              		.loc 1 1217 0
 1758 0036 0121     		movs	r1, #1
1216:Generated_Source\PSoC5/ADC.c ****             coefB = ADC_DIVISOR_1;
 1759              		.loc 1 1216 0
 1760 0038 0C4C     		ldr	r4, .L119+4
1218:Generated_Source\PSoC5/ADC.c ****     }
 1761              		.loc 1 1218 0
 1762 003a 03E0     		b	.L113
 1763              	.LVL147:
 1764              	.L116:
1211:Generated_Source\PSoC5/ADC.c ****                 break;
 1765              		.loc 1 1211 0
 1766 003c 4FF4FA71 		mov	r1, #500
1210:Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_500;
 1767              		.loc 1 1210 0
 1768 0040 4FF4FA64 		mov	r4, #2000
 1769              	.L113:
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 67


 1770              	.LVL148:
1220:Generated_Source\PSoC5/ADC.c ****     uVolts = ((coefA * adcCounts) / coefB) - ((coefA * ADC_Offset) / coefB);
 1771              		.loc 1 1220 0
 1772 0044 0A4B     		ldr	r3, .L119+8
 1773              	.LVL149:
 1774 0046 1B68     		ldr	r3, [r3]
 1775 0048 93FBF1F1 		sdiv	r1, r3, r1
 1776              	.LVL150:
1221:Generated_Source\PSoC5/ADC.c **** 
 1777              		.loc 1 1221 0
 1778 004c 00FB04F0 		mul	r0, r0, r4
 1779              	.LVL151:
 1780 0050 90FBF1F3 		sdiv	r3, r0, r1
 1781 0054 074A     		ldr	r2, .L119+12
 1782 0056 D268     		ldr	r2, [r2, #12]
 1783 0058 02FB04F2 		mul	r2, r2, r4
 1784 005c 92FBF1F0 		sdiv	r0, r2, r1
 1785              	.LVL152:
1224:Generated_Source\PSoC5/ADC.c **** 
 1786              		.loc 1 1224 0
 1787 0060 181A     		subs	r0, r3, r0
 1788              	.LVL153:
 1789 0062 10BC     		pop	{r4}
 1790              		.cfi_restore 4
 1791              		.cfi_def_cfa_offset 0
 1792              	.LVL154:
 1793 0064 7047     		bx	lr
 1794              	.L120:
 1795 0066 00BF     		.align	2
 1796              	.L119:
 1797 0068 00000000 		.word	.LANCHOR1
 1798 006c 40420F00 		.word	1000000
 1799 0070 00000000 		.word	ADC_CountsPerVolt
 1800 0074 00000000 		.word	.LANCHOR0
 1801              		.cfi_endproc
 1802              	.LFE18:
 1803              		.size	ADC_CountsTo_uVolts, .-ADC_CountsTo_uVolts
 1804              		.section	.text.ADC_SelectConfiguration,"ax",%progbits
 1805              		.align	2
 1806              		.global	ADC_SelectConfiguration
 1807              		.thumb
 1808              		.thumb_func
 1809              		.type	ADC_SelectConfiguration, %function
 1810              	ADC_SelectConfiguration:
 1811              	.LFB20:
1562:Generated_Source\PSoC5/ADC.c ****     /* Check whether the configuration number is valid or not */
 1812              		.loc 1 1562 0
 1813              		.cfi_startproc
 1814              		@ args = 0, pretend = 0, frame = 0
 1815              		@ frame_needed = 0, uses_anonymous_args = 0
 1816              	.LVL155:
 1817 0000 38B5     		push	{r3, r4, r5, lr}
 1818              		.cfi_def_cfa_offset 16
 1819              		.cfi_offset 3, -16
 1820              		.cfi_offset 4, -12
 1821              		.cfi_offset 5, -8
 1822              		.cfi_offset 14, -4
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 68


1564:Generated_Source\PSoC5/ADC.c ****     {
 1823              		.loc 1 1564 0
 1824 0002 431E     		subs	r3, r0, #1
 1825 0004 DBB2     		uxtb	r3, r3
 1826 0006 012B     		cmp	r3, #1
 1827 0008 20D8     		bhi	.L122
 1828 000a 0446     		mov	r4, r0
 1829 000c 0D46     		mov	r5, r1
1569:Generated_Source\PSoC5/ADC.c ****         {
 1830              		.loc 1 1569 0
 1831 000e 114B     		ldr	r3, .L126
 1832 0010 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 1833 0012 13B9     		cbnz	r3, .L123
1571:Generated_Source\PSoC5/ADC.c ****         }
 1834              		.loc 1 1571 0
 1835 0014 0122     		movs	r2, #1
 1836 0016 0F4B     		ldr	r3, .L126
 1837 0018 DA72     		strb	r2, [r3, #11]
 1838              	.L123:
1575:Generated_Source\PSoC5/ADC.c **** 
 1839              		.loc 1 1575 0
 1840 001a 0F4B     		ldr	r3, .L126+4
 1841 001c 1C70     		strb	r4, [r3]
1578:Generated_Source\PSoC5/ADC.c **** 
 1842              		.loc 1 1578 0
 1843 001e FFF7FEFF 		bl	ADC_Stop
 1844              	.LVL156:
1581:Generated_Source\PSoC5/ADC.c **** 
 1845              		.loc 1 1581 0
 1846 0022 2046     		mov	r0, r4
 1847 0024 FFF7FEFF 		bl	ADC_InitConfig
 1848              	.LVL157:
1584:Generated_Source\PSoC5/ADC.c ****         CY_SET_REG16(ADC_DEC_GCOR_16B_PTR, ADC_gcor[config - 1u].gcor);
 1849              		.loc 1 1584 0
 1850 0028 013C     		subs	r4, r4, #1
 1851 002a 0A4B     		ldr	r3, .L126
 1852 002c 03EB8402 		add	r2, r3, r4, lsl #2
 1853 0030 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 1854 0032 0A4A     		ldr	r2, .L126+8
 1855 0034 1170     		strb	r1, [r2]
1585:Generated_Source\PSoC5/ADC.c **** 
 1856              		.loc 1 1585 0
 1857 0036 33F82420 		ldrh	r2, [r3, r4, lsl #2]
 1858 003a 094B     		ldr	r3, .L126+12
 1859 003c 1A80     		strh	r2, [r3]	@ movhi
1587:Generated_Source\PSoC5/ADC.c ****         {
 1860              		.loc 1 1587 0
 1861 003e 012D     		cmp	r5, #1
 1862 0040 07D1     		bne	.L121
1590:Generated_Source\PSoC5/ADC.c **** 
 1863              		.loc 1 1590 0
 1864 0042 FFF7FEFF 		bl	ADC_Start
 1865              	.LVL158:
1593:Generated_Source\PSoC5/ADC.c ****         }
 1866              		.loc 1 1593 0
 1867 0046 FFF7FEFF 		bl	ADC_StartConvert
 1868              	.LVL159:
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 69


 1869 004a 38BD     		pop	{r3, r4, r5, pc}
 1870              	.LVL160:
 1871              	.L122:
1599:Generated_Source\PSoC5/ADC.c ****     }
 1872              		.loc 1 1599 0 discriminator 1
 1873 004c 0020     		movs	r0, #0
 1874              	.LVL161:
 1875 004e FFF7FEFF 		bl	CyHalt
 1876              	.LVL162:
 1877              	.L121:
 1878 0052 38BD     		pop	{r3, r4, r5, pc}
 1879              	.L127:
 1880              		.align	2
 1881              	.L126:
 1882 0054 00000000 		.word	.LANCHOR0
 1883 0058 00000000 		.word	.LANCHOR1
 1884 005c 0E4E0040 		.word	1073761806
 1885 0060 0C4E0040 		.word	1073761804
 1886              		.cfi_endproc
 1887              	.LFE20:
 1888              		.size	ADC_SelectConfiguration, .-ADC_SelectConfiguration
 1889              		.section	.text.ADC_Read8,"ax",%progbits
 1890              		.align	2
 1891              		.global	ADC_Read8
 1892              		.thumb
 1893              		.thumb_func
 1894              		.type	ADC_Read8, %function
 1895              	ADC_Read8:
 1896              	.LFB23:
1749:Generated_Source\PSoC5/ADC.c **** }
1750:Generated_Source\PSoC5/ADC.c **** 
1751:Generated_Source\PSoC5/ADC.c **** 
1752:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
1753:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_Read8
1754:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
1755:Generated_Source\PSoC5/ADC.c **** *
1756:Generated_Source\PSoC5/ADC.c **** * Summary:
1757:Generated_Source\PSoC5/ADC.c **** *  This function simplifies getting results from the ADC when only a
1758:Generated_Source\PSoC5/ADC.c **** *  single reading is required. When called, it will start ADC
1759:Generated_Source\PSoC5/ADC.c **** *  conversions, wait for the conversion to be complete, stop ADC
1760:Generated_Source\PSoC5/ADC.c **** *  conversion and return the result. This is a blocking function and will
1761:Generated_Source\PSoC5/ADC.c **** *  not return until the result is ready.
1762:Generated_Source\PSoC5/ADC.c **** *
1763:Generated_Source\PSoC5/ADC.c **** * Parameters:
1764:Generated_Source\PSoC5/ADC.c **** *  None
1765:Generated_Source\PSoC5/ADC.c **** *
1766:Generated_Source\PSoC5/ADC.c **** * Return:
1767:Generated_Source\PSoC5/ADC.c **** *  int8:  ADC result.
1768:Generated_Source\PSoC5/ADC.c **** *
1769:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
1770:Generated_Source\PSoC5/ADC.c **** int8 ADC_Read8(void) 
1771:Generated_Source\PSoC5/ADC.c **** {
 1897              		.loc 1 1771 0
 1898              		.cfi_startproc
 1899              		@ args = 0, pretend = 0, frame = 0
 1900              		@ frame_needed = 0, uses_anonymous_args = 0
 1901 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 70


 1902              		.cfi_def_cfa_offset 8
 1903              		.cfi_offset 4, -8
 1904              		.cfi_offset 14, -4
1772:Generated_Source\PSoC5/ADC.c ****     int8 result;
1773:Generated_Source\PSoC5/ADC.c **** 
1774:Generated_Source\PSoC5/ADC.c ****     /* Clear pending conversion done status */
1775:Generated_Source\PSoC5/ADC.c ****     ADC_DEC_SR_REG |= ADC_DEC_INTR_CLEAR;
 1905              		.loc 1 1775 0
 1906 0002 084A     		ldr	r2, .L130
 1907 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1908 0006 43F00403 		orr	r3, r3, #4
 1909 000a 1370     		strb	r3, [r2]
1776:Generated_Source\PSoC5/ADC.c ****     ADC_StartConvert();
 1910              		.loc 1 1776 0
 1911 000c FFF7FEFF 		bl	ADC_StartConvert
 1912              	.LVL163:
1777:Generated_Source\PSoC5/ADC.c ****     (void)ADC_IsEndConversion(ADC_WAIT_FOR_RESULT);
 1913              		.loc 1 1777 0
 1914 0010 0020     		movs	r0, #0
 1915 0012 FFF7FEFF 		bl	ADC_IsEndConversion
 1916              	.LVL164:
1778:Generated_Source\PSoC5/ADC.c ****      result = ADC_GetResult8();
 1917              		.loc 1 1778 0
 1918 0016 FFF7FEFF 		bl	ADC_GetResult8
 1919              	.LVL165:
 1920 001a 0446     		mov	r4, r0
 1921              	.LVL166:
1779:Generated_Source\PSoC5/ADC.c ****     ADC_StopConvert();
 1922              		.loc 1 1779 0
 1923 001c FFF7FEFF 		bl	ADC_StopConvert
 1924              	.LVL167:
1780:Generated_Source\PSoC5/ADC.c ****     
1781:Generated_Source\PSoC5/ADC.c ****      return(result);
1782:Generated_Source\PSoC5/ADC.c **** }
 1925              		.loc 1 1782 0
 1926 0020 2046     		mov	r0, r4
 1927 0022 10BD     		pop	{r4, pc}
 1928              	.LVL168:
 1929              	.L131:
 1930              		.align	2
 1931              	.L130:
 1932 0024 014E0040 		.word	1073761793
 1933              		.cfi_endproc
 1934              	.LFE23:
 1935              		.size	ADC_Read8, .-ADC_Read8
 1936              		.section	.text.ADC_Read16,"ax",%progbits
 1937              		.align	2
 1938              		.global	ADC_Read16
 1939              		.thumb
 1940              		.thumb_func
 1941              		.type	ADC_Read16, %function
 1942              	ADC_Read16:
 1943              	.LFB24:
1783:Generated_Source\PSoC5/ADC.c **** 
1784:Generated_Source\PSoC5/ADC.c **** 
1785:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
1786:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_Read16
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 71


1787:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
1788:Generated_Source\PSoC5/ADC.c **** *
1789:Generated_Source\PSoC5/ADC.c **** * Summary:
1790:Generated_Source\PSoC5/ADC.c **** *  This function simplifies getting results from the ADC when only a
1791:Generated_Source\PSoC5/ADC.c **** *  single reading is required. When called, it will start ADC
1792:Generated_Source\PSoC5/ADC.c **** *  conversions, wait for the conversion to be complete, stop ADC
1793:Generated_Source\PSoC5/ADC.c **** *  conversion and return the result. This is a blocking function and will
1794:Generated_Source\PSoC5/ADC.c **** *  not return until the result is ready.
1795:Generated_Source\PSoC5/ADC.c **** *
1796:Generated_Source\PSoC5/ADC.c **** * Parameters:
1797:Generated_Source\PSoC5/ADC.c **** *   void
1798:Generated_Source\PSoC5/ADC.c **** *
1799:Generated_Source\PSoC5/ADC.c **** * Return:
1800:Generated_Source\PSoC5/ADC.c **** *  int16:  ADC result.
1801:Generated_Source\PSoC5/ADC.c **** *
1802:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
1803:Generated_Source\PSoC5/ADC.c **** int16 ADC_Read16(void) 
1804:Generated_Source\PSoC5/ADC.c **** {
 1944              		.loc 1 1804 0
 1945              		.cfi_startproc
 1946              		@ args = 0, pretend = 0, frame = 0
 1947              		@ frame_needed = 0, uses_anonymous_args = 0
 1948 0000 10B5     		push	{r4, lr}
 1949              		.cfi_def_cfa_offset 8
 1950              		.cfi_offset 4, -8
 1951              		.cfi_offset 14, -4
1805:Generated_Source\PSoC5/ADC.c ****     int16 result;
1806:Generated_Source\PSoC5/ADC.c **** 
1807:Generated_Source\PSoC5/ADC.c ****     /* Clear pending conversion done status */
1808:Generated_Source\PSoC5/ADC.c ****     ADC_DEC_SR_REG |= ADC_DEC_INTR_CLEAR;
 1952              		.loc 1 1808 0
 1953 0002 084A     		ldr	r2, .L134
 1954 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1955 0006 43F00403 		orr	r3, r3, #4
 1956 000a 1370     		strb	r3, [r2]
1809:Generated_Source\PSoC5/ADC.c ****     ADC_StartConvert();
 1957              		.loc 1 1809 0
 1958 000c FFF7FEFF 		bl	ADC_StartConvert
 1959              	.LVL169:
1810:Generated_Source\PSoC5/ADC.c ****     (void)ADC_IsEndConversion(ADC_WAIT_FOR_RESULT);
 1960              		.loc 1 1810 0
 1961 0010 0020     		movs	r0, #0
 1962 0012 FFF7FEFF 		bl	ADC_IsEndConversion
 1963              	.LVL170:
1811:Generated_Source\PSoC5/ADC.c ****      result = ADC_GetResult16();
 1964              		.loc 1 1811 0
 1965 0016 FFF7FEFF 		bl	ADC_GetResult16
 1966              	.LVL171:
 1967 001a 0446     		mov	r4, r0
 1968              	.LVL172:
1812:Generated_Source\PSoC5/ADC.c ****     ADC_StopConvert();
 1969              		.loc 1 1812 0
 1970 001c FFF7FEFF 		bl	ADC_StopConvert
 1971              	.LVL173:
1813:Generated_Source\PSoC5/ADC.c ****     
1814:Generated_Source\PSoC5/ADC.c ****      return(result);
1815:Generated_Source\PSoC5/ADC.c **** }
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 72


 1972              		.loc 1 1815 0
 1973 0020 2046     		mov	r0, r4
 1974 0022 10BD     		pop	{r4, pc}
 1975              	.LVL174:
 1976              	.L135:
 1977              		.align	2
 1978              	.L134:
 1979 0024 014E0040 		.word	1073761793
 1980              		.cfi_endproc
 1981              	.LFE24:
 1982              		.size	ADC_Read16, .-ADC_Read16
 1983              		.section	.text.ADC_Read32,"ax",%progbits
 1984              		.align	2
 1985              		.global	ADC_Read32
 1986              		.thumb
 1987              		.thumb_func
 1988              		.type	ADC_Read32, %function
 1989              	ADC_Read32:
 1990              	.LFB25:
1816:Generated_Source\PSoC5/ADC.c **** 
1817:Generated_Source\PSoC5/ADC.c **** 
1818:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
1819:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_Read32
1820:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
1821:Generated_Source\PSoC5/ADC.c **** *
1822:Generated_Source\PSoC5/ADC.c **** * Summary:
1823:Generated_Source\PSoC5/ADC.c **** *  This function simplifies getting results from the ADC when only a
1824:Generated_Source\PSoC5/ADC.c **** *  single reading is required. When called, it will start ADC
1825:Generated_Source\PSoC5/ADC.c **** *  conversions, wait for the conversion to be complete, stop ADC
1826:Generated_Source\PSoC5/ADC.c **** *  conversion and return the result. This is a blocking function and will
1827:Generated_Source\PSoC5/ADC.c **** *  not return until the result is ready.
1828:Generated_Source\PSoC5/ADC.c **** *
1829:Generated_Source\PSoC5/ADC.c **** * Parameters:
1830:Generated_Source\PSoC5/ADC.c **** *  None
1831:Generated_Source\PSoC5/ADC.c **** *
1832:Generated_Source\PSoC5/ADC.c **** * Return:
1833:Generated_Source\PSoC5/ADC.c **** *  int32: ADC result.
1834:Generated_Source\PSoC5/ADC.c **** *
1835:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
1836:Generated_Source\PSoC5/ADC.c **** int32 ADC_Read32(void) 
1837:Generated_Source\PSoC5/ADC.c **** {
 1991              		.loc 1 1837 0
 1992              		.cfi_startproc
 1993              		@ args = 0, pretend = 0, frame = 0
 1994              		@ frame_needed = 0, uses_anonymous_args = 0
 1995 0000 10B5     		push	{r4, lr}
 1996              		.cfi_def_cfa_offset 8
 1997              		.cfi_offset 4, -8
 1998              		.cfi_offset 14, -4
1838:Generated_Source\PSoC5/ADC.c ****     int32 result;
1839:Generated_Source\PSoC5/ADC.c ****     
1840:Generated_Source\PSoC5/ADC.c ****     /* Clear pending conversion done status */
1841:Generated_Source\PSoC5/ADC.c ****     ADC_DEC_SR_REG |= ADC_DEC_INTR_CLEAR;
 1999              		.loc 1 1841 0
 2000 0002 084A     		ldr	r2, .L138
 2001 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 2002 0006 43F00403 		orr	r3, r3, #4
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 73


 2003 000a 1370     		strb	r3, [r2]
1842:Generated_Source\PSoC5/ADC.c ****     ADC_StartConvert();
 2004              		.loc 1 1842 0
 2005 000c FFF7FEFF 		bl	ADC_StartConvert
 2006              	.LVL175:
1843:Generated_Source\PSoC5/ADC.c ****     (void)ADC_IsEndConversion(ADC_WAIT_FOR_RESULT);
 2007              		.loc 1 1843 0
 2008 0010 0020     		movs	r0, #0
 2009 0012 FFF7FEFF 		bl	ADC_IsEndConversion
 2010              	.LVL176:
1844:Generated_Source\PSoC5/ADC.c ****      result = ADC_GetResult32();
 2011              		.loc 1 1844 0
 2012 0016 FFF7FEFF 		bl	ADC_GetResult32
 2013              	.LVL177:
 2014 001a 0446     		mov	r4, r0
 2015              	.LVL178:
1845:Generated_Source\PSoC5/ADC.c ****     ADC_StopConvert();
 2016              		.loc 1 1845 0
 2017 001c FFF7FEFF 		bl	ADC_StopConvert
 2018              	.LVL179:
1846:Generated_Source\PSoC5/ADC.c ****     
1847:Generated_Source\PSoC5/ADC.c ****      return(result);
1848:Generated_Source\PSoC5/ADC.c **** }
 2019              		.loc 1 1848 0
 2020 0020 2046     		mov	r0, r4
 2021 0022 10BD     		pop	{r4, pc}
 2022              	.LVL180:
 2023              	.L139:
 2024              		.align	2
 2025              	.L138:
 2026 0024 014E0040 		.word	1073761793
 2027              		.cfi_endproc
 2028              	.LFE25:
 2029              		.size	ADC_Read32, .-ADC_Read32
 2030              		.comm	ADC_CountsPerVolt,4,4
 2031              		.global	ADC_Offset
 2032              		.global	ADC_Config
 2033              		.global	ADC_started
 2034              		.global	ADC_initVar
 2035              		.global	ADC_stopConversion
 2036              		.global	ADC_convDone
 2037              		.data
 2038              		.set	.LANCHOR1,. + 0
 2039              		.type	ADC_Config, %object
 2040              		.size	ADC_Config, 1
 2041              	ADC_Config:
 2042 0000 01       		.byte	1
 2043              		.bss
 2044              		.align	2
 2045              		.set	.LANCHOR0,. + 0
 2046              		.type	ADC_gcor, %object
 2047              		.size	ADC_gcor, 8
 2048              	ADC_gcor:
 2049 0000 00000000 		.space	8
 2049      00000000 
 2050              		.type	ADC_stopConversion, %object
 2051              		.size	ADC_stopConversion, 1
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 74


 2052              	ADC_stopConversion:
 2053 0008 00       		.space	1
 2054              		.type	ADC_convDone, %object
 2055              		.size	ADC_convDone, 1
 2056              	ADC_convDone:
 2057 0009 00       		.space	1
 2058              		.type	ADC_initVar, %object
 2059              		.size	ADC_initVar, 1
 2060              	ADC_initVar:
 2061 000a 00       		.space	1
 2062              		.type	ADC_started, %object
 2063              		.size	ADC_started, 1
 2064              	ADC_started:
 2065 000b 00       		.space	1
 2066              		.type	ADC_Offset, %object
 2067              		.size	ADC_Offset, 4
 2068              	ADC_Offset:
 2069 000c 00000000 		.space	4
 2070              		.text
 2071              	.Letext0:
 2072              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 2073              		.file 3 "Generated_Source\\PSoC5\\ADC.h"
 2074              		.file 4 "Generated_Source\\PSoC5\\CyLib.h"
 2075              		.file 5 "Generated_Source\\PSoC5\\ADC_AMux.h"
 2076              		.file 6 "Generated_Source\\PSoC5\\ADC_Ext_CP_Clk.h"
 2077              		.file 7 "Generated_Source\\PSoC5\\ADC_theACLK.h"
 2078              		.section	.debug_info,"",%progbits
 2079              	.Ldebug_info0:
 2080 0000 B40A0000 		.4byte	0xab4
 2081 0004 0400     		.2byte	0x4
 2082 0006 00000000 		.4byte	.Ldebug_abbrev0
 2083 000a 04       		.byte	0x4
 2084 000b 01       		.uleb128 0x1
 2085 000c F7030000 		.4byte	.LASF101
 2086 0010 0C       		.byte	0xc
 2087 0011 92000000 		.4byte	.LASF102
 2088 0015 1C030000 		.4byte	.LASF103
 2089 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2090 001d 00000000 		.4byte	0
 2091 0021 00000000 		.4byte	.Ldebug_line0
 2092 0025 02       		.uleb128 0x2
 2093 0026 04       		.byte	0x4
 2094 0027 04       		.byte	0x4
 2095 0028 52030000 		.4byte	.LASF0
 2096 002c 02       		.uleb128 0x2
 2097 002d 01       		.byte	0x1
 2098 002e 06       		.byte	0x6
 2099 002f E9000000 		.4byte	.LASF1
 2100 0033 02       		.uleb128 0x2
 2101 0034 01       		.byte	0x1
 2102 0035 08       		.byte	0x8
 2103 0036 90030000 		.4byte	.LASF2
 2104 003a 02       		.uleb128 0x2
 2105 003b 02       		.byte	0x2
 2106 003c 05       		.byte	0x5
 2107 003d B6030000 		.4byte	.LASF3
 2108 0041 02       		.uleb128 0x2
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 75


 2109 0042 02       		.byte	0x2
 2110 0043 07       		.byte	0x7
 2111 0044 29020000 		.4byte	.LASF4
 2112 0048 02       		.uleb128 0x2
 2113 0049 04       		.byte	0x4
 2114 004a 05       		.byte	0x5
 2115 004b 2B010000 		.4byte	.LASF5
 2116 004f 02       		.uleb128 0x2
 2117 0050 04       		.byte	0x4
 2118 0051 07       		.byte	0x7
 2119 0052 F0010000 		.4byte	.LASF6
 2120 0056 02       		.uleb128 0x2
 2121 0057 08       		.byte	0x8
 2122 0058 05       		.byte	0x5
 2123 0059 DB000000 		.4byte	.LASF7
 2124 005d 02       		.uleb128 0x2
 2125 005e 08       		.byte	0x8
 2126 005f 07       		.byte	0x7
 2127 0060 7B000000 		.4byte	.LASF8
 2128 0064 03       		.uleb128 0x3
 2129 0065 04       		.byte	0x4
 2130 0066 05       		.byte	0x5
 2131 0067 696E7400 		.ascii	"int\000"
 2132 006b 02       		.uleb128 0x2
 2133 006c 04       		.byte	0x4
 2134 006d 07       		.byte	0x7
 2135 006e DC010000 		.4byte	.LASF9
 2136 0072 04       		.uleb128 0x4
 2137 0073 4E010000 		.4byte	.LASF10
 2138 0077 02       		.byte	0x2
 2139 0078 E401     		.2byte	0x1e4
 2140 007a 33000000 		.4byte	0x33
 2141 007e 04       		.uleb128 0x4
 2142 007f 00000000 		.4byte	.LASF11
 2143 0083 02       		.byte	0x2
 2144 0084 E501     		.2byte	0x1e5
 2145 0086 41000000 		.4byte	0x41
 2146 008a 04       		.uleb128 0x4
 2147 008b 7B010000 		.4byte	.LASF12
 2148 008f 02       		.byte	0x2
 2149 0090 E601     		.2byte	0x1e6
 2150 0092 4F000000 		.4byte	0x4f
 2151 0096 04       		.uleb128 0x4
 2152 0097 3C020000 		.4byte	.LASF13
 2153 009b 02       		.byte	0x2
 2154 009c E701     		.2byte	0x1e7
 2155 009e 2C000000 		.4byte	0x2c
 2156 00a2 04       		.uleb128 0x4
 2157 00a3 6D050000 		.4byte	.LASF14
 2158 00a7 02       		.byte	0x2
 2159 00a8 E801     		.2byte	0x1e8
 2160 00aa 3A000000 		.4byte	0x3a
 2161 00ae 04       		.uleb128 0x4
 2162 00af 0E010000 		.4byte	.LASF15
 2163 00b3 02       		.byte	0x2
 2164 00b4 E901     		.2byte	0x1e9
 2165 00b6 48000000 		.4byte	0x48
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 76


 2166 00ba 04       		.uleb128 0x4
 2167 00bb 7C020000 		.4byte	.LASF16
 2168 00bf 02       		.byte	0x2
 2169 00c0 EA01     		.2byte	0x1ea
 2170 00c2 25000000 		.4byte	0x25
 2171 00c6 02       		.uleb128 0x2
 2172 00c7 08       		.byte	0x8
 2173 00c8 04       		.byte	0x4
 2174 00c9 5E010000 		.4byte	.LASF17
 2175 00cd 02       		.uleb128 0x2
 2176 00ce 01       		.byte	0x1
 2177 00cf 08       		.byte	0x8
 2178 00d0 D9040000 		.4byte	.LASF18
 2179 00d4 04       		.uleb128 0x4
 2180 00d5 6C030000 		.4byte	.LASF19
 2181 00d9 02       		.byte	0x2
 2182 00da 8E02     		.2byte	0x28e
 2183 00dc E0000000 		.4byte	0xe0
 2184 00e0 05       		.uleb128 0x5
 2185 00e1 72000000 		.4byte	0x72
 2186 00e5 04       		.uleb128 0x4
 2187 00e6 48010000 		.4byte	.LASF20
 2188 00ea 02       		.byte	0x2
 2189 00eb 8F02     		.2byte	0x28f
 2190 00ed F1000000 		.4byte	0xf1
 2191 00f1 05       		.uleb128 0x5
 2192 00f2 7E000000 		.4byte	0x7e
 2193 00f6 04       		.uleb128 0x4
 2194 00f7 76020000 		.4byte	.LASF21
 2195 00fb 02       		.byte	0x2
 2196 00fc 9002     		.2byte	0x290
 2197 00fe 02010000 		.4byte	0x102
 2198 0102 05       		.uleb128 0x5
 2199 0103 8A000000 		.4byte	0x8a
 2200 0107 02       		.uleb128 0x2
 2201 0108 08       		.byte	0x8
 2202 0109 04       		.byte	0x4
 2203 010a 8D020000 		.4byte	.LASF22
 2204 010e 02       		.uleb128 0x2
 2205 010f 04       		.byte	0x4
 2206 0110 07       		.byte	0x7
 2207 0111 84020000 		.4byte	.LASF23
 2208 0115 06       		.uleb128 0x6
 2209 0116 04       		.byte	0x4
 2210 0117 03       		.byte	0x3
 2211 0118 2F       		.byte	0x2f
 2212 0119 36010000 		.4byte	0x136
 2213 011d 07       		.uleb128 0x7
 2214 011e 6D000000 		.4byte	.LASF24
 2215 0122 03       		.byte	0x3
 2216 0123 31       		.byte	0x31
 2217 0124 7E000000 		.4byte	0x7e
 2218 0128 00       		.byte	0
 2219 0129 07       		.uleb128 0x7
 2220 012a EC040000 		.4byte	.LASF25
 2221 012e 03       		.byte	0x3
 2222 012f 32       		.byte	0x32
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 77


 2223 0130 72000000 		.4byte	0x72
 2224 0134 02       		.byte	0x2
 2225 0135 00       		.byte	0
 2226 0136 08       		.uleb128 0x8
 2227 0137 19020000 		.4byte	.LASF26
 2228 013b 03       		.byte	0x3
 2229 013c 33       		.byte	0x33
 2230 013d 15010000 		.4byte	0x115
 2231 0141 09       		.uleb128 0x9
 2232 0142 5B020000 		.4byte	.LASF36
 2233 0146 01       		.byte	0x1
 2234 0147 5906     		.2byte	0x659
 2235 0149 00000000 		.4byte	.LFB21
 2236 014d E0000000 		.4byte	.LFE21-.LFB21
 2237 0151 01       		.uleb128 0x1
 2238 0152 9C       		.byte	0x9c
 2239 0153 F7010000 		.4byte	0x1f7
 2240 0157 0A       		.uleb128 0xa
 2241 0158 25000000 		.4byte	.LASF27
 2242 015c 01       		.byte	0x1
 2243 015d 5906     		.2byte	0x659
 2244 015f 72000000 		.4byte	0x72
 2245 0163 00000000 		.4byte	.LLST0
 2246 0167 0A       		.uleb128 0xa
 2247 0168 71030000 		.4byte	.LASF28
 2248 016c 01       		.byte	0x1
 2249 016d 5906     		.2byte	0x659
 2250 016f 7E000000 		.4byte	0x7e
 2251 0173 3A000000 		.4byte	.LLST1
 2252 0177 0A       		.uleb128 0xa
 2253 0178 CB000000 		.4byte	.LASF29
 2254 017c 01       		.byte	0x1
 2255 017d 5906     		.2byte	0x659
 2256 017f 7E000000 		.4byte	0x7e
 2257 0183 74000000 		.4byte	.LLST2
 2258 0187 0A       		.uleb128 0xa
 2259 0188 95040000 		.4byte	.LASF30
 2260 018c 01       		.byte	0x1
 2261 018d 5A06     		.2byte	0x65a
 2262 018f 72000000 		.4byte	0x72
 2263 0193 AE000000 		.4byte	.LLST3
 2264 0197 0A       		.uleb128 0xa
 2265 0198 E5040000 		.4byte	.LASF31
 2266 019c 01       		.byte	0x1
 2267 019d 5A06     		.2byte	0x65a
 2268 019f 72000000 		.4byte	0x72
 2269 01a3 01010000 		.4byte	.LLST4
 2270 01a7 0B       		.uleb128 0xb
 2271 01a8 70020000 		.4byte	.LASF32
 2272 01ac 01       		.byte	0x1
 2273 01ad 5C06     		.2byte	0x65c
 2274 01af 96000000 		.4byte	0x96
 2275 01b3 2D010000 		.4byte	.LLST5
 2276 01b7 0B       		.uleb128 0xb
 2277 01b8 7E030000 		.4byte	.LASF33
 2278 01bc 01       		.byte	0x1
 2279 01bd 5D06     		.2byte	0x65d
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 78


 2280 01bf AE000000 		.4byte	0xae
 2281 01c3 A3010000 		.4byte	.LLST6
 2282 01c7 0B       		.uleb128 0xb
 2283 01c8 51020000 		.4byte	.LASF34
 2284 01cc 01       		.byte	0x1
 2285 01cd 5E06     		.2byte	0x65e
 2286 01cf 7E000000 		.4byte	0x7e
 2287 01d3 B6010000 		.4byte	.LLST7
 2288 01d7 0B       		.uleb128 0xb
 2289 01d8 C9030000 		.4byte	.LASF35
 2290 01dc 01       		.byte	0x1
 2291 01dd 5F06     		.2byte	0x65f
 2292 01df 8A000000 		.4byte	0x8a
 2293 01e3 DF010000 		.4byte	.LLST8
 2294 01e7 0C       		.uleb128 0xc
 2295 01e8 B8000000 		.4byte	.LVL33
 2296 01ec 3E0A0000 		.4byte	0xa3e
 2297 01f0 0D       		.uleb128 0xd
 2298 01f1 01       		.uleb128 0x1
 2299 01f2 50       		.byte	0x50
 2300 01f3 01       		.uleb128 0x1
 2301 01f4 30       		.byte	0x30
 2302 01f5 00       		.byte	0
 2303 01f6 00       		.byte	0
 2304 01f7 09       		.uleb128 0x9
 2305 01f8 9D010000 		.4byte	.LASF37
 2306 01fc 01       		.byte	0x1
 2307 01fd C406     		.2byte	0x6c4
 2308 01ff 00000000 		.4byte	.LFB22
 2309 0203 4C000000 		.4byte	.LFE22-.LFB22
 2310 0207 01       		.uleb128 0x1
 2311 0208 9C       		.byte	0x9c
 2312 0209 5A020000 		.4byte	0x25a
 2313 020d 0A       		.uleb128 0xa
 2314 020e AF010000 		.4byte	.LASF38
 2315 0212 01       		.byte	0x1
 2316 0213 C406     		.2byte	0x6c4
 2317 0215 72000000 		.4byte	0x72
 2318 0219 F2010000 		.4byte	.LLST9
 2319 021d 0B       		.uleb128 0xb
 2320 021e 39050000 		.4byte	.LASF39
 2321 0222 01       		.byte	0x1
 2322 0223 C606     		.2byte	0x6c6
 2323 0225 72000000 		.4byte	0x72
 2324 0229 13020000 		.4byte	.LLST10
 2325 022d 0E       		.uleb128 0xe
 2326 022e 08000000 		.4byte	.LVL36
 2327 0232 490A0000 		.4byte	0xa49
 2328 0236 0F       		.uleb128 0xf
 2329 0237 28000000 		.4byte	.LVL38
 2330 023b 540A0000 		.4byte	0xa54
 2331 023f 49020000 		.4byte	0x249
 2332 0243 0D       		.uleb128 0xd
 2333 0244 01       		.uleb128 0x1
 2334 0245 50       		.byte	0x50
 2335 0246 01       		.uleb128 0x1
 2336 0247 33       		.byte	0x33
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 79


 2337 0248 00       		.byte	0
 2338 0249 0C       		.uleb128 0xc
 2339 024a 3E000000 		.4byte	.LVL39
 2340 024e 5F0A0000 		.4byte	0xa5f
 2341 0252 0D       		.uleb128 0xd
 2342 0253 01       		.uleb128 0x1
 2343 0254 50       		.byte	0x50
 2344 0255 02       		.uleb128 0x2
 2345 0256 76       		.byte	0x76
 2346 0257 00       		.sleb128 0
 2347 0258 00       		.byte	0
 2348 0259 00       		.byte	0
 2349 025a 09       		.uleb128 0x9
 2350 025b C2020000 		.4byte	.LASF40
 2351 025f 01       		.byte	0x1
 2352 0260 DF04     		.2byte	0x4df
 2353 0262 00000000 		.4byte	.LFB19
 2354 0266 AC010000 		.4byte	.LFE19-.LFB19
 2355 026a 01       		.uleb128 0x1
 2356 026b 9C       		.byte	0x9c
 2357 026c 59030000 		.4byte	0x359
 2358 0270 0A       		.uleb128 0xa
 2359 0271 E5040000 		.4byte	.LASF31
 2360 0275 01       		.byte	0x1
 2361 0276 DF04     		.2byte	0x4df
 2362 0278 72000000 		.4byte	0x72
 2363 027c 26020000 		.4byte	.LLST11
 2364 0280 0F       		.uleb128 0xf
 2365 0281 86000000 		.4byte	.LVL43
 2366 0285 F7010000 		.4byte	0x1f7
 2367 0289 94020000 		.4byte	0x294
 2368 028d 0D       		.uleb128 0xd
 2369 028e 01       		.uleb128 0x1
 2370 028f 50       		.byte	0x50
 2371 0290 02       		.uleb128 0x2
 2372 0291 08       		.byte	0x8
 2373 0292 44       		.byte	0x44
 2374 0293 00       		.byte	0
 2375 0294 0F       		.uleb128 0xf
 2376 0295 A8000000 		.4byte	.LVL44
 2377 0299 6A0A0000 		.4byte	0xa6a
 2378 029d A8020000 		.4byte	0x2a8
 2379 02a1 0D       		.uleb128 0xd
 2380 02a2 01       		.uleb128 0x1
 2381 02a3 50       		.byte	0x50
 2382 02a4 02       		.uleb128 0x2
 2383 02a5 75       		.byte	0x75
 2384 02a6 00       		.sleb128 0
 2385 02a7 00       		.byte	0
 2386 02a8 0F       		.uleb128 0xf
 2387 02a9 B6000000 		.4byte	.LVL45
 2388 02ad 750A0000 		.4byte	0xa75
 2389 02b1 C1020000 		.4byte	0x2c1
 2390 02b5 0D       		.uleb128 0xd
 2391 02b6 01       		.uleb128 0x1
 2392 02b7 50       		.byte	0x50
 2393 02b8 01       		.uleb128 0x1
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 80


 2394 02b9 34       		.byte	0x34
 2395 02ba 0D       		.uleb128 0xd
 2396 02bb 01       		.uleb128 0x1
 2397 02bc 51       		.byte	0x51
 2398 02bd 02       		.uleb128 0x2
 2399 02be 76       		.byte	0x76
 2400 02bf 00       		.sleb128 0
 2401 02c0 00       		.byte	0
 2402 02c1 0F       		.uleb128 0xf
 2403 02c2 BE000000 		.4byte	.LVL46
 2404 02c6 800A0000 		.4byte	0xa80
 2405 02ca DA020000 		.4byte	0x2da
 2406 02ce 0D       		.uleb128 0xd
 2407 02cf 01       		.uleb128 0x1
 2408 02d0 50       		.byte	0x50
 2409 02d1 01       		.uleb128 0x1
 2410 02d2 41       		.byte	0x41
 2411 02d3 0D       		.uleb128 0xd
 2412 02d4 01       		.uleb128 0x1
 2413 02d5 51       		.byte	0x51
 2414 02d6 02       		.uleb128 0x2
 2415 02d7 76       		.byte	0x76
 2416 02d8 00       		.sleb128 0
 2417 02d9 00       		.byte	0
 2418 02da 0F       		.uleb128 0xf
 2419 02db C6000000 		.4byte	.LVL47
 2420 02df 8B0A0000 		.4byte	0xa8b
 2421 02e3 ED020000 		.4byte	0x2ed
 2422 02e7 0D       		.uleb128 0xd
 2423 02e8 01       		.uleb128 0x1
 2424 02e9 50       		.byte	0x50
 2425 02ea 01       		.uleb128 0x1
 2426 02eb 4D       		.byte	0x4d
 2427 02ec 00       		.byte	0
 2428 02ed 0F       		.uleb128 0xf
 2429 02ee 44010000 		.4byte	.LVL48
 2430 02f2 F7010000 		.4byte	0x1f7
 2431 02f6 01030000 		.4byte	0x301
 2432 02fa 0D       		.uleb128 0xd
 2433 02fb 01       		.uleb128 0x1
 2434 02fc 50       		.byte	0x50
 2435 02fd 02       		.uleb128 0x2
 2436 02fe 08       		.byte	0x8
 2437 02ff 44       		.byte	0x44
 2438 0300 00       		.byte	0
 2439 0301 0F       		.uleb128 0xf
 2440 0302 66010000 		.4byte	.LVL49
 2441 0306 6A0A0000 		.4byte	0xa6a
 2442 030a 15030000 		.4byte	0x315
 2443 030e 0D       		.uleb128 0xd
 2444 030f 01       		.uleb128 0x1
 2445 0310 50       		.byte	0x50
 2446 0311 02       		.uleb128 0x2
 2447 0312 74       		.byte	0x74
 2448 0313 00       		.sleb128 0
 2449 0314 00       		.byte	0
 2450 0315 0F       		.uleb128 0xf
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 81


 2451 0316 76010000 		.4byte	.LVL50
 2452 031a 750A0000 		.4byte	0xa75
 2453 031e 2F030000 		.4byte	0x32f
 2454 0322 0D       		.uleb128 0xd
 2455 0323 01       		.uleb128 0x1
 2456 0324 50       		.byte	0x50
 2457 0325 02       		.uleb128 0x2
 2458 0326 76       		.byte	0x76
 2459 0327 00       		.sleb128 0
 2460 0328 0D       		.uleb128 0xd
 2461 0329 01       		.uleb128 0x1
 2462 032a 51       		.byte	0x51
 2463 032b 02       		.uleb128 0x2
 2464 032c 75       		.byte	0x75
 2465 032d 00       		.sleb128 0
 2466 032e 00       		.byte	0
 2467 032f 0F       		.uleb128 0xf
 2468 0330 7E010000 		.4byte	.LVL51
 2469 0334 800A0000 		.4byte	0xa80
 2470 0338 49030000 		.4byte	0x349
 2471 033c 0D       		.uleb128 0xd
 2472 033d 01       		.uleb128 0x1
 2473 033e 50       		.byte	0x50
 2474 033f 02       		.uleb128 0x2
 2475 0340 08       		.byte	0x8
 2476 0341 25       		.byte	0x25
 2477 0342 0D       		.uleb128 0xd
 2478 0343 01       		.uleb128 0x1
 2479 0344 51       		.byte	0x51
 2480 0345 02       		.uleb128 0x2
 2481 0346 75       		.byte	0x75
 2482 0347 00       		.sleb128 0
 2483 0348 00       		.byte	0
 2484 0349 0C       		.uleb128 0xc
 2485 034a 86010000 		.4byte	.LVL52
 2486 034e 8B0A0000 		.4byte	0xa8b
 2487 0352 0D       		.uleb128 0xd
 2488 0353 01       		.uleb128 0x1
 2489 0354 50       		.byte	0x50
 2490 0355 01       		.uleb128 0x1
 2491 0356 4D       		.byte	0x4d
 2492 0357 00       		.byte	0
 2493 0358 00       		.byte	0
 2494 0359 10       		.uleb128 0x10
 2495 035a 72000000 		.4byte	.LASF41
 2496 035e 01       		.byte	0x1
 2497 035f 5B       		.byte	0x5b
 2498 0360 00000000 		.4byte	.LFB0
 2499 0364 D8000000 		.4byte	.LFE0-.LFB0
 2500 0368 01       		.uleb128 0x1
 2501 0369 9C       		.byte	0x9c
 2502 036a 10040000 		.4byte	0x410
 2503 036e 0F       		.uleb128 0xf
 2504 036f 16000000 		.4byte	.LVL53
 2505 0373 960A0000 		.4byte	0xa96
 2506 0377 81030000 		.4byte	0x381
 2507 037b 0D       		.uleb128 0xd
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 82


 2508 037c 01       		.uleb128 0x1
 2509 037d 50       		.byte	0x50
 2510 037e 01       		.uleb128 0x1
 2511 037f 40       		.byte	0x40
 2512 0380 00       		.byte	0
 2513 0381 0F       		.uleb128 0xf
 2514 0382 1C000000 		.4byte	.LVL54
 2515 0386 A10A0000 		.4byte	0xaa1
 2516 038a 94030000 		.4byte	0x394
 2517 038e 0D       		.uleb128 0xd
 2518 038f 01       		.uleb128 0x1
 2519 0390 50       		.byte	0x50
 2520 0391 01       		.uleb128 0x1
 2521 0392 40       		.byte	0x40
 2522 0393 00       		.byte	0
 2523 0394 0F       		.uleb128 0xf
 2524 0395 24000000 		.4byte	.LVL55
 2525 0399 AC0A0000 		.4byte	0xaac
 2526 039d AC030000 		.4byte	0x3ac
 2527 03a1 0D       		.uleb128 0xd
 2528 03a2 01       		.uleb128 0x1
 2529 03a3 50       		.byte	0x50
 2530 03a4 01       		.uleb128 0x1
 2531 03a5 4D       		.byte	0x4d
 2532 03a6 0D       		.uleb128 0xd
 2533 03a7 01       		.uleb128 0x1
 2534 03a8 51       		.byte	0x51
 2535 03a9 01       		.uleb128 0x1
 2536 03aa 37       		.byte	0x37
 2537 03ab 00       		.byte	0
 2538 03ac 0F       		.uleb128 0xf
 2539 03ad 80000000 		.4byte	.LVL56
 2540 03b1 41010000 		.4byte	0x141
 2541 03b5 D9030000 		.4byte	0x3d9
 2542 03b9 0D       		.uleb128 0xd
 2543 03ba 01       		.uleb128 0x1
 2544 03bb 50       		.byte	0x50
 2545 03bc 01       		.uleb128 0x1
 2546 03bd 33       		.byte	0x33
 2547 03be 0D       		.uleb128 0xd
 2548 03bf 01       		.uleb128 0x1
 2549 03c0 51       		.byte	0x51
 2550 03c1 03       		.uleb128 0x3
 2551 03c2 0A       		.byte	0xa
 2552 03c3 027F     		.2byte	0x7f02
 2553 03c5 0D       		.uleb128 0xd
 2554 03c6 01       		.uleb128 0x1
 2555 03c7 52       		.byte	0x52
 2556 03c8 03       		.uleb128 0x3
 2557 03c9 0B       		.byte	0xb
 2558 03ca 0080     		.2byte	0x8000
 2559 03cc 0D       		.uleb128 0xd
 2560 03cd 01       		.uleb128 0x1
 2561 03ce 53       		.byte	0x53
 2562 03cf 01       		.uleb128 0x1
 2563 03d0 44       		.byte	0x44
 2564 03d1 0D       		.uleb128 0xd
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 83


 2565 03d2 02       		.uleb128 0x2
 2566 03d3 7D       		.byte	0x7d
 2567 03d4 00       		.sleb128 0
 2568 03d5 02       		.uleb128 0x2
 2569 03d6 77       		.byte	0x77
 2570 03d7 00       		.sleb128 0
 2571 03d8 00       		.byte	0
 2572 03d9 0F       		.uleb128 0xf
 2573 03da 94000000 		.4byte	.LVL57
 2574 03de 41010000 		.4byte	0x141
 2575 03e2 06040000 		.4byte	0x406
 2576 03e6 0D       		.uleb128 0xd
 2577 03e7 01       		.uleb128 0x1
 2578 03e8 50       		.byte	0x50
 2579 03e9 02       		.uleb128 0x2
 2580 03ea 74       		.byte	0x74
 2581 03eb 00       		.sleb128 0
 2582 03ec 0D       		.uleb128 0xd
 2583 03ed 01       		.uleb128 0x1
 2584 03ee 51       		.byte	0x51
 2585 03ef 03       		.uleb128 0x3
 2586 03f0 0B       		.byte	0xb
 2587 03f1 DA90     		.2byte	0x90da
 2588 03f3 0D       		.uleb128 0xd
 2589 03f4 01       		.uleb128 0x1
 2590 03f5 52       		.byte	0x52
 2591 03f6 03       		.uleb128 0x3
 2592 03f7 0B       		.byte	0xb
 2593 03f8 0080     		.2byte	0x8000
 2594 03fa 0D       		.uleb128 0xd
 2595 03fb 01       		.uleb128 0x1
 2596 03fc 53       		.byte	0x53
 2597 03fd 01       		.uleb128 0x1
 2598 03fe 40       		.byte	0x40
 2599 03ff 0D       		.uleb128 0xd
 2600 0400 02       		.uleb128 0x2
 2601 0401 7D       		.byte	0x7d
 2602 0402 00       		.sleb128 0
 2603 0403 01       		.uleb128 0x1
 2604 0404 32       		.byte	0x32
 2605 0405 00       		.byte	0
 2606 0406 0E       		.uleb128 0xe
 2607 0407 B4000000 		.4byte	.LVL58
 2608 040b 5A020000 		.4byte	0x25a
 2609 040f 00       		.byte	0
 2610 0410 10       		.uleb128 0x10
 2611 0411 4A050000 		.4byte	.LASF42
 2612 0415 01       		.byte	0x1
 2613 0416 BA       		.byte	0xba
 2614 0417 00000000 		.4byte	.LFB1
 2615 041b D8000000 		.4byte	.LFE1-.LFB1
 2616 041f 01       		.uleb128 0x1
 2617 0420 9C       		.byte	0x9c
 2618 0421 6C040000 		.4byte	0x46c
 2619 0425 11       		.uleb128 0x11
 2620 0426 E5040000 		.4byte	.LASF31
 2621 042a 01       		.byte	0x1
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 84


 2622 042b BC       		.byte	0xbc
 2623 042c 72000000 		.4byte	0x72
 2624 0430 12       		.uleb128 0x12
 2625 0431 39050000 		.4byte	.LASF39
 2626 0435 01       		.byte	0x1
 2627 0436 BD       		.byte	0xbd
 2628 0437 72000000 		.4byte	0x72
 2629 043b 47020000 		.4byte	.LLST12
 2630 043f 0E       		.uleb128 0xe
 2631 0440 06000000 		.4byte	.LVL59
 2632 0444 490A0000 		.4byte	0xa49
 2633 0448 0F       		.uleb128 0xf
 2634 0449 54000000 		.4byte	.LVL62
 2635 044d 540A0000 		.4byte	0xa54
 2636 0451 5B040000 		.4byte	0x45b
 2637 0455 0D       		.uleb128 0xd
 2638 0456 01       		.uleb128 0x1
 2639 0457 50       		.byte	0x50
 2640 0458 01       		.uleb128 0x1
 2641 0459 33       		.byte	0x33
 2642 045a 00       		.byte	0
 2643 045b 0C       		.uleb128 0xc
 2644 045c B0000000 		.4byte	.LVL63
 2645 0460 5F0A0000 		.4byte	0xa5f
 2646 0464 0D       		.uleb128 0xd
 2647 0465 01       		.uleb128 0x1
 2648 0466 50       		.byte	0x50
 2649 0467 02       		.uleb128 0x2
 2650 0468 76       		.byte	0x76
 2651 0469 00       		.sleb128 0
 2652 046a 00       		.byte	0
 2653 046b 00       		.byte	0
 2654 046c 13       		.uleb128 0x13
 2655 046d 14010000 		.4byte	.LASF43
 2656 0471 01       		.byte	0x1
 2657 0472 4E01     		.2byte	0x14e
 2658 0474 00000000 		.4byte	.LFB2
 2659 0478 28000000 		.4byte	.LFE2-.LFB2
 2660 047c 01       		.uleb128 0x1
 2661 047d 9C       		.byte	0x9c
 2662 047e 95040000 		.4byte	0x495
 2663 0482 0E       		.uleb128 0xe
 2664 0483 16000000 		.4byte	.LVL65
 2665 0487 59030000 		.4byte	0x359
 2666 048b 0E       		.uleb128 0xe
 2667 048c 20000000 		.4byte	.LVL66
 2668 0490 10040000 		.4byte	0x410
 2669 0494 00       		.byte	0
 2670 0495 13       		.uleb128 0x13
 2671 0496 C0030000 		.4byte	.LASF44
 2672 049a 01       		.byte	0x1
 2673 049b 6F01     		.2byte	0x16f
 2674 049d 00000000 		.4byte	.LFB3
 2675 04a1 E4000000 		.4byte	.LFE3-.LFB3
 2676 04a5 01       		.uleb128 0x1
 2677 04a6 9C       		.byte	0x9c
 2678 04a7 E8040000 		.4byte	0x4e8
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 85


 2679 04ab 0B       		.uleb128 0xb
 2680 04ac 39050000 		.4byte	.LASF39
 2681 04b0 01       		.byte	0x1
 2682 04b1 7101     		.2byte	0x171
 2683 04b3 72000000 		.4byte	0x72
 2684 04b7 5A020000 		.4byte	.LLST13
 2685 04bb 0E       		.uleb128 0xe
 2686 04bc 06000000 		.4byte	.LVL67
 2687 04c0 490A0000 		.4byte	0xa49
 2688 04c4 0F       		.uleb128 0xf
 2689 04c5 4C000000 		.4byte	.LVL69
 2690 04c9 540A0000 		.4byte	0xa54
 2691 04cd D7040000 		.4byte	0x4d7
 2692 04d1 0D       		.uleb128 0xd
 2693 04d2 01       		.uleb128 0x1
 2694 04d3 50       		.byte	0x50
 2695 04d4 01       		.uleb128 0x1
 2696 04d5 33       		.byte	0x33
 2697 04d6 00       		.byte	0
 2698 04d7 0C       		.uleb128 0xc
 2699 04d8 CC000000 		.4byte	.LVL70
 2700 04dc 5F0A0000 		.4byte	0xa5f
 2701 04e0 0D       		.uleb128 0xd
 2702 04e1 01       		.uleb128 0x1
 2703 04e2 50       		.byte	0x50
 2704 04e3 02       		.uleb128 0x2
 2705 04e4 76       		.byte	0x76
 2706 04e5 00       		.sleb128 0
 2707 04e6 00       		.byte	0
 2708 04e7 00       		.byte	0
 2709 04e8 13       		.uleb128 0x13
 2710 04e9 FC000000 		.4byte	.LASF45
 2711 04ed 01       		.byte	0x1
 2712 04ee B201     		.2byte	0x1b2
 2713 04f0 00000000 		.4byte	.LFB4
 2714 04f4 18000000 		.4byte	.LFE4-.LFB4
 2715 04f8 01       		.uleb128 0x1
 2716 04f9 9C       		.byte	0x9c
 2717 04fa 1F050000 		.4byte	0x51f
 2718 04fe 0A       		.uleb128 0xa
 2719 04ff 17030000 		.4byte	.LASF46
 2720 0503 01       		.byte	0x1
 2721 0504 B201     		.2byte	0x1b2
 2722 0506 72000000 		.4byte	0x72
 2723 050a 6D020000 		.4byte	.LLST14
 2724 050e 0B       		.uleb128 0xb
 2725 050f 93050000 		.4byte	.LASF47
 2726 0513 01       		.byte	0x1
 2727 0514 B401     		.2byte	0x1b4
 2728 0516 72000000 		.4byte	0x72
 2729 051a 8E020000 		.4byte	.LLST15
 2730 051e 00       		.byte	0
 2731 051f 13       		.uleb128 0x13
 2732 0520 09050000 		.4byte	.LASF48
 2733 0524 01       		.byte	0x1
 2734 0525 D601     		.2byte	0x1d6
 2735 0527 00000000 		.4byte	.LFB5
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 86


 2736 052b 18000000 		.4byte	.LFE5-.LFB5
 2737 052f 01       		.uleb128 0x1
 2738 0530 9C       		.byte	0x9c
 2739 0531 56050000 		.4byte	0x556
 2740 0535 0A       		.uleb128 0xa
 2741 0536 FC020000 		.4byte	.LASF49
 2742 053a 01       		.byte	0x1
 2743 053b D601     		.2byte	0x1d6
 2744 053d 72000000 		.4byte	0x72
 2745 0541 AC020000 		.4byte	.LLST16
 2746 0545 0B       		.uleb128 0xb
 2747 0546 93050000 		.4byte	.LASF47
 2748 054a 01       		.byte	0x1
 2749 054b D801     		.2byte	0x1d8
 2750 054d 72000000 		.4byte	0x72
 2751 0551 CD020000 		.4byte	.LLST17
 2752 0555 00       		.byte	0
 2753 0556 14       		.uleb128 0x14
 2754 0557 99020000 		.4byte	.LASF53
 2755 055b 01       		.byte	0x1
 2756 055c FE01     		.2byte	0x1fe
 2757 055e 72000000 		.4byte	0x72
 2758 0562 00000000 		.4byte	.LFB6
 2759 0566 74000000 		.4byte	.LFE6-.LFB6
 2760 056a 01       		.uleb128 0x1
 2761 056b 9C       		.byte	0x9c
 2762 056c B1050000 		.4byte	0x5b1
 2763 0570 0A       		.uleb128 0xa
 2764 0571 62050000 		.4byte	.LASF50
 2765 0575 01       		.byte	0x1
 2766 0576 FE01     		.2byte	0x1fe
 2767 0578 BA000000 		.4byte	0xba
 2768 057c EB020000 		.4byte	.LLST18
 2769 0580 0B       		.uleb128 0xb
 2770 0581 93050000 		.4byte	.LASF47
 2771 0585 01       		.byte	0x1
 2772 0586 0002     		.2byte	0x200
 2773 0588 7E000000 		.4byte	0x7e
 2774 058c 19030000 		.4byte	.LLST19
 2775 0590 0B       		.uleb128 0xb
 2776 0591 F5000000 		.4byte	.LASF51
 2777 0595 01       		.byte	0x1
 2778 0596 0102     		.2byte	0x201
 2779 0598 72000000 		.4byte	0x72
 2780 059c 51030000 		.4byte	.LLST20
 2781 05a0 0B       		.uleb128 0xb
 2782 05a1 F9040000 		.4byte	.LASF52
 2783 05a5 01       		.byte	0x1
 2784 05a6 0202     		.2byte	0x202
 2785 05a8 BA000000 		.4byte	0xba
 2786 05ac 70030000 		.4byte	.LLST21
 2787 05b0 00       		.byte	0
 2788 05b1 15       		.uleb128 0x15
 2789 05b2 55050000 		.4byte	.LASF54
 2790 05b6 01       		.byte	0x1
 2791 05b7 2D02     		.2byte	0x22d
 2792 05b9 7E000000 		.4byte	0x7e
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 87


 2793 05bd 00000000 		.4byte	.LFB7
 2794 05c1 24000000 		.4byte	.LFE7-.LFB7
 2795 05c5 01       		.uleb128 0x1
 2796 05c6 9C       		.byte	0x9c
 2797 05c7 EC050000 		.4byte	0x5ec
 2798 05cb 0B       		.uleb128 0xb
 2799 05cc DE040000 		.4byte	.LASF55
 2800 05d0 01       		.byte	0x1
 2801 05d1 2F02     		.2byte	0x22f
 2802 05d3 72000000 		.4byte	0x72
 2803 05d7 AF030000 		.4byte	.LLST22
 2804 05db 0B       		.uleb128 0xb
 2805 05dc 51020000 		.4byte	.LASF34
 2806 05e0 01       		.byte	0x1
 2807 05e1 3002     		.2byte	0x230
 2808 05e3 7E000000 		.4byte	0x7e
 2809 05e7 C2030000 		.4byte	.LLST23
 2810 05eb 00       		.byte	0
 2811 05ec 16       		.uleb128 0x16
 2812 05ed BA000000 		.4byte	.LASF56
 2813 05f1 01       		.byte	0x1
 2814 05f2 4F02     		.2byte	0x24f
 2815 05f4 00000000 		.4byte	.LFB8
 2816 05f8 10000000 		.4byte	.LFE8-.LFB8
 2817 05fc 01       		.uleb128 0x1
 2818 05fd 9C       		.byte	0x9c
 2819 05fe 16       		.uleb128 0x16
 2820 05ff 41020000 		.4byte	.LASF57
 2821 0603 01       		.byte	0x1
 2822 0604 6602     		.2byte	0x266
 2823 0606 00000000 		.4byte	.LFB9
 2824 060a 10000000 		.4byte	.LFE9-.LFB9
 2825 060e 01       		.uleb128 0x1
 2826 060f 9C       		.byte	0x9c
 2827 0610 15       		.uleb128 0x15
 2828 0611 A5020000 		.4byte	.LASF58
 2829 0615 01       		.byte	0x1
 2830 0616 8902     		.2byte	0x289
 2831 0618 72000000 		.4byte	0x72
 2832 061c 00000000 		.4byte	.LFB10
 2833 0620 30000000 		.4byte	.LFE10-.LFB10
 2834 0624 01       		.uleb128 0x1
 2835 0625 9C       		.byte	0x9c
 2836 0626 4B060000 		.4byte	0x64b
 2837 062a 0A       		.uleb128 0xa
 2838 062b B5010000 		.4byte	.LASF59
 2839 062f 01       		.byte	0x1
 2840 0630 8902     		.2byte	0x289
 2841 0632 72000000 		.4byte	0x72
 2842 0636 E0030000 		.4byte	.LLST24
 2843 063a 0B       		.uleb128 0xb
 2844 063b F5000000 		.4byte	.LASF51
 2845 063f 01       		.byte	0x1
 2846 0640 8B02     		.2byte	0x28b
 2847 0642 72000000 		.4byte	0x72
 2848 0646 01040000 		.4byte	.LLST25
 2849 064a 00       		.byte	0
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 88


 2850 064b 15       		.uleb128 0x15
 2851 064c D1020000 		.4byte	.LASF60
 2852 0650 01       		.byte	0x1
 2853 0651 B802     		.2byte	0x2b8
 2854 0653 96000000 		.4byte	0x96
 2855 0657 00000000 		.4byte	.LFB11
 2856 065b 48000000 		.4byte	.LFE11-.LFB11
 2857 065f 01       		.uleb128 0x1
 2858 0660 9C       		.byte	0x9c
 2859 0661 84060000 		.4byte	0x684
 2860 0665 17       		.uleb128 0x17
 2861 0666 9A050000 		.4byte	.LASF61
 2862 066a 01       		.byte	0x1
 2863 066b BA02     		.2byte	0x2ba
 2864 066d 96000000 		.4byte	0x96
 2865 0671 01       		.uleb128 0x1
 2866 0672 50       		.byte	0x50
 2867 0673 0B       		.uleb128 0xb
 2868 0674 FC020000 		.4byte	.LASF49
 2869 0678 01       		.byte	0x1
 2870 0679 BB02     		.2byte	0x2bb
 2871 067b 72000000 		.4byte	0x72
 2872 067f 1F040000 		.4byte	.LLST26
 2873 0683 00       		.byte	0
 2874 0684 15       		.uleb128 0x15
 2875 0685 A1050000 		.4byte	.LASF62
 2876 0689 01       		.byte	0x1
 2877 068a EE02     		.2byte	0x2ee
 2878 068c A2000000 		.4byte	0xa2
 2879 0690 00000000 		.4byte	.LFB12
 2880 0694 50000000 		.4byte	.LFE12-.LFB12
 2881 0698 01       		.uleb128 0x1
 2882 0699 9C       		.byte	0x9c
 2883 069a BF060000 		.4byte	0x6bf
 2884 069e 0B       		.uleb128 0xb
 2885 069f 9A050000 		.4byte	.LASF61
 2886 06a3 01       		.byte	0x1
 2887 06a4 F002     		.2byte	0x2f0
 2888 06a6 7E000000 		.4byte	0x7e
 2889 06aa 3D040000 		.4byte	.LLST27
 2890 06ae 0B       		.uleb128 0xb
 2891 06af FC020000 		.4byte	.LASF49
 2892 06b3 01       		.byte	0x1
 2893 06b4 F102     		.2byte	0x2f1
 2894 06b6 72000000 		.4byte	0x72
 2895 06ba 66040000 		.4byte	.LLST28
 2896 06be 00       		.byte	0
 2897 06bf 15       		.uleb128 0x15
 2898 06c0 65010000 		.4byte	.LASF63
 2899 06c4 01       		.byte	0x1
 2900 06c5 2A03     		.2byte	0x32a
 2901 06c7 AE000000 		.4byte	0xae
 2902 06cb 00000000 		.4byte	.LFB13
 2903 06cf 6C000000 		.4byte	.LFE13-.LFB13
 2904 06d3 01       		.uleb128 0x1
 2905 06d4 9C       		.byte	0x9c
 2906 06d5 FA060000 		.4byte	0x6fa
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 89


 2907 06d9 0B       		.uleb128 0xb
 2908 06da 9A050000 		.4byte	.LASF61
 2909 06de 01       		.byte	0x1
 2910 06df 2C03     		.2byte	0x32c
 2911 06e1 8A000000 		.4byte	0x8a
 2912 06e5 84040000 		.4byte	.LLST29
 2913 06e9 0B       		.uleb128 0xb
 2914 06ea FC020000 		.4byte	.LASF49
 2915 06ee 01       		.byte	0x1
 2916 06ef 2D03     		.2byte	0x32d
 2917 06f1 72000000 		.4byte	0x72
 2918 06f5 E5040000 		.4byte	.LLST30
 2919 06f9 00       		.byte	0
 2920 06fa 13       		.uleb128 0x13
 2921 06fb 73050000 		.4byte	.LASF64
 2922 06ff 01       		.byte	0x1
 2923 0700 8703     		.2byte	0x387
 2924 0702 00000000 		.4byte	.LFB14
 2925 0706 0C000000 		.4byte	.LFE14-.LFB14
 2926 070a 01       		.uleb128 0x1
 2927 070b 9C       		.byte	0x9c
 2928 070c 1F070000 		.4byte	0x71f
 2929 0710 18       		.uleb128 0x18
 2930 0711 02050000 		.4byte	.LASF65
 2931 0715 01       		.byte	0x1
 2932 0716 8703     		.2byte	0x387
 2933 0718 AE000000 		.4byte	0xae
 2934 071c 01       		.uleb128 0x1
 2935 071d 50       		.byte	0x50
 2936 071e 00       		.byte	0
 2937 071f 13       		.uleb128 0x13
 2938 0720 46030000 		.4byte	.LASF66
 2939 0724 01       		.byte	0x1
 2940 0725 AA03     		.2byte	0x3aa
 2941 0727 00000000 		.4byte	.LFB15
 2942 072b 0C000000 		.4byte	.LFE15-.LFB15
 2943 072f 01       		.uleb128 0x1
 2944 0730 9C       		.byte	0x9c
 2945 0731 44070000 		.4byte	0x744
 2946 0735 18       		.uleb128 0x18
 2947 0736 07000000 		.4byte	.LASF67
 2948 073a 01       		.byte	0x1
 2949 073b AA03     		.2byte	0x3aa
 2950 073d AE000000 		.4byte	0xae
 2951 0741 01       		.uleb128 0x1
 2952 0742 50       		.byte	0x50
 2953 0743 00       		.byte	0
 2954 0744 15       		.uleb128 0x15
 2955 0745 58030000 		.4byte	.LASF68
 2956 0749 01       		.byte	0x1
 2957 074a C503     		.2byte	0x3c5
 2958 074c A2000000 		.4byte	0xa2
 2959 0750 00000000 		.4byte	.LFB16
 2960 0754 24000000 		.4byte	.LFE16-.LFB16
 2961 0758 01       		.uleb128 0x1
 2962 0759 9C       		.byte	0x9c
 2963 075a 7D070000 		.4byte	0x77d
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 90


 2964 075e 0A       		.uleb128 0xa
 2965 075f 24050000 		.4byte	.LASF69
 2966 0763 01       		.byte	0x1
 2967 0764 C503     		.2byte	0x3c5
 2968 0766 AE000000 		.4byte	0xae
 2969 076a 0E050000 		.4byte	.LLST31
 2970 076e 17       		.uleb128 0x17
 2971 076f F0030000 		.4byte	.LASF70
 2972 0773 01       		.byte	0x1
 2973 0774 C803     		.2byte	0x3c8
 2974 0776 A2000000 		.4byte	0xa2
 2975 077a 01       		.uleb128 0x1
 2976 077b 50       		.byte	0x50
 2977 077c 00       		.byte	0
 2978 077d 14       		.uleb128 0x14
 2979 077e 30000000 		.4byte	.LASF71
 2980 0782 01       		.byte	0x1
 2981 0783 0204     		.2byte	0x402
 2982 0785 BA000000 		.4byte	0xba
 2983 0789 00000000 		.4byte	.LFB17
 2984 078d 28000000 		.4byte	.LFE17-.LFB17
 2985 0791 01       		.uleb128 0x1
 2986 0792 9C       		.byte	0x9c
 2987 0793 B6070000 		.4byte	0x7b6
 2988 0797 0A       		.uleb128 0xa
 2989 0798 24050000 		.4byte	.LASF69
 2990 079c 01       		.byte	0x1
 2991 079d 0204     		.2byte	0x402
 2992 079f AE000000 		.4byte	0xae
 2993 07a3 2C050000 		.4byte	.LLST32
 2994 07a7 17       		.uleb128 0x17
 2995 07a8 75010000 		.4byte	.LASF72
 2996 07ac 01       		.byte	0x1
 2997 07ad 0504     		.2byte	0x405
 2998 07af BA000000 		.4byte	0xba
 2999 07b3 01       		.uleb128 0x1
 3000 07b4 50       		.byte	0x50
 3001 07b5 00       		.byte	0
 3002 07b6 15       		.uleb128 0x15
 3003 07b7 34010000 		.4byte	.LASF73
 3004 07bb 01       		.byte	0x1
 3005 07bc 4404     		.2byte	0x444
 3006 07be AE000000 		.4byte	0xae
 3007 07c2 00000000 		.4byte	.LFB18
 3008 07c6 78000000 		.4byte	.LFE18-.LFB18
 3009 07ca 01       		.uleb128 0x1
 3010 07cb 9C       		.byte	0x9c
 3011 07cc 21080000 		.4byte	0x821
 3012 07d0 0A       		.uleb128 0xa
 3013 07d1 24050000 		.4byte	.LASF69
 3014 07d5 01       		.byte	0x1
 3015 07d6 4404     		.2byte	0x444
 3016 07d8 AE000000 		.4byte	0xae
 3017 07dc 5A050000 		.4byte	.LLST33
 3018 07e0 0B       		.uleb128 0xb
 3019 07e1 E9010000 		.4byte	.LASF74
 3020 07e5 01       		.byte	0x1
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 91


 3021 07e6 4704     		.2byte	0x447
 3022 07e8 AE000000 		.4byte	0xae
 3023 07ec 7B050000 		.4byte	.LLST34
 3024 07f0 0B       		.uleb128 0xb
 3025 07f1 AB040000 		.4byte	.LASF75
 3026 07f5 01       		.byte	0x1
 3027 07f6 4804     		.2byte	0x448
 3028 07f8 AE000000 		.4byte	0xae
 3029 07fc 9E050000 		.4byte	.LLST35
 3030 0800 0B       		.uleb128 0xb
 3031 0801 B1040000 		.4byte	.LASF76
 3032 0805 01       		.byte	0x1
 3033 0806 4904     		.2byte	0x449
 3034 0808 AE000000 		.4byte	0xae
 3035 080c C1050000 		.4byte	.LLST36
 3036 0810 0B       		.uleb128 0xb
 3037 0811 95040000 		.4byte	.LASF30
 3038 0815 01       		.byte	0x1
 3039 0816 4A04     		.2byte	0x44a
 3040 0818 72000000 		.4byte	0x72
 3041 081c E0050000 		.4byte	.LLST37
 3042 0820 00       		.byte	0
 3043 0821 13       		.uleb128 0x13
 3044 0822 9E030000 		.4byte	.LASF77
 3045 0826 01       		.byte	0x1
 3046 0827 1806     		.2byte	0x618
 3047 0829 00000000 		.4byte	.LFB20
 3048 082d 64000000 		.4byte	.LFE20-.LFB20
 3049 0831 01       		.uleb128 0x1
 3050 0832 9C       		.byte	0x9c
 3051 0833 96080000 		.4byte	0x896
 3052 0837 0A       		.uleb128 0xa
 3053 0838 E5040000 		.4byte	.LASF31
 3054 083c 01       		.byte	0x1
 3055 083d 1806     		.2byte	0x618
 3056 083f 72000000 		.4byte	0x72
 3057 0843 F3050000 		.4byte	.LLST38
 3058 0847 0A       		.uleb128 0xa
 3059 0848 F1040000 		.4byte	.LASF78
 3060 084c 01       		.byte	0x1
 3061 084d 1806     		.2byte	0x618
 3062 084f 72000000 		.4byte	0x72
 3063 0853 2D060000 		.4byte	.LLST39
 3064 0857 0E       		.uleb128 0xe
 3065 0858 22000000 		.4byte	.LVL156
 3066 085c 95040000 		.4byte	0x495
 3067 0860 0F       		.uleb128 0xf
 3068 0861 28000000 		.4byte	.LVL157
 3069 0865 5A020000 		.4byte	0x25a
 3070 0869 74080000 		.4byte	0x874
 3071 086d 0D       		.uleb128 0xd
 3072 086e 01       		.uleb128 0x1
 3073 086f 50       		.byte	0x50
 3074 0870 02       		.uleb128 0x2
 3075 0871 74       		.byte	0x74
 3076 0872 00       		.sleb128 0
 3077 0873 00       		.byte	0
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 92


 3078 0874 0E       		.uleb128 0xe
 3079 0875 46000000 		.4byte	.LVL158
 3080 0879 6C040000 		.4byte	0x46c
 3081 087d 0E       		.uleb128 0xe
 3082 087e 4A000000 		.4byte	.LVL159
 3083 0882 EC050000 		.4byte	0x5ec
 3084 0886 0C       		.uleb128 0xc
 3085 0887 52000000 		.4byte	.LVL162
 3086 088b 3E0A0000 		.4byte	0xa3e
 3087 088f 0D       		.uleb128 0xd
 3088 0890 01       		.uleb128 0x1
 3089 0891 50       		.byte	0x50
 3090 0892 01       		.uleb128 0x1
 3091 0893 30       		.byte	0x30
 3092 0894 00       		.byte	0
 3093 0895 00       		.byte	0
 3094 0896 15       		.uleb128 0x15
 3095 0897 1A050000 		.4byte	.LASF79
 3096 089b 01       		.byte	0x1
 3097 089c EA06     		.2byte	0x6ea
 3098 089e 96000000 		.4byte	0x96
 3099 08a2 00000000 		.4byte	.LFB23
 3100 08a6 28000000 		.4byte	.LFE23-.LFB23
 3101 08aa 01       		.uleb128 0x1
 3102 08ab 9C       		.byte	0x9c
 3103 08ac EF080000 		.4byte	0x8ef
 3104 08b0 0B       		.uleb128 0xb
 3105 08b1 9A050000 		.4byte	.LASF61
 3106 08b5 01       		.byte	0x1
 3107 08b6 EC06     		.2byte	0x6ec
 3108 08b8 96000000 		.4byte	0x96
 3109 08bc 67060000 		.4byte	.LLST40
 3110 08c0 0E       		.uleb128 0xe
 3111 08c1 10000000 		.4byte	.LVL163
 3112 08c5 EC050000 		.4byte	0x5ec
 3113 08c9 0F       		.uleb128 0xf
 3114 08ca 16000000 		.4byte	.LVL164
 3115 08ce 10060000 		.4byte	0x610
 3116 08d2 DC080000 		.4byte	0x8dc
 3117 08d6 0D       		.uleb128 0xd
 3118 08d7 01       		.uleb128 0x1
 3119 08d8 50       		.byte	0x50
 3120 08d9 01       		.uleb128 0x1
 3121 08da 30       		.byte	0x30
 3122 08db 00       		.byte	0
 3123 08dc 0E       		.uleb128 0xe
 3124 08dd 1A000000 		.4byte	.LVL165
 3125 08e1 4B060000 		.4byte	0x64b
 3126 08e5 0E       		.uleb128 0xe
 3127 08e6 20000000 		.4byte	.LVL167
 3128 08ea FE050000 		.4byte	0x5fe
 3129 08ee 00       		.byte	0
 3130 08ef 15       		.uleb128 0x15
 3131 08f0 62000000 		.4byte	.LASF80
 3132 08f4 01       		.byte	0x1
 3133 08f5 0B07     		.2byte	0x70b
 3134 08f7 A2000000 		.4byte	0xa2
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 93


 3135 08fb 00000000 		.4byte	.LFB24
 3136 08ff 28000000 		.4byte	.LFE24-.LFB24
 3137 0903 01       		.uleb128 0x1
 3138 0904 9C       		.byte	0x9c
 3139 0905 48090000 		.4byte	0x948
 3140 0909 0B       		.uleb128 0xb
 3141 090a 9A050000 		.4byte	.LASF61
 3142 090e 01       		.byte	0x1
 3143 090f 0D07     		.2byte	0x70d
 3144 0911 A2000000 		.4byte	0xa2
 3145 0915 7A060000 		.4byte	.LLST41
 3146 0919 0E       		.uleb128 0xe
 3147 091a 10000000 		.4byte	.LVL169
 3148 091e EC050000 		.4byte	0x5ec
 3149 0922 0F       		.uleb128 0xf
 3150 0923 16000000 		.4byte	.LVL170
 3151 0927 10060000 		.4byte	0x610
 3152 092b 35090000 		.4byte	0x935
 3153 092f 0D       		.uleb128 0xd
 3154 0930 01       		.uleb128 0x1
 3155 0931 50       		.byte	0x50
 3156 0932 01       		.uleb128 0x1
 3157 0933 30       		.byte	0x30
 3158 0934 00       		.byte	0
 3159 0935 0E       		.uleb128 0xe
 3160 0936 1A000000 		.4byte	.LVL171
 3161 093a 84060000 		.4byte	0x684
 3162 093e 0E       		.uleb128 0xe
 3163 093f 20000000 		.4byte	.LVL173
 3164 0943 FE050000 		.4byte	0x5fe
 3165 0947 00       		.byte	0
 3166 0948 15       		.uleb128 0x15
 3167 0949 2E050000 		.4byte	.LASF81
 3168 094d 01       		.byte	0x1
 3169 094e 2C07     		.2byte	0x72c
 3170 0950 AE000000 		.4byte	0xae
 3171 0954 00000000 		.4byte	.LFB25
 3172 0958 28000000 		.4byte	.LFE25-.LFB25
 3173 095c 01       		.uleb128 0x1
 3174 095d 9C       		.byte	0x9c
 3175 095e A1090000 		.4byte	0x9a1
 3176 0962 0B       		.uleb128 0xb
 3177 0963 9A050000 		.4byte	.LASF61
 3178 0967 01       		.byte	0x1
 3179 0968 2E07     		.2byte	0x72e
 3180 096a AE000000 		.4byte	0xae
 3181 096e 8D060000 		.4byte	.LLST42
 3182 0972 0E       		.uleb128 0xe
 3183 0973 10000000 		.4byte	.LVL175
 3184 0977 EC050000 		.4byte	0x5ec
 3185 097b 0F       		.uleb128 0xf
 3186 097c 16000000 		.4byte	.LVL176
 3187 0980 10060000 		.4byte	0x610
 3188 0984 8E090000 		.4byte	0x98e
 3189 0988 0D       		.uleb128 0xd
 3190 0989 01       		.uleb128 0x1
 3191 098a 50       		.byte	0x50
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 94


 3192 098b 01       		.uleb128 0x1
 3193 098c 30       		.byte	0x30
 3194 098d 00       		.byte	0
 3195 098e 0E       		.uleb128 0xe
 3196 098f 1A000000 		.4byte	.LVL177
 3197 0993 BF060000 		.4byte	0x6bf
 3198 0997 0E       		.uleb128 0xe
 3199 0998 20000000 		.4byte	.LVL179
 3200 099c FE050000 		.4byte	0x5fe
 3201 09a0 00       		.byte	0
 3202 09a1 19       		.uleb128 0x19
 3203 09a2 36010000 		.4byte	0x136
 3204 09a6 B1090000 		.4byte	0x9b1
 3205 09aa 1A       		.uleb128 0x1a
 3206 09ab 0E010000 		.4byte	0x10e
 3207 09af 01       		.byte	0x1
 3208 09b0 00       		.byte	0
 3209 09b1 1B       		.uleb128 0x1b
 3210 09b2 B9020000 		.4byte	.LASF82
 3211 09b6 01       		.byte	0x1
 3212 09b7 3D       		.byte	0x3d
 3213 09b8 A1090000 		.4byte	0x9a1
 3214 09bc 05       		.uleb128 0x5
 3215 09bd 03       		.byte	0x3
 3216 09be 00000000 		.4byte	ADC_gcor
 3217 09c2 1C       		.uleb128 0x1c
 3218 09c3 91010000 		.4byte	.LASF83
 3219 09c7 01       		.byte	0x1
 3220 09c8 2C       		.byte	0x2c
 3221 09c9 72000000 		.4byte	0x72
 3222 09cd 05       		.uleb128 0x5
 3223 09ce 03       		.byte	0x3
 3224 09cf 00000000 		.4byte	ADC_initVar
 3225 09d3 1C       		.uleb128 0x1c
 3226 09d4 1E010000 		.4byte	.LASF84
 3227 09d8 01       		.byte	0x1
 3228 09d9 24       		.byte	0x24
 3229 09da E0000000 		.4byte	0xe0
 3230 09de 05       		.uleb128 0x5
 3231 09df 03       		.byte	0x3
 3232 09e0 00000000 		.4byte	ADC_convDone
 3233 09e4 1C       		.uleb128 0x1c
 3234 09e5 43000000 		.4byte	.LASF85
 3235 09e9 01       		.byte	0x1
 3236 09ea 29       		.byte	0x29
 3237 09eb E0000000 		.4byte	0xe0
 3238 09ef 05       		.uleb128 0x5
 3239 09f0 03       		.byte	0x3
 3240 09f1 00000000 		.4byte	ADC_stopConversion
 3241 09f5 1C       		.uleb128 0x1c
 3242 09f6 56000000 		.4byte	.LASF86
 3243 09fa 01       		.byte	0x1
 3244 09fb 2F       		.byte	0x2f
 3245 09fc E0000000 		.4byte	0xe0
 3246 0a00 05       		.uleb128 0x5
 3247 0a01 03       		.byte	0x3
 3248 0a02 00000000 		.4byte	ADC_started
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 95


 3249 0a06 1C       		.uleb128 0x1c
 3250 0a07 AF000000 		.4byte	.LASF87
 3251 0a0b 01       		.byte	0x1
 3252 0a0c 32       		.byte	0x32
 3253 0a0d E0000000 		.4byte	0xe0
 3254 0a11 05       		.uleb128 0x5
 3255 0a12 03       		.byte	0x3
 3256 0a13 00000000 		.4byte	ADC_Config
 3257 0a17 1C       		.uleb128 0x1c
 3258 0a18 A0040000 		.4byte	.LASF88
 3259 0a1c 01       		.byte	0x1
 3260 0a1d 34       		.byte	0x34
 3261 0a1e 280A0000 		.4byte	0xa28
 3262 0a22 05       		.uleb128 0x5
 3263 0a23 03       		.byte	0x3
 3264 0a24 00000000 		.4byte	ADC_Offset
 3265 0a28 05       		.uleb128 0x5
 3266 0a29 AE000000 		.4byte	0xae
 3267 0a2d 1C       		.uleb128 0x1c
 3268 0a2e 81050000 		.4byte	.LASF89
 3269 0a32 01       		.byte	0x1
 3270 0a33 35       		.byte	0x35
 3271 0a34 280A0000 		.4byte	0xa28
 3272 0a38 05       		.uleb128 0x5
 3273 0a39 03       		.byte	0x3
 3274 0a3a 00000000 		.4byte	ADC_CountsPerVolt
 3275 0a3e 1D       		.uleb128 0x1d
 3276 0a3f 89030000 		.4byte	.LASF90
 3277 0a43 89030000 		.4byte	.LASF90
 3278 0a47 04       		.byte	0x4
 3279 0a48 7F       		.byte	0x7f
 3280 0a49 1D       		.uleb128 0x1d
 3281 0a4a 02020000 		.4byte	.LASF91
 3282 0a4e 02020000 		.4byte	.LASF91
 3283 0a52 04       		.byte	0x4
 3284 0a53 7D       		.byte	0x7d
 3285 0a54 1D       		.uleb128 0x1d
 3286 0a55 54010000 		.4byte	.LASF92
 3287 0a59 54010000 		.4byte	.LASF92
 3288 0a5d 04       		.byte	0x4
 3289 0a5e 77       		.byte	0x77
 3290 0a5f 1D       		.uleb128 0x1d
 3291 0a60 0F000000 		.4byte	.LASF93
 3292 0a64 0F000000 		.4byte	.LASF93
 3293 0a68 04       		.byte	0x4
 3294 0a69 7E       		.byte	0x7e
 3295 0a6a 1D       		.uleb128 0x1d
 3296 0a6b 85040000 		.4byte	.LASF94
 3297 0a6f 85040000 		.4byte	.LASF94
 3298 0a73 05       		.byte	0x5
 3299 0a74 57       		.byte	0x57
 3300 0a75 1D       		.uleb128 0x1d
 3301 0a76 B7040000 		.4byte	.LASF95
 3302 0a7a B7040000 		.4byte	.LASF95
 3303 0a7e 06       		.byte	0x6
 3304 0a7f 2F       		.byte	0x2f
 3305 0a80 1D       		.uleb128 0x1d
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 96


 3306 0a81 BD010000 		.4byte	.LASF96
 3307 0a85 BD010000 		.4byte	.LASF96
 3308 0a89 07       		.byte	0x7
 3309 0a8a 2F       		.byte	0x2f
 3310 0a8b 1D       		.uleb128 0x1d
 3311 0a8c 82010000 		.4byte	.LASF97
 3312 0a90 82010000 		.4byte	.LASF97
 3313 0a94 04       		.byte	0x4
 3314 0a95 88       		.byte	0x88
 3315 0a96 1D       		.uleb128 0x1d
 3316 0a97 D1030000 		.4byte	.LASF98
 3317 0a9b D1030000 		.4byte	.LASF98
 3318 0a9f 06       		.byte	0x6
 3319 0aa0 32       		.byte	0x32
 3320 0aa1 1D       		.uleb128 0x1d
 3321 0aa2 E0020000 		.4byte	.LASF99
 3322 0aa6 E0020000 		.4byte	.LASF99
 3323 0aaa 07       		.byte	0x7
 3324 0aab 32       		.byte	0x32
 3325 0aac 1D       		.uleb128 0x1d
 3326 0aad 06030000 		.4byte	.LASF100
 3327 0ab1 06030000 		.4byte	.LASF100
 3328 0ab5 04       		.byte	0x4
 3329 0ab6 8B       		.byte	0x8b
 3330 0ab7 00       		.byte	0
 3331              		.section	.debug_abbrev,"",%progbits
 3332              	.Ldebug_abbrev0:
 3333 0000 01       		.uleb128 0x1
 3334 0001 11       		.uleb128 0x11
 3335 0002 01       		.byte	0x1
 3336 0003 25       		.uleb128 0x25
 3337 0004 0E       		.uleb128 0xe
 3338 0005 13       		.uleb128 0x13
 3339 0006 0B       		.uleb128 0xb
 3340 0007 03       		.uleb128 0x3
 3341 0008 0E       		.uleb128 0xe
 3342 0009 1B       		.uleb128 0x1b
 3343 000a 0E       		.uleb128 0xe
 3344 000b 55       		.uleb128 0x55
 3345 000c 17       		.uleb128 0x17
 3346 000d 11       		.uleb128 0x11
 3347 000e 01       		.uleb128 0x1
 3348 000f 10       		.uleb128 0x10
 3349 0010 17       		.uleb128 0x17
 3350 0011 00       		.byte	0
 3351 0012 00       		.byte	0
 3352 0013 02       		.uleb128 0x2
 3353 0014 24       		.uleb128 0x24
 3354 0015 00       		.byte	0
 3355 0016 0B       		.uleb128 0xb
 3356 0017 0B       		.uleb128 0xb
 3357 0018 3E       		.uleb128 0x3e
 3358 0019 0B       		.uleb128 0xb
 3359 001a 03       		.uleb128 0x3
 3360 001b 0E       		.uleb128 0xe
 3361 001c 00       		.byte	0
 3362 001d 00       		.byte	0
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 97


 3363 001e 03       		.uleb128 0x3
 3364 001f 24       		.uleb128 0x24
 3365 0020 00       		.byte	0
 3366 0021 0B       		.uleb128 0xb
 3367 0022 0B       		.uleb128 0xb
 3368 0023 3E       		.uleb128 0x3e
 3369 0024 0B       		.uleb128 0xb
 3370 0025 03       		.uleb128 0x3
 3371 0026 08       		.uleb128 0x8
 3372 0027 00       		.byte	0
 3373 0028 00       		.byte	0
 3374 0029 04       		.uleb128 0x4
 3375 002a 16       		.uleb128 0x16
 3376 002b 00       		.byte	0
 3377 002c 03       		.uleb128 0x3
 3378 002d 0E       		.uleb128 0xe
 3379 002e 3A       		.uleb128 0x3a
 3380 002f 0B       		.uleb128 0xb
 3381 0030 3B       		.uleb128 0x3b
 3382 0031 05       		.uleb128 0x5
 3383 0032 49       		.uleb128 0x49
 3384 0033 13       		.uleb128 0x13
 3385 0034 00       		.byte	0
 3386 0035 00       		.byte	0
 3387 0036 05       		.uleb128 0x5
 3388 0037 35       		.uleb128 0x35
 3389 0038 00       		.byte	0
 3390 0039 49       		.uleb128 0x49
 3391 003a 13       		.uleb128 0x13
 3392 003b 00       		.byte	0
 3393 003c 00       		.byte	0
 3394 003d 06       		.uleb128 0x6
 3395 003e 13       		.uleb128 0x13
 3396 003f 01       		.byte	0x1
 3397 0040 0B       		.uleb128 0xb
 3398 0041 0B       		.uleb128 0xb
 3399 0042 3A       		.uleb128 0x3a
 3400 0043 0B       		.uleb128 0xb
 3401 0044 3B       		.uleb128 0x3b
 3402 0045 0B       		.uleb128 0xb
 3403 0046 01       		.uleb128 0x1
 3404 0047 13       		.uleb128 0x13
 3405 0048 00       		.byte	0
 3406 0049 00       		.byte	0
 3407 004a 07       		.uleb128 0x7
 3408 004b 0D       		.uleb128 0xd
 3409 004c 00       		.byte	0
 3410 004d 03       		.uleb128 0x3
 3411 004e 0E       		.uleb128 0xe
 3412 004f 3A       		.uleb128 0x3a
 3413 0050 0B       		.uleb128 0xb
 3414 0051 3B       		.uleb128 0x3b
 3415 0052 0B       		.uleb128 0xb
 3416 0053 49       		.uleb128 0x49
 3417 0054 13       		.uleb128 0x13
 3418 0055 38       		.uleb128 0x38
 3419 0056 0B       		.uleb128 0xb
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 98


 3420 0057 00       		.byte	0
 3421 0058 00       		.byte	0
 3422 0059 08       		.uleb128 0x8
 3423 005a 16       		.uleb128 0x16
 3424 005b 00       		.byte	0
 3425 005c 03       		.uleb128 0x3
 3426 005d 0E       		.uleb128 0xe
 3427 005e 3A       		.uleb128 0x3a
 3428 005f 0B       		.uleb128 0xb
 3429 0060 3B       		.uleb128 0x3b
 3430 0061 0B       		.uleb128 0xb
 3431 0062 49       		.uleb128 0x49
 3432 0063 13       		.uleb128 0x13
 3433 0064 00       		.byte	0
 3434 0065 00       		.byte	0
 3435 0066 09       		.uleb128 0x9
 3436 0067 2E       		.uleb128 0x2e
 3437 0068 01       		.byte	0x1
 3438 0069 03       		.uleb128 0x3
 3439 006a 0E       		.uleb128 0xe
 3440 006b 3A       		.uleb128 0x3a
 3441 006c 0B       		.uleb128 0xb
 3442 006d 3B       		.uleb128 0x3b
 3443 006e 05       		.uleb128 0x5
 3444 006f 27       		.uleb128 0x27
 3445 0070 19       		.uleb128 0x19
 3446 0071 11       		.uleb128 0x11
 3447 0072 01       		.uleb128 0x1
 3448 0073 12       		.uleb128 0x12
 3449 0074 06       		.uleb128 0x6
 3450 0075 40       		.uleb128 0x40
 3451 0076 18       		.uleb128 0x18
 3452 0077 9742     		.uleb128 0x2117
 3453 0079 19       		.uleb128 0x19
 3454 007a 01       		.uleb128 0x1
 3455 007b 13       		.uleb128 0x13
 3456 007c 00       		.byte	0
 3457 007d 00       		.byte	0
 3458 007e 0A       		.uleb128 0xa
 3459 007f 05       		.uleb128 0x5
 3460 0080 00       		.byte	0
 3461 0081 03       		.uleb128 0x3
 3462 0082 0E       		.uleb128 0xe
 3463 0083 3A       		.uleb128 0x3a
 3464 0084 0B       		.uleb128 0xb
 3465 0085 3B       		.uleb128 0x3b
 3466 0086 05       		.uleb128 0x5
 3467 0087 49       		.uleb128 0x49
 3468 0088 13       		.uleb128 0x13
 3469 0089 02       		.uleb128 0x2
 3470 008a 17       		.uleb128 0x17
 3471 008b 00       		.byte	0
 3472 008c 00       		.byte	0
 3473 008d 0B       		.uleb128 0xb
 3474 008e 34       		.uleb128 0x34
 3475 008f 00       		.byte	0
 3476 0090 03       		.uleb128 0x3
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 99


 3477 0091 0E       		.uleb128 0xe
 3478 0092 3A       		.uleb128 0x3a
 3479 0093 0B       		.uleb128 0xb
 3480 0094 3B       		.uleb128 0x3b
 3481 0095 05       		.uleb128 0x5
 3482 0096 49       		.uleb128 0x49
 3483 0097 13       		.uleb128 0x13
 3484 0098 02       		.uleb128 0x2
 3485 0099 17       		.uleb128 0x17
 3486 009a 00       		.byte	0
 3487 009b 00       		.byte	0
 3488 009c 0C       		.uleb128 0xc
 3489 009d 898201   		.uleb128 0x4109
 3490 00a0 01       		.byte	0x1
 3491 00a1 11       		.uleb128 0x11
 3492 00a2 01       		.uleb128 0x1
 3493 00a3 31       		.uleb128 0x31
 3494 00a4 13       		.uleb128 0x13
 3495 00a5 00       		.byte	0
 3496 00a6 00       		.byte	0
 3497 00a7 0D       		.uleb128 0xd
 3498 00a8 8A8201   		.uleb128 0x410a
 3499 00ab 00       		.byte	0
 3500 00ac 02       		.uleb128 0x2
 3501 00ad 18       		.uleb128 0x18
 3502 00ae 9142     		.uleb128 0x2111
 3503 00b0 18       		.uleb128 0x18
 3504 00b1 00       		.byte	0
 3505 00b2 00       		.byte	0
 3506 00b3 0E       		.uleb128 0xe
 3507 00b4 898201   		.uleb128 0x4109
 3508 00b7 00       		.byte	0
 3509 00b8 11       		.uleb128 0x11
 3510 00b9 01       		.uleb128 0x1
 3511 00ba 31       		.uleb128 0x31
 3512 00bb 13       		.uleb128 0x13
 3513 00bc 00       		.byte	0
 3514 00bd 00       		.byte	0
 3515 00be 0F       		.uleb128 0xf
 3516 00bf 898201   		.uleb128 0x4109
 3517 00c2 01       		.byte	0x1
 3518 00c3 11       		.uleb128 0x11
 3519 00c4 01       		.uleb128 0x1
 3520 00c5 31       		.uleb128 0x31
 3521 00c6 13       		.uleb128 0x13
 3522 00c7 01       		.uleb128 0x1
 3523 00c8 13       		.uleb128 0x13
 3524 00c9 00       		.byte	0
 3525 00ca 00       		.byte	0
 3526 00cb 10       		.uleb128 0x10
 3527 00cc 2E       		.uleb128 0x2e
 3528 00cd 01       		.byte	0x1
 3529 00ce 3F       		.uleb128 0x3f
 3530 00cf 19       		.uleb128 0x19
 3531 00d0 03       		.uleb128 0x3
 3532 00d1 0E       		.uleb128 0xe
 3533 00d2 3A       		.uleb128 0x3a
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 100


 3534 00d3 0B       		.uleb128 0xb
 3535 00d4 3B       		.uleb128 0x3b
 3536 00d5 0B       		.uleb128 0xb
 3537 00d6 27       		.uleb128 0x27
 3538 00d7 19       		.uleb128 0x19
 3539 00d8 11       		.uleb128 0x11
 3540 00d9 01       		.uleb128 0x1
 3541 00da 12       		.uleb128 0x12
 3542 00db 06       		.uleb128 0x6
 3543 00dc 40       		.uleb128 0x40
 3544 00dd 18       		.uleb128 0x18
 3545 00de 9742     		.uleb128 0x2117
 3546 00e0 19       		.uleb128 0x19
 3547 00e1 01       		.uleb128 0x1
 3548 00e2 13       		.uleb128 0x13
 3549 00e3 00       		.byte	0
 3550 00e4 00       		.byte	0
 3551 00e5 11       		.uleb128 0x11
 3552 00e6 34       		.uleb128 0x34
 3553 00e7 00       		.byte	0
 3554 00e8 03       		.uleb128 0x3
 3555 00e9 0E       		.uleb128 0xe
 3556 00ea 3A       		.uleb128 0x3a
 3557 00eb 0B       		.uleb128 0xb
 3558 00ec 3B       		.uleb128 0x3b
 3559 00ed 0B       		.uleb128 0xb
 3560 00ee 49       		.uleb128 0x49
 3561 00ef 13       		.uleb128 0x13
 3562 00f0 00       		.byte	0
 3563 00f1 00       		.byte	0
 3564 00f2 12       		.uleb128 0x12
 3565 00f3 34       		.uleb128 0x34
 3566 00f4 00       		.byte	0
 3567 00f5 03       		.uleb128 0x3
 3568 00f6 0E       		.uleb128 0xe
 3569 00f7 3A       		.uleb128 0x3a
 3570 00f8 0B       		.uleb128 0xb
 3571 00f9 3B       		.uleb128 0x3b
 3572 00fa 0B       		.uleb128 0xb
 3573 00fb 49       		.uleb128 0x49
 3574 00fc 13       		.uleb128 0x13
 3575 00fd 02       		.uleb128 0x2
 3576 00fe 17       		.uleb128 0x17
 3577 00ff 00       		.byte	0
 3578 0100 00       		.byte	0
 3579 0101 13       		.uleb128 0x13
 3580 0102 2E       		.uleb128 0x2e
 3581 0103 01       		.byte	0x1
 3582 0104 3F       		.uleb128 0x3f
 3583 0105 19       		.uleb128 0x19
 3584 0106 03       		.uleb128 0x3
 3585 0107 0E       		.uleb128 0xe
 3586 0108 3A       		.uleb128 0x3a
 3587 0109 0B       		.uleb128 0xb
 3588 010a 3B       		.uleb128 0x3b
 3589 010b 05       		.uleb128 0x5
 3590 010c 27       		.uleb128 0x27
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 101


 3591 010d 19       		.uleb128 0x19
 3592 010e 11       		.uleb128 0x11
 3593 010f 01       		.uleb128 0x1
 3594 0110 12       		.uleb128 0x12
 3595 0111 06       		.uleb128 0x6
 3596 0112 40       		.uleb128 0x40
 3597 0113 18       		.uleb128 0x18
 3598 0114 9742     		.uleb128 0x2117
 3599 0116 19       		.uleb128 0x19
 3600 0117 01       		.uleb128 0x1
 3601 0118 13       		.uleb128 0x13
 3602 0119 00       		.byte	0
 3603 011a 00       		.byte	0
 3604 011b 14       		.uleb128 0x14
 3605 011c 2E       		.uleb128 0x2e
 3606 011d 01       		.byte	0x1
 3607 011e 3F       		.uleb128 0x3f
 3608 011f 19       		.uleb128 0x19
 3609 0120 03       		.uleb128 0x3
 3610 0121 0E       		.uleb128 0xe
 3611 0122 3A       		.uleb128 0x3a
 3612 0123 0B       		.uleb128 0xb
 3613 0124 3B       		.uleb128 0x3b
 3614 0125 05       		.uleb128 0x5
 3615 0126 27       		.uleb128 0x27
 3616 0127 19       		.uleb128 0x19
 3617 0128 49       		.uleb128 0x49
 3618 0129 13       		.uleb128 0x13
 3619 012a 11       		.uleb128 0x11
 3620 012b 01       		.uleb128 0x1
 3621 012c 12       		.uleb128 0x12
 3622 012d 06       		.uleb128 0x6
 3623 012e 40       		.uleb128 0x40
 3624 012f 18       		.uleb128 0x18
 3625 0130 9642     		.uleb128 0x2116
 3626 0132 19       		.uleb128 0x19
 3627 0133 01       		.uleb128 0x1
 3628 0134 13       		.uleb128 0x13
 3629 0135 00       		.byte	0
 3630 0136 00       		.byte	0
 3631 0137 15       		.uleb128 0x15
 3632 0138 2E       		.uleb128 0x2e
 3633 0139 01       		.byte	0x1
 3634 013a 3F       		.uleb128 0x3f
 3635 013b 19       		.uleb128 0x19
 3636 013c 03       		.uleb128 0x3
 3637 013d 0E       		.uleb128 0xe
 3638 013e 3A       		.uleb128 0x3a
 3639 013f 0B       		.uleb128 0xb
 3640 0140 3B       		.uleb128 0x3b
 3641 0141 05       		.uleb128 0x5
 3642 0142 27       		.uleb128 0x27
 3643 0143 19       		.uleb128 0x19
 3644 0144 49       		.uleb128 0x49
 3645 0145 13       		.uleb128 0x13
 3646 0146 11       		.uleb128 0x11
 3647 0147 01       		.uleb128 0x1
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 102


 3648 0148 12       		.uleb128 0x12
 3649 0149 06       		.uleb128 0x6
 3650 014a 40       		.uleb128 0x40
 3651 014b 18       		.uleb128 0x18
 3652 014c 9742     		.uleb128 0x2117
 3653 014e 19       		.uleb128 0x19
 3654 014f 01       		.uleb128 0x1
 3655 0150 13       		.uleb128 0x13
 3656 0151 00       		.byte	0
 3657 0152 00       		.byte	0
 3658 0153 16       		.uleb128 0x16
 3659 0154 2E       		.uleb128 0x2e
 3660 0155 00       		.byte	0
 3661 0156 3F       		.uleb128 0x3f
 3662 0157 19       		.uleb128 0x19
 3663 0158 03       		.uleb128 0x3
 3664 0159 0E       		.uleb128 0xe
 3665 015a 3A       		.uleb128 0x3a
 3666 015b 0B       		.uleb128 0xb
 3667 015c 3B       		.uleb128 0x3b
 3668 015d 05       		.uleb128 0x5
 3669 015e 27       		.uleb128 0x27
 3670 015f 19       		.uleb128 0x19
 3671 0160 11       		.uleb128 0x11
 3672 0161 01       		.uleb128 0x1
 3673 0162 12       		.uleb128 0x12
 3674 0163 06       		.uleb128 0x6
 3675 0164 40       		.uleb128 0x40
 3676 0165 18       		.uleb128 0x18
 3677 0166 9742     		.uleb128 0x2117
 3678 0168 19       		.uleb128 0x19
 3679 0169 00       		.byte	0
 3680 016a 00       		.byte	0
 3681 016b 17       		.uleb128 0x17
 3682 016c 34       		.uleb128 0x34
 3683 016d 00       		.byte	0
 3684 016e 03       		.uleb128 0x3
 3685 016f 0E       		.uleb128 0xe
 3686 0170 3A       		.uleb128 0x3a
 3687 0171 0B       		.uleb128 0xb
 3688 0172 3B       		.uleb128 0x3b
 3689 0173 05       		.uleb128 0x5
 3690 0174 49       		.uleb128 0x49
 3691 0175 13       		.uleb128 0x13
 3692 0176 02       		.uleb128 0x2
 3693 0177 18       		.uleb128 0x18
 3694 0178 00       		.byte	0
 3695 0179 00       		.byte	0
 3696 017a 18       		.uleb128 0x18
 3697 017b 05       		.uleb128 0x5
 3698 017c 00       		.byte	0
 3699 017d 03       		.uleb128 0x3
 3700 017e 0E       		.uleb128 0xe
 3701 017f 3A       		.uleb128 0x3a
 3702 0180 0B       		.uleb128 0xb
 3703 0181 3B       		.uleb128 0x3b
 3704 0182 05       		.uleb128 0x5
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 103


 3705 0183 49       		.uleb128 0x49
 3706 0184 13       		.uleb128 0x13
 3707 0185 02       		.uleb128 0x2
 3708 0186 18       		.uleb128 0x18
 3709 0187 00       		.byte	0
 3710 0188 00       		.byte	0
 3711 0189 19       		.uleb128 0x19
 3712 018a 01       		.uleb128 0x1
 3713 018b 01       		.byte	0x1
 3714 018c 49       		.uleb128 0x49
 3715 018d 13       		.uleb128 0x13
 3716 018e 01       		.uleb128 0x1
 3717 018f 13       		.uleb128 0x13
 3718 0190 00       		.byte	0
 3719 0191 00       		.byte	0
 3720 0192 1A       		.uleb128 0x1a
 3721 0193 21       		.uleb128 0x21
 3722 0194 00       		.byte	0
 3723 0195 49       		.uleb128 0x49
 3724 0196 13       		.uleb128 0x13
 3725 0197 2F       		.uleb128 0x2f
 3726 0198 0B       		.uleb128 0xb
 3727 0199 00       		.byte	0
 3728 019a 00       		.byte	0
 3729 019b 1B       		.uleb128 0x1b
 3730 019c 34       		.uleb128 0x34
 3731 019d 00       		.byte	0
 3732 019e 03       		.uleb128 0x3
 3733 019f 0E       		.uleb128 0xe
 3734 01a0 3A       		.uleb128 0x3a
 3735 01a1 0B       		.uleb128 0xb
 3736 01a2 3B       		.uleb128 0x3b
 3737 01a3 0B       		.uleb128 0xb
 3738 01a4 49       		.uleb128 0x49
 3739 01a5 13       		.uleb128 0x13
 3740 01a6 02       		.uleb128 0x2
 3741 01a7 18       		.uleb128 0x18
 3742 01a8 00       		.byte	0
 3743 01a9 00       		.byte	0
 3744 01aa 1C       		.uleb128 0x1c
 3745 01ab 34       		.uleb128 0x34
 3746 01ac 00       		.byte	0
 3747 01ad 03       		.uleb128 0x3
 3748 01ae 0E       		.uleb128 0xe
 3749 01af 3A       		.uleb128 0x3a
 3750 01b0 0B       		.uleb128 0xb
 3751 01b1 3B       		.uleb128 0x3b
 3752 01b2 0B       		.uleb128 0xb
 3753 01b3 49       		.uleb128 0x49
 3754 01b4 13       		.uleb128 0x13
 3755 01b5 3F       		.uleb128 0x3f
 3756 01b6 19       		.uleb128 0x19
 3757 01b7 02       		.uleb128 0x2
 3758 01b8 18       		.uleb128 0x18
 3759 01b9 00       		.byte	0
 3760 01ba 00       		.byte	0
 3761 01bb 1D       		.uleb128 0x1d
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 104


 3762 01bc 2E       		.uleb128 0x2e
 3763 01bd 00       		.byte	0
 3764 01be 3F       		.uleb128 0x3f
 3765 01bf 19       		.uleb128 0x19
 3766 01c0 3C       		.uleb128 0x3c
 3767 01c1 19       		.uleb128 0x19
 3768 01c2 6E       		.uleb128 0x6e
 3769 01c3 0E       		.uleb128 0xe
 3770 01c4 03       		.uleb128 0x3
 3771 01c5 0E       		.uleb128 0xe
 3772 01c6 3A       		.uleb128 0x3a
 3773 01c7 0B       		.uleb128 0xb
 3774 01c8 3B       		.uleb128 0x3b
 3775 01c9 0B       		.uleb128 0xb
 3776 01ca 00       		.byte	0
 3777 01cb 00       		.byte	0
 3778 01cc 00       		.byte	0
 3779              		.section	.debug_loc,"",%progbits
 3780              	.Ldebug_loc0:
 3781              	.LLST0:
 3782 0000 00000000 		.4byte	.LVL0
 3783 0004 10000000 		.4byte	.LVL1
 3784 0008 0100     		.2byte	0x1
 3785 000a 50       		.byte	0x50
 3786 000b 10000000 		.4byte	.LVL1
 3787 000f B2000000 		.4byte	.LVL31
 3788 0013 0400     		.2byte	0x4
 3789 0015 F3       		.byte	0xf3
 3790 0016 01       		.uleb128 0x1
 3791 0017 50       		.byte	0x50
 3792 0018 9F       		.byte	0x9f
 3793 0019 B2000000 		.4byte	.LVL31
 3794 001d B4000000 		.4byte	.LVL32
 3795 0021 0100     		.2byte	0x1
 3796 0023 50       		.byte	0x50
 3797 0024 B4000000 		.4byte	.LVL32
 3798 0028 E0000000 		.4byte	.LFE21
 3799 002c 0400     		.2byte	0x4
 3800 002e F3       		.byte	0xf3
 3801 002f 01       		.uleb128 0x1
 3802 0030 50       		.byte	0x50
 3803 0031 9F       		.byte	0x9f
 3804 0032 00000000 		.4byte	0
 3805 0036 00000000 		.4byte	0
 3806              	.LLST1:
 3807 003a 00000000 		.4byte	.LVL0
 3808 003e 78000000 		.4byte	.LVL19
 3809 0042 0100     		.2byte	0x1
 3810 0044 51       		.byte	0x51
 3811 0045 78000000 		.4byte	.LVL19
 3812 0049 B2000000 		.4byte	.LVL31
 3813 004d 0400     		.2byte	0x4
 3814 004f F3       		.byte	0xf3
 3815 0050 01       		.uleb128 0x1
 3816 0051 51       		.byte	0x51
 3817 0052 9F       		.byte	0x9f
 3818 0053 B2000000 		.4byte	.LVL31
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 105


 3819 0057 B7000000 		.4byte	.LVL33-1
 3820 005b 0100     		.2byte	0x1
 3821 005d 51       		.byte	0x51
 3822 005e B7000000 		.4byte	.LVL33-1
 3823 0062 E0000000 		.4byte	.LFE21
 3824 0066 0400     		.2byte	0x4
 3825 0068 F3       		.byte	0xf3
 3826 0069 01       		.uleb128 0x1
 3827 006a 51       		.byte	0x51
 3828 006b 9F       		.byte	0x9f
 3829 006c 00000000 		.4byte	0
 3830 0070 00000000 		.4byte	0
 3831              	.LLST2:
 3832 0074 00000000 		.4byte	.LVL0
 3833 0078 80000000 		.4byte	.LVL22
 3834 007c 0100     		.2byte	0x1
 3835 007e 52       		.byte	0x52
 3836 007f 80000000 		.4byte	.LVL22
 3837 0083 B2000000 		.4byte	.LVL31
 3838 0087 0400     		.2byte	0x4
 3839 0089 F3       		.byte	0xf3
 3840 008a 01       		.uleb128 0x1
 3841 008b 52       		.byte	0x52
 3842 008c 9F       		.byte	0x9f
 3843 008d B2000000 		.4byte	.LVL31
 3844 0091 B7000000 		.4byte	.LVL33-1
 3845 0095 0100     		.2byte	0x1
 3846 0097 52       		.byte	0x52
 3847 0098 B7000000 		.4byte	.LVL33-1
 3848 009c E0000000 		.4byte	.LFE21
 3849 00a0 0400     		.2byte	0x4
 3850 00a2 F3       		.byte	0xf3
 3851 00a3 01       		.uleb128 0x1
 3852 00a4 52       		.byte	0x52
 3853 00a5 9F       		.byte	0x9f
 3854 00a6 00000000 		.4byte	0
 3855 00aa 00000000 		.4byte	0
 3856              	.LLST3:
 3857 00ae 00000000 		.4byte	.LVL0
 3858 00b2 98000000 		.4byte	.LVL27
 3859 00b6 0100     		.2byte	0x1
 3860 00b8 53       		.byte	0x53
 3861 00b9 98000000 		.4byte	.LVL27
 3862 00bd 9C000000 		.4byte	.LVL28
 3863 00c1 0400     		.2byte	0x4
 3864 00c3 F3       		.byte	0xf3
 3865 00c4 01       		.uleb128 0x1
 3866 00c5 53       		.byte	0x53
 3867 00c6 9F       		.byte	0x9f
 3868 00c7 9C000000 		.4byte	.LVL28
 3869 00cb 9E000000 		.4byte	.LVL29
 3870 00cf 0100     		.2byte	0x1
 3871 00d1 53       		.byte	0x53
 3872 00d2 9E000000 		.4byte	.LVL29
 3873 00d6 B2000000 		.4byte	.LVL31
 3874 00da 0400     		.2byte	0x4
 3875 00dc F3       		.byte	0xf3
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 106


 3876 00dd 01       		.uleb128 0x1
 3877 00de 53       		.byte	0x53
 3878 00df 9F       		.byte	0x9f
 3879 00e0 B2000000 		.4byte	.LVL31
 3880 00e4 B7000000 		.4byte	.LVL33-1
 3881 00e8 0100     		.2byte	0x1
 3882 00ea 53       		.byte	0x53
 3883 00eb B7000000 		.4byte	.LVL33-1
 3884 00ef E0000000 		.4byte	.LFE21
 3885 00f3 0400     		.2byte	0x4
 3886 00f5 F3       		.byte	0xf3
 3887 00f6 01       		.uleb128 0x1
 3888 00f7 53       		.byte	0x53
 3889 00f8 9F       		.byte	0x9f
 3890 00f9 00000000 		.4byte	0
 3891 00fd 00000000 		.4byte	0
 3892              	.LLST4:
 3893 0101 00000000 		.4byte	.LVL0
 3894 0105 B2000000 		.4byte	.LVL31
 3895 0109 0200     		.2byte	0x2
 3896 010b 91       		.byte	0x91
 3897 010c 00       		.sleb128 0
 3898 010d B2000000 		.4byte	.LVL31
 3899 0111 BA000000 		.4byte	.LVL34
 3900 0115 0200     		.2byte	0x2
 3901 0117 91       		.byte	0x91
 3902 0118 00       		.sleb128 0
 3903 0119 BA000000 		.4byte	.LVL34
 3904 011d E0000000 		.4byte	.LFE21
 3905 0121 0200     		.2byte	0x2
 3906 0123 7D       		.byte	0x7d
 3907 0124 00       		.sleb128 0
 3908 0125 00000000 		.4byte	0
 3909 0129 00000000 		.4byte	0
 3910              	.LLST5:
 3911 012d 2C000000 		.4byte	.LVL2
 3912 0131 2E000000 		.4byte	.LVL3
 3913 0135 0100     		.2byte	0x1
 3914 0137 50       		.byte	0x50
 3915 0138 34000000 		.4byte	.LVL4
 3916 013c 36000000 		.4byte	.LVL5
 3917 0140 0100     		.2byte	0x1
 3918 0142 50       		.byte	0x50
 3919 0143 40000000 		.4byte	.LVL6
 3920 0147 42000000 		.4byte	.LVL7
 3921 014b 0100     		.2byte	0x1
 3922 014d 50       		.byte	0x50
 3923 014e 48000000 		.4byte	.LVL8
 3924 0152 4A000000 		.4byte	.LVL9
 3925 0156 0100     		.2byte	0x1
 3926 0158 50       		.byte	0x50
 3927 0159 54000000 		.4byte	.LVL10
 3928 015d 56000000 		.4byte	.LVL11
 3929 0161 0100     		.2byte	0x1
 3930 0163 50       		.byte	0x50
 3931 0164 5C000000 		.4byte	.LVL12
 3932 0168 5E000000 		.4byte	.LVL13
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 107


 3933 016c 0100     		.2byte	0x1
 3934 016e 50       		.byte	0x50
 3935 016f 68000000 		.4byte	.LVL14
 3936 0173 6A000000 		.4byte	.LVL15
 3937 0177 0100     		.2byte	0x1
 3938 0179 50       		.byte	0x50
 3939 017a 70000000 		.4byte	.LVL16
 3940 017e 72000000 		.4byte	.LVL17
 3941 0182 0100     		.2byte	0x1
 3942 0184 50       		.byte	0x50
 3943 0185 74000000 		.4byte	.LVL18
 3944 0189 92000000 		.4byte	.LVL26
 3945 018d 0100     		.2byte	0x1
 3946 018f 50       		.byte	0x50
 3947 0190 9C000000 		.4byte	.LVL28
 3948 0194 A8000000 		.4byte	.LVL30
 3949 0198 0100     		.2byte	0x1
 3950 019a 50       		.byte	0x50
 3951 019b 00000000 		.4byte	0
 3952 019f 00000000 		.4byte	0
 3953              	.LLST6:
 3954 01a3 78000000 		.4byte	.LVL19
 3955 01a7 7C000000 		.4byte	.LVL20
 3956 01ab 0100     		.2byte	0x1
 3957 01ad 51       		.byte	0x51
 3958 01ae 00000000 		.4byte	0
 3959 01b2 00000000 		.4byte	0
 3960              	.LLST7:
 3961 01b6 80000000 		.4byte	.LVL22
 3962 01ba 88000000 		.4byte	.LVL23
 3963 01be 0100     		.2byte	0x1
 3964 01c0 52       		.byte	0x52
 3965 01c1 88000000 		.4byte	.LVL23
 3966 01c5 8C000000 		.4byte	.LVL24
 3967 01c9 0100     		.2byte	0x1
 3968 01cb 51       		.byte	0x51
 3969 01cc 8E000000 		.4byte	.LVL25
 3970 01d0 B2000000 		.4byte	.LVL31
 3971 01d4 0100     		.2byte	0x1
 3972 01d6 52       		.byte	0x52
 3973 01d7 00000000 		.4byte	0
 3974 01db 00000000 		.4byte	0
 3975              	.LLST8:
 3976 01df 7C000000 		.4byte	.LVL20
 3977 01e3 7E000000 		.4byte	.LVL21
 3978 01e7 0100     		.2byte	0x1
 3979 01e9 51       		.byte	0x51
 3980 01ea 00000000 		.4byte	0
 3981 01ee 00000000 		.4byte	0
 3982              	.LLST9:
 3983 01f2 00000000 		.4byte	.LVL35
 3984 01f6 07000000 		.4byte	.LVL36-1
 3985 01fa 0100     		.2byte	0x1
 3986 01fc 50       		.byte	0x50
 3987 01fd 07000000 		.4byte	.LVL36-1
 3988 0201 4C000000 		.4byte	.LFE22
 3989 0205 0400     		.2byte	0x4
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 108


 3990 0207 F3       		.byte	0xf3
 3991 0208 01       		.uleb128 0x1
 3992 0209 50       		.byte	0x50
 3993 020a 9F       		.byte	0x9f
 3994 020b 00000000 		.4byte	0
 3995 020f 00000000 		.4byte	0
 3996              	.LLST10:
 3997 0213 0A000000 		.4byte	.LVL37
 3998 0217 40000000 		.4byte	.LVL40
 3999 021b 0100     		.2byte	0x1
 4000 021d 56       		.byte	0x56
 4001 021e 00000000 		.4byte	0
 4002 0222 00000000 		.4byte	0
 4003              	.LLST11:
 4004 0226 00000000 		.4byte	.LVL41
 4005 022a 82000000 		.4byte	.LVL42
 4006 022e 0100     		.2byte	0x1
 4007 0230 50       		.byte	0x50
 4008 0231 82000000 		.4byte	.LVL42
 4009 0235 AC010000 		.4byte	.LFE19
 4010 0239 0400     		.2byte	0x4
 4011 023b F3       		.byte	0xf3
 4012 023c 01       		.uleb128 0x1
 4013 023d 50       		.byte	0x50
 4014 023e 9F       		.byte	0x9f
 4015 023f 00000000 		.4byte	0
 4016 0243 00000000 		.4byte	0
 4017              	.LLST12:
 4018 0247 08000000 		.4byte	.LVL60
 4019 024b B2000000 		.4byte	.LVL64
 4020 024f 0100     		.2byte	0x1
 4021 0251 56       		.byte	0x56
 4022 0252 00000000 		.4byte	0
 4023 0256 00000000 		.4byte	0
 4024              	.LLST13:
 4025 025a 08000000 		.4byte	.LVL68
 4026 025e CE000000 		.4byte	.LVL71
 4027 0262 0100     		.2byte	0x1
 4028 0264 56       		.byte	0x56
 4029 0265 00000000 		.4byte	0
 4030 0269 00000000 		.4byte	0
 4031              	.LLST14:
 4032 026d 00000000 		.4byte	.LVL72
 4033 0271 0A000000 		.4byte	.LVL74
 4034 0275 0100     		.2byte	0x1
 4035 0277 50       		.byte	0x50
 4036 0278 0A000000 		.4byte	.LVL74
 4037 027c 18000000 		.4byte	.LFE4
 4038 0280 0400     		.2byte	0x4
 4039 0282 F3       		.byte	0xf3
 4040 0283 01       		.uleb128 0x1
 4041 0284 50       		.byte	0x50
 4042 0285 9F       		.byte	0x9f
 4043 0286 00000000 		.4byte	0
 4044 028a 00000000 		.4byte	0
 4045              	.LLST15:
 4046 028e 08000000 		.4byte	.LVL73
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 109


 4047 0292 10000000 		.4byte	.LVL75
 4048 0296 0100     		.2byte	0x1
 4049 0298 53       		.byte	0x53
 4050 0299 10000000 		.4byte	.LVL75
 4051 029d 18000000 		.4byte	.LFE4
 4052 02a1 0100     		.2byte	0x1
 4053 02a3 50       		.byte	0x50
 4054 02a4 00000000 		.4byte	0
 4055 02a8 00000000 		.4byte	0
 4056              	.LLST16:
 4057 02ac 00000000 		.4byte	.LVL76
 4058 02b0 0C000000 		.4byte	.LVL78
 4059 02b4 0100     		.2byte	0x1
 4060 02b6 50       		.byte	0x50
 4061 02b7 0C000000 		.4byte	.LVL78
 4062 02bb 18000000 		.4byte	.LFE5
 4063 02bf 0400     		.2byte	0x4
 4064 02c1 F3       		.byte	0xf3
 4065 02c2 01       		.uleb128 0x1
 4066 02c3 50       		.byte	0x50
 4067 02c4 9F       		.byte	0x9f
 4068 02c5 00000000 		.4byte	0
 4069 02c9 00000000 		.4byte	0
 4070              	.LLST17:
 4071 02cd 08000000 		.4byte	.LVL77
 4072 02d1 0E000000 		.4byte	.LVL79
 4073 02d5 0100     		.2byte	0x1
 4074 02d7 53       		.byte	0x53
 4075 02d8 0E000000 		.4byte	.LVL79
 4076 02dc 18000000 		.4byte	.LFE5
 4077 02e0 0100     		.2byte	0x1
 4078 02e2 50       		.byte	0x50
 4079 02e3 00000000 		.4byte	0
 4080 02e7 00000000 		.4byte	0
 4081              	.LLST18:
 4082 02eb 00000000 		.4byte	.LVL80
 4083 02ef 10000000 		.4byte	.LVL82
 4084 02f3 0100     		.2byte	0x1
 4085 02f5 50       		.byte	0x50
 4086 02f6 10000000 		.4byte	.LVL82
 4087 02fa 24000000 		.4byte	.LVL86
 4088 02fe 0100     		.2byte	0x1
 4089 0300 54       		.byte	0x54
 4090 0301 24000000 		.4byte	.LVL86
 4091 0305 74000000 		.4byte	.LFE6
 4092 0309 0600     		.2byte	0x6
 4093 030b F3       		.byte	0xf3
 4094 030c 03       		.uleb128 0x3
 4095 030d F5       		.byte	0xf5
 4096 030e 00       		.uleb128 0
 4097 030f 25       		.uleb128 0x25
 4098 0310 9F       		.byte	0x9f
 4099 0311 00000000 		.4byte	0
 4100 0315 00000000 		.4byte	0
 4101              	.LLST19:
 4102 0319 0A000000 		.4byte	.LVL81
 4103 031d 13000000 		.4byte	.LVL83-1
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 110


 4104 0321 0A00     		.2byte	0xa
 4105 0323 73       		.byte	0x73
 4106 0324 00       		.sleb128 0
 4107 0325 32       		.byte	0x32
 4108 0326 24       		.byte	0x24
 4109 0327 03       		.byte	0x3
 4110 0328 00000000 		.4byte	.LANCHOR0
 4111 032c 22       		.byte	0x22
 4112 032d 44000000 		.4byte	.LVL91
 4113 0331 56000000 		.4byte	.LVL93
 4114 0335 0100     		.2byte	0x1
 4115 0337 50       		.byte	0x50
 4116 0338 56000000 		.4byte	.LVL93
 4117 033c 58000000 		.4byte	.LVL94
 4118 0340 0700     		.2byte	0x7
 4119 0342 73       		.byte	0x73
 4120 0343 00       		.sleb128 0
 4121 0344 32       		.byte	0x32
 4122 0345 24       		.byte	0x24
 4123 0346 72       		.byte	0x72
 4124 0347 00       		.sleb128 0
 4125 0348 22       		.byte	0x22
 4126 0349 00000000 		.4byte	0
 4127 034d 00000000 		.4byte	0
 4128              	.LLST20:
 4129 0351 54000000 		.4byte	.LVL92
 4130 0355 58000000 		.4byte	.LVL94
 4131 0359 0200     		.2byte	0x2
 4132 035b 30       		.byte	0x30
 4133 035c 9F       		.byte	0x9f
 4134 035d 5A000000 		.4byte	.LVL95
 4135 0361 74000000 		.4byte	.LFE6
 4136 0365 0100     		.2byte	0x1
 4137 0367 50       		.byte	0x50
 4138 0368 00000000 		.4byte	0
 4139 036c 00000000 		.4byte	0
 4140              	.LLST21:
 4141 0370 1C000000 		.4byte	.LVL84
 4142 0374 21000000 		.4byte	.LVL85-1
 4143 0378 0100     		.2byte	0x1
 4144 037a 50       		.byte	0x50
 4145 037b 24000000 		.4byte	.LVL86
 4146 037f 27000000 		.4byte	.LVL87-1
 4147 0383 0100     		.2byte	0x1
 4148 0385 50       		.byte	0x50
 4149 0386 27000000 		.4byte	.LVL87-1
 4150 038a 3E000000 		.4byte	.LVL89
 4151 038e 0100     		.2byte	0x1
 4152 0390 54       		.byte	0x54
 4153 0391 3E000000 		.4byte	.LVL89
 4154 0395 41000000 		.4byte	.LVL90-1
 4155 0399 0100     		.2byte	0x1
 4156 039b 50       		.byte	0x50
 4157 039c 58000000 		.4byte	.LVL94
 4158 03a0 5C000000 		.4byte	.LVL96
 4159 03a4 0100     		.2byte	0x1
 4160 03a6 54       		.byte	0x54
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 111


 4161 03a7 00000000 		.4byte	0
 4162 03ab 00000000 		.4byte	0
 4163              	.LLST22:
 4164 03af 06000000 		.4byte	.LVL97
 4165 03b3 14000000 		.4byte	.LVL99
 4166 03b7 0100     		.2byte	0x1
 4167 03b9 53       		.byte	0x53
 4168 03ba 00000000 		.4byte	0
 4169 03be 00000000 		.4byte	0
 4170              	.LLST23:
 4171 03c2 0C000000 		.4byte	.LVL98
 4172 03c6 16000000 		.4byte	.LVL100
 4173 03ca 0100     		.2byte	0x1
 4174 03cc 50       		.byte	0x50
 4175 03cd 18000000 		.4byte	.LVL101
 4176 03d1 24000000 		.4byte	.LFE7
 4177 03d5 0100     		.2byte	0x1
 4178 03d7 50       		.byte	0x50
 4179 03d8 00000000 		.4byte	0
 4180 03dc 00000000 		.4byte	0
 4181              	.LLST24:
 4182 03e0 00000000 		.4byte	.LVL102
 4183 03e4 24000000 		.4byte	.LVL106
 4184 03e8 0100     		.2byte	0x1
 4185 03ea 50       		.byte	0x50
 4186 03eb 24000000 		.4byte	.LVL106
 4187 03ef 30000000 		.4byte	.LFE10
 4188 03f3 0400     		.2byte	0x4
 4189 03f5 F3       		.byte	0xf3
 4190 03f6 01       		.uleb128 0x1
 4191 03f7 50       		.byte	0x50
 4192 03f8 9F       		.byte	0x9f
 4193 03f9 00000000 		.4byte	0
 4194 03fd 00000000 		.4byte	0
 4195              	.LLST25:
 4196 0401 10000000 		.4byte	.LVL103
 4197 0405 12000000 		.4byte	.LVL104
 4198 0409 0100     		.2byte	0x1
 4199 040b 53       		.byte	0x53
 4200 040c 1A000000 		.4byte	.LVL105
 4201 0410 30000000 		.4byte	.LFE10
 4202 0414 0100     		.2byte	0x1
 4203 0416 53       		.byte	0x53
 4204 0417 00000000 		.4byte	0
 4205 041b 00000000 		.4byte	0
 4206              	.LLST26:
 4207 041f 08000000 		.4byte	.LVL107
 4208 0423 14000000 		.4byte	.LVL109
 4209 0427 0100     		.2byte	0x1
 4210 0429 53       		.byte	0x53
 4211 042a 18000000 		.4byte	.LVL110
 4212 042e 1E000000 		.4byte	.LVL111
 4213 0432 0100     		.2byte	0x1
 4214 0434 53       		.byte	0x53
 4215 0435 00000000 		.4byte	0
 4216 0439 00000000 		.4byte	0
 4217              	.LLST27:
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 112


 4218 043d 12000000 		.4byte	.LVL114
 4219 0441 14000000 		.4byte	.LVL115
 4220 0445 0100     		.2byte	0x1
 4221 0447 50       		.byte	0x50
 4222 0448 18000000 		.4byte	.LVL116
 4223 044c 20000000 		.4byte	.LVL117
 4224 0450 0100     		.2byte	0x1
 4225 0452 52       		.byte	0x52
 4226 0453 20000000 		.4byte	.LVL117
 4227 0457 50000000 		.4byte	.LFE12
 4228 045b 0100     		.2byte	0x1
 4229 045d 50       		.byte	0x50
 4230 045e 00000000 		.4byte	0
 4231 0462 00000000 		.4byte	0
 4232              	.LLST28:
 4233 0466 08000000 		.4byte	.LVL112
 4234 046a 0E000000 		.4byte	.LVL113
 4235 046e 0100     		.2byte	0x1
 4236 0470 53       		.byte	0x53
 4237 0471 14000000 		.4byte	.LVL115
 4238 0475 26000000 		.4byte	.LVL118
 4239 0479 0100     		.2byte	0x1
 4240 047b 53       		.byte	0x53
 4241 047c 00000000 		.4byte	0
 4242 0480 00000000 		.4byte	0
 4243              	.LLST29:
 4244 0484 10000000 		.4byte	.LVL121
 4245 0488 1A000000 		.4byte	.LVL122
 4246 048c 0700     		.2byte	0x7
 4247 048e 70       		.byte	0x70
 4248 048f 00       		.sleb128 0
 4249 0490 0A       		.byte	0xa
 4250 0491 FFFF     		.2byte	0xffff
 4251 0493 1A       		.byte	0x1a
 4252 0494 9F       		.byte	0x9f
 4253 0495 1A000000 		.4byte	.LVL122
 4254 0499 1C000000 		.4byte	.LVL123
 4255 049d 0100     		.2byte	0x1
 4256 049f 50       		.byte	0x50
 4257 04a0 24000000 		.4byte	.LVL125
 4258 04a4 2C000000 		.4byte	.LVL126
 4259 04a8 0700     		.2byte	0x7
 4260 04aa 70       		.byte	0x70
 4261 04ab 00       		.sleb128 0
 4262 04ac 0A       		.byte	0xa
 4263 04ad FFFF     		.2byte	0xffff
 4264 04af 1A       		.byte	0x1a
 4265 04b0 9F       		.byte	0x9f
 4266 04b1 2C000000 		.4byte	.LVL126
 4267 04b5 34000000 		.4byte	.LVL127
 4268 04b9 0100     		.2byte	0x1
 4269 04bb 53       		.byte	0x53
 4270 04bc 34000000 		.4byte	.LVL127
 4271 04c0 36000000 		.4byte	.LVL128
 4272 04c4 0100     		.2byte	0x1
 4273 04c6 50       		.byte	0x50
 4274 04c7 3C000000 		.4byte	.LVL130
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 113


 4275 04cb 44000000 		.4byte	.LVL131
 4276 04cf 0100     		.2byte	0x1
 4277 04d1 53       		.byte	0x53
 4278 04d2 44000000 		.4byte	.LVL131
 4279 04d6 6C000000 		.4byte	.LFE13
 4280 04da 0100     		.2byte	0x1
 4281 04dc 50       		.byte	0x50
 4282 04dd 00000000 		.4byte	0
 4283 04e1 00000000 		.4byte	0
 4284              	.LLST30:
 4285 04e5 08000000 		.4byte	.LVL119
 4286 04e9 0E000000 		.4byte	.LVL120
 4287 04ed 0100     		.2byte	0x1
 4288 04ef 53       		.byte	0x53
 4289 04f0 1C000000 		.4byte	.LVL123
 4290 04f4 22000000 		.4byte	.LVL124
 4291 04f8 0100     		.2byte	0x1
 4292 04fa 53       		.byte	0x53
 4293 04fb 36000000 		.4byte	.LVL128
 4294 04ff 38000000 		.4byte	.LVL129
 4295 0503 0100     		.2byte	0x1
 4296 0505 53       		.byte	0x53
 4297 0506 00000000 		.4byte	0
 4298 050a 00000000 		.4byte	0
 4299              	.LLST31:
 4300 050e 00000000 		.4byte	.LVL134
 4301 0512 06000000 		.4byte	.LVL135
 4302 0516 0100     		.2byte	0x1
 4303 0518 50       		.byte	0x50
 4304 0519 06000000 		.4byte	.LVL135
 4305 051d 0E000000 		.4byte	.LVL136
 4306 0521 0100     		.2byte	0x1
 4307 0523 50       		.byte	0x50
 4308 0524 00000000 		.4byte	0
 4309 0528 00000000 		.4byte	0
 4310              	.LLST32:
 4311 052c 00000000 		.4byte	.LVL138
 4312 0530 06000000 		.4byte	.LVL139
 4313 0534 0100     		.2byte	0x1
 4314 0536 50       		.byte	0x50
 4315 0537 06000000 		.4byte	.LVL139
 4316 053b 08000000 		.4byte	.LVL140
 4317 053f 0600     		.2byte	0x6
 4318 0541 70       		.byte	0x70
 4319 0542 00       		.sleb128 0
 4320 0543 73       		.byte	0x73
 4321 0544 00       		.sleb128 0
 4322 0545 1C       		.byte	0x1c
 4323 0546 9F       		.byte	0x9f
 4324 0547 08000000 		.4byte	.LVL140
 4325 054b 0B000000 		.4byte	.LVL141-1
 4326 054f 0100     		.2byte	0x1
 4327 0551 50       		.byte	0x50
 4328 0552 00000000 		.4byte	0
 4329 0556 00000000 		.4byte	0
 4330              	.LLST33:
 4331 055a 00000000 		.4byte	.LVL144
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 114


 4332 055e 50000000 		.4byte	.LVL151
 4333 0562 0100     		.2byte	0x1
 4334 0564 50       		.byte	0x50
 4335 0565 50000000 		.4byte	.LVL151
 4336 0569 78000000 		.4byte	.LFE18
 4337 056d 0400     		.2byte	0x4
 4338 056f F3       		.byte	0xf3
 4339 0570 01       		.uleb128 0x1
 4340 0571 50       		.byte	0x50
 4341 0572 9F       		.byte	0x9f
 4342 0573 00000000 		.4byte	0
 4343 0577 00000000 		.4byte	0
 4344              	.LLST34:
 4345 057b 60000000 		.4byte	.LVL152
 4346 057f 62000000 		.4byte	.LVL153
 4347 0583 0600     		.2byte	0x6
 4348 0585 73       		.byte	0x73
 4349 0586 00       		.sleb128 0
 4350 0587 70       		.byte	0x70
 4351 0588 00       		.sleb128 0
 4352 0589 1C       		.byte	0x1c
 4353 058a 9F       		.byte	0x9f
 4354 058b 62000000 		.4byte	.LVL153
 4355 058f 78000000 		.4byte	.LFE18
 4356 0593 0100     		.2byte	0x1
 4357 0595 50       		.byte	0x50
 4358 0596 00000000 		.4byte	0
 4359 059a 00000000 		.4byte	0
 4360              	.LLST35:
 4361 059e 36000000 		.4byte	.LVL146
 4362 05a2 3C000000 		.4byte	.LVL147
 4363 05a6 0600     		.2byte	0x6
 4364 05a8 0C       		.byte	0xc
 4365 05a9 40420F00 		.4byte	0xf4240
 4366 05ad 9F       		.byte	0x9f
 4367 05ae 44000000 		.4byte	.LVL148
 4368 05b2 64000000 		.4byte	.LVL154
 4369 05b6 0100     		.2byte	0x1
 4370 05b8 54       		.byte	0x54
 4371 05b9 00000000 		.4byte	0
 4372 05bd 00000000 		.4byte	0
 4373              	.LLST36:
 4374 05c1 36000000 		.4byte	.LVL146
 4375 05c5 3C000000 		.4byte	.LVL147
 4376 05c9 0200     		.2byte	0x2
 4377 05cb 31       		.byte	0x31
 4378 05cc 9F       		.byte	0x9f
 4379 05cd 44000000 		.4byte	.LVL148
 4380 05d1 78000000 		.4byte	.LFE18
 4381 05d5 0100     		.2byte	0x1
 4382 05d7 51       		.byte	0x51
 4383 05d8 00000000 		.4byte	0
 4384 05dc 00000000 		.4byte	0
 4385              	.LLST37:
 4386 05e0 24000000 		.4byte	.LVL145
 4387 05e4 46000000 		.4byte	.LVL149
 4388 05e8 0100     		.2byte	0x1
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 115


 4389 05ea 53       		.byte	0x53
 4390 05eb 00000000 		.4byte	0
 4391 05ef 00000000 		.4byte	0
 4392              	.LLST38:
 4393 05f3 00000000 		.4byte	.LVL155
 4394 05f7 21000000 		.4byte	.LVL156-1
 4395 05fb 0100     		.2byte	0x1
 4396 05fd 50       		.byte	0x50
 4397 05fe 21000000 		.4byte	.LVL156-1
 4398 0602 4C000000 		.4byte	.LVL160
 4399 0606 0400     		.2byte	0x4
 4400 0608 F3       		.byte	0xf3
 4401 0609 01       		.uleb128 0x1
 4402 060a 50       		.byte	0x50
 4403 060b 9F       		.byte	0x9f
 4404 060c 4C000000 		.4byte	.LVL160
 4405 0610 4E000000 		.4byte	.LVL161
 4406 0614 0100     		.2byte	0x1
 4407 0616 50       		.byte	0x50
 4408 0617 4E000000 		.4byte	.LVL161
 4409 061b 64000000 		.4byte	.LFE20
 4410 061f 0400     		.2byte	0x4
 4411 0621 F3       		.byte	0xf3
 4412 0622 01       		.uleb128 0x1
 4413 0623 50       		.byte	0x50
 4414 0624 9F       		.byte	0x9f
 4415 0625 00000000 		.4byte	0
 4416 0629 00000000 		.4byte	0
 4417              	.LLST39:
 4418 062d 00000000 		.4byte	.LVL155
 4419 0631 21000000 		.4byte	.LVL156-1
 4420 0635 0100     		.2byte	0x1
 4421 0637 51       		.byte	0x51
 4422 0638 21000000 		.4byte	.LVL156-1
 4423 063c 4C000000 		.4byte	.LVL160
 4424 0640 0400     		.2byte	0x4
 4425 0642 F3       		.byte	0xf3
 4426 0643 01       		.uleb128 0x1
 4427 0644 51       		.byte	0x51
 4428 0645 9F       		.byte	0x9f
 4429 0646 4C000000 		.4byte	.LVL160
 4430 064a 51000000 		.4byte	.LVL162-1
 4431 064e 0100     		.2byte	0x1
 4432 0650 51       		.byte	0x51
 4433 0651 51000000 		.4byte	.LVL162-1
 4434 0655 64000000 		.4byte	.LFE20
 4435 0659 0400     		.2byte	0x4
 4436 065b F3       		.byte	0xf3
 4437 065c 01       		.uleb128 0x1
 4438 065d 51       		.byte	0x51
 4439 065e 9F       		.byte	0x9f
 4440 065f 00000000 		.4byte	0
 4441 0663 00000000 		.4byte	0
 4442              	.LLST40:
 4443 0667 1C000000 		.4byte	.LVL166
 4444 066b 24000000 		.4byte	.LVL168
 4445 066f 0100     		.2byte	0x1
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 116


 4446 0671 54       		.byte	0x54
 4447 0672 00000000 		.4byte	0
 4448 0676 00000000 		.4byte	0
 4449              	.LLST41:
 4450 067a 1C000000 		.4byte	.LVL172
 4451 067e 24000000 		.4byte	.LVL174
 4452 0682 0100     		.2byte	0x1
 4453 0684 54       		.byte	0x54
 4454 0685 00000000 		.4byte	0
 4455 0689 00000000 		.4byte	0
 4456              	.LLST42:
 4457 068d 1C000000 		.4byte	.LVL178
 4458 0691 1F000000 		.4byte	.LVL179-1
 4459 0695 0100     		.2byte	0x1
 4460 0697 50       		.byte	0x50
 4461 0698 1F000000 		.4byte	.LVL179-1
 4462 069c 24000000 		.4byte	.LVL180
 4463 06a0 0100     		.2byte	0x1
 4464 06a2 54       		.byte	0x54
 4465 06a3 24000000 		.4byte	.LVL180
 4466 06a7 28000000 		.4byte	.LFE25
 4467 06ab 0100     		.2byte	0x1
 4468 06ad 50       		.byte	0x50
 4469 06ae 00000000 		.4byte	0
 4470 06b2 00000000 		.4byte	0
 4471              		.section	.debug_aranges,"",%progbits
 4472 0000 E4000000 		.4byte	0xe4
 4473 0004 0200     		.2byte	0x2
 4474 0006 00000000 		.4byte	.Ldebug_info0
 4475 000a 04       		.byte	0x4
 4476 000b 00       		.byte	0
 4477 000c 0000     		.2byte	0
 4478 000e 0000     		.2byte	0
 4479 0010 00000000 		.4byte	.LFB21
 4480 0014 E0000000 		.4byte	.LFE21-.LFB21
 4481 0018 00000000 		.4byte	.LFB22
 4482 001c 4C000000 		.4byte	.LFE22-.LFB22
 4483 0020 00000000 		.4byte	.LFB19
 4484 0024 AC010000 		.4byte	.LFE19-.LFB19
 4485 0028 00000000 		.4byte	.LFB0
 4486 002c D8000000 		.4byte	.LFE0-.LFB0
 4487 0030 00000000 		.4byte	.LFB1
 4488 0034 D8000000 		.4byte	.LFE1-.LFB1
 4489 0038 00000000 		.4byte	.LFB2
 4490 003c 28000000 		.4byte	.LFE2-.LFB2
 4491 0040 00000000 		.4byte	.LFB3
 4492 0044 E4000000 		.4byte	.LFE3-.LFB3
 4493 0048 00000000 		.4byte	.LFB4
 4494 004c 18000000 		.4byte	.LFE4-.LFB4
 4495 0050 00000000 		.4byte	.LFB5
 4496 0054 18000000 		.4byte	.LFE5-.LFB5
 4497 0058 00000000 		.4byte	.LFB6
 4498 005c 74000000 		.4byte	.LFE6-.LFB6
 4499 0060 00000000 		.4byte	.LFB7
 4500 0064 24000000 		.4byte	.LFE7-.LFB7
 4501 0068 00000000 		.4byte	.LFB8
 4502 006c 10000000 		.4byte	.LFE8-.LFB8
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 117


 4503 0070 00000000 		.4byte	.LFB9
 4504 0074 10000000 		.4byte	.LFE9-.LFB9
 4505 0078 00000000 		.4byte	.LFB10
 4506 007c 30000000 		.4byte	.LFE10-.LFB10
 4507 0080 00000000 		.4byte	.LFB11
 4508 0084 48000000 		.4byte	.LFE11-.LFB11
 4509 0088 00000000 		.4byte	.LFB12
 4510 008c 50000000 		.4byte	.LFE12-.LFB12
 4511 0090 00000000 		.4byte	.LFB13
 4512 0094 6C000000 		.4byte	.LFE13-.LFB13
 4513 0098 00000000 		.4byte	.LFB14
 4514 009c 0C000000 		.4byte	.LFE14-.LFB14
 4515 00a0 00000000 		.4byte	.LFB15
 4516 00a4 0C000000 		.4byte	.LFE15-.LFB15
 4517 00a8 00000000 		.4byte	.LFB16
 4518 00ac 24000000 		.4byte	.LFE16-.LFB16
 4519 00b0 00000000 		.4byte	.LFB17
 4520 00b4 28000000 		.4byte	.LFE17-.LFB17
 4521 00b8 00000000 		.4byte	.LFB18
 4522 00bc 78000000 		.4byte	.LFE18-.LFB18
 4523 00c0 00000000 		.4byte	.LFB20
 4524 00c4 64000000 		.4byte	.LFE20-.LFB20
 4525 00c8 00000000 		.4byte	.LFB23
 4526 00cc 28000000 		.4byte	.LFE23-.LFB23
 4527 00d0 00000000 		.4byte	.LFB24
 4528 00d4 28000000 		.4byte	.LFE24-.LFB24
 4529 00d8 00000000 		.4byte	.LFB25
 4530 00dc 28000000 		.4byte	.LFE25-.LFB25
 4531 00e0 00000000 		.4byte	0
 4532 00e4 00000000 		.4byte	0
 4533              		.section	.debug_ranges,"",%progbits
 4534              	.Ldebug_ranges0:
 4535 0000 00000000 		.4byte	.LFB21
 4536 0004 E0000000 		.4byte	.LFE21
 4537 0008 00000000 		.4byte	.LFB22
 4538 000c 4C000000 		.4byte	.LFE22
 4539 0010 00000000 		.4byte	.LFB19
 4540 0014 AC010000 		.4byte	.LFE19
 4541 0018 00000000 		.4byte	.LFB0
 4542 001c D8000000 		.4byte	.LFE0
 4543 0020 00000000 		.4byte	.LFB1
 4544 0024 D8000000 		.4byte	.LFE1
 4545 0028 00000000 		.4byte	.LFB2
 4546 002c 28000000 		.4byte	.LFE2
 4547 0030 00000000 		.4byte	.LFB3
 4548 0034 E4000000 		.4byte	.LFE3
 4549 0038 00000000 		.4byte	.LFB4
 4550 003c 18000000 		.4byte	.LFE4
 4551 0040 00000000 		.4byte	.LFB5
 4552 0044 18000000 		.4byte	.LFE5
 4553 0048 00000000 		.4byte	.LFB6
 4554 004c 74000000 		.4byte	.LFE6
 4555 0050 00000000 		.4byte	.LFB7
 4556 0054 24000000 		.4byte	.LFE7
 4557 0058 00000000 		.4byte	.LFB8
 4558 005c 10000000 		.4byte	.LFE8
 4559 0060 00000000 		.4byte	.LFB9
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 118


 4560 0064 10000000 		.4byte	.LFE9
 4561 0068 00000000 		.4byte	.LFB10
 4562 006c 30000000 		.4byte	.LFE10
 4563 0070 00000000 		.4byte	.LFB11
 4564 0074 48000000 		.4byte	.LFE11
 4565 0078 00000000 		.4byte	.LFB12
 4566 007c 50000000 		.4byte	.LFE12
 4567 0080 00000000 		.4byte	.LFB13
 4568 0084 6C000000 		.4byte	.LFE13
 4569 0088 00000000 		.4byte	.LFB14
 4570 008c 0C000000 		.4byte	.LFE14
 4571 0090 00000000 		.4byte	.LFB15
 4572 0094 0C000000 		.4byte	.LFE15
 4573 0098 00000000 		.4byte	.LFB16
 4574 009c 24000000 		.4byte	.LFE16
 4575 00a0 00000000 		.4byte	.LFB17
 4576 00a4 28000000 		.4byte	.LFE17
 4577 00a8 00000000 		.4byte	.LFB18
 4578 00ac 78000000 		.4byte	.LFE18
 4579 00b0 00000000 		.4byte	.LFB20
 4580 00b4 64000000 		.4byte	.LFE20
 4581 00b8 00000000 		.4byte	.LFB23
 4582 00bc 28000000 		.4byte	.LFE23
 4583 00c0 00000000 		.4byte	.LFB24
 4584 00c4 28000000 		.4byte	.LFE24
 4585 00c8 00000000 		.4byte	.LFB25
 4586 00cc 28000000 		.4byte	.LFE25
 4587 00d0 00000000 		.4byte	0
 4588 00d4 00000000 		.4byte	0
 4589              		.section	.debug_line,"",%progbits
 4590              	.Ldebug_line0:
 4591 0000 86030000 		.section	.debug_str,"MS",%progbits,1
 4591      02008700 
 4591      00000201 
 4591      FB0E0D00 
 4591      01010101 
 4592              	.LASF11:
 4593 0000 75696E74 		.ascii	"uint16\000"
 4593      313600
 4594              	.LASF67:
 4595 0007 61646347 		.ascii	"adcGain\000"
 4595      61696E00 
 4596              	.LASF93:
 4597 000f 43794578 		.ascii	"CyExitCriticalSection\000"
 4597      69744372 
 4597      69746963 
 4597      616C5365 
 4597      6374696F 
 4598              	.LASF27:
 4599 0025 696E7075 		.ascii	"inputRange\000"
 4599      7452616E 
 4599      676500
 4600              	.LASF71:
 4601 0030 4144435F 		.ascii	"ADC_CountsTo_Volts\000"
 4601      436F756E 
 4601      7473546F 
 4601      5F566F6C 
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 119


 4601      747300
 4602              	.LASF85:
 4603 0043 4144435F 		.ascii	"ADC_stopConversion\000"
 4603      73746F70 
 4603      436F6E76 
 4603      65727369 
 4603      6F6E00
 4604              	.LASF86:
 4605 0056 4144435F 		.ascii	"ADC_started\000"
 4605      73746172 
 4605      74656400 
 4606              	.LASF80:
 4607 0062 4144435F 		.ascii	"ADC_Read16\000"
 4607      52656164 
 4607      313600
 4608              	.LASF24:
 4609 006d 67636F72 		.ascii	"gcor\000"
 4609      00
 4610              	.LASF41:
 4611 0072 4144435F 		.ascii	"ADC_Init\000"
 4611      496E6974 
 4611      00
 4612              	.LASF8:
 4613 007b 6C6F6E67 		.ascii	"long long unsigned int\000"
 4613      206C6F6E 
 4613      6720756E 
 4613      7369676E 
 4613      65642069 
 4614              	.LASF102:
 4615 0092 47656E65 		.ascii	"Generated_Source\\PSoC5\\ADC.c\000"
 4615      72617465 
 4615      645F536F 
 4615      75726365 
 4615      5C50536F 
 4616              	.LASF87:
 4617 00af 4144435F 		.ascii	"ADC_Config\000"
 4617      436F6E66 
 4617      696700
 4618              	.LASF56:
 4619 00ba 4144435F 		.ascii	"ADC_StartConvert\000"
 4619      53746172 
 4619      74436F6E 
 4619      76657274 
 4619      00
 4620              	.LASF29:
 4621 00cb 69646561 		.ascii	"idealOddDecGain\000"
 4621      6C4F6464 
 4621      44656347 
 4621      61696E00 
 4622              	.LASF7:
 4623 00db 6C6F6E67 		.ascii	"long long int\000"
 4623      206C6F6E 
 4623      6720696E 
 4623      7400
 4624              	.LASF1:
 4625 00e9 7369676E 		.ascii	"signed char\000"
 4625      65642063 
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 120


 4625      68617200 
 4626              	.LASF51:
 4627 00f5 73746174 		.ascii	"status\000"
 4627      757300
 4628              	.LASF45:
 4629 00fc 4144435F 		.ascii	"ADC_SetBufferGain\000"
 4629      53657442 
 4629      75666665 
 4629      72476169 
 4629      6E00
 4630              	.LASF15:
 4631 010e 696E7433 		.ascii	"int32\000"
 4631      3200
 4632              	.LASF43:
 4633 0114 4144435F 		.ascii	"ADC_Start\000"
 4633      53746172 
 4633      7400
 4634              	.LASF84:
 4635 011e 4144435F 		.ascii	"ADC_convDone\000"
 4635      636F6E76 
 4635      446F6E65 
 4635      00
 4636              	.LASF5:
 4637 012b 6C6F6E67 		.ascii	"long int\000"
 4637      20696E74 
 4637      00
 4638              	.LASF73:
 4639 0134 4144435F 		.ascii	"ADC_CountsTo_uVolts\000"
 4639      436F756E 
 4639      7473546F 
 4639      5F75566F 
 4639      6C747300 
 4640              	.LASF20:
 4641 0148 72656731 		.ascii	"reg16\000"
 4641      3600
 4642              	.LASF10:
 4643 014e 75696E74 		.ascii	"uint8\000"
 4643      3800
 4644              	.LASF92:
 4645 0154 43794465 		.ascii	"CyDelayUs\000"
 4645      6C617955 
 4645      7300
 4646              	.LASF17:
 4647 015e 646F7562 		.ascii	"double\000"
 4647      6C6500
 4648              	.LASF63:
 4649 0165 4144435F 		.ascii	"ADC_GetResult32\000"
 4649      47657452 
 4649      6573756C 
 4649      74333200 
 4650              	.LASF72:
 4651 0175 566F6C74 		.ascii	"Volts\000"
 4651      7300
 4652              	.LASF12:
 4653 017b 75696E74 		.ascii	"uint32\000"
 4653      333200
 4654              	.LASF97:
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 121


 4655 0182 4379496E 		.ascii	"CyIntSetVector\000"
 4655      74536574 
 4655      56656374 
 4655      6F7200
 4656              	.LASF83:
 4657 0191 4144435F 		.ascii	"ADC_initVar\000"
 4657      696E6974 
 4657      56617200 
 4658              	.LASF37:
 4659 019d 4144435F 		.ascii	"ADC_SetDSMRef0Reg\000"
 4659      53657444 
 4659      534D5265 
 4659      66305265 
 4659      6700
 4660              	.LASF38:
 4661 01af 76616C75 		.ascii	"value\000"
 4661      6500
 4662              	.LASF59:
 4663 01b5 7265744D 		.ascii	"retMode\000"
 4663      6F646500 
 4664              	.LASF96:
 4665 01bd 4144435F 		.ascii	"ADC_theACLK_SetDividerRegister\000"
 4665      74686541 
 4665      434C4B5F 
 4665      53657444 
 4665      69766964 
 4666              	.LASF9:
 4667 01dc 756E7369 		.ascii	"unsigned int\000"
 4667      676E6564 
 4667      20696E74 
 4667      00
 4668              	.LASF74:
 4669 01e9 75566F6C 		.ascii	"uVolts\000"
 4669      747300
 4670              	.LASF6:
 4671 01f0 6C6F6E67 		.ascii	"long unsigned int\000"
 4671      20756E73 
 4671      69676E65 
 4671      6420696E 
 4671      7400
 4672              	.LASF91:
 4673 0202 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4673      74657243 
 4673      72697469 
 4673      63616C53 
 4673      65637469 
 4674              	.LASF26:
 4675 0219 4144435F 		.ascii	"ADC_GCOR_STRUCT\000"
 4675      47434F52 
 4675      5F535452 
 4675      55435400 
 4676              	.LASF4:
 4677 0229 73686F72 		.ascii	"short unsigned int\000"
 4677      7420756E 
 4677      7369676E 
 4677      65642069 
 4677      6E7400
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 122


 4678              	.LASF13:
 4679 023c 696E7438 		.ascii	"int8\000"
 4679      00
 4680              	.LASF57:
 4681 0241 4144435F 		.ascii	"ADC_StopConvert\000"
 4681      53746F70 
 4681      436F6E76 
 4681      65727400 
 4682              	.LASF34:
 4683 0251 67636F72 		.ascii	"gcorValue\000"
 4683      56616C75 
 4683      6500
 4684              	.LASF36:
 4685 025b 4144435F 		.ascii	"ADC_GainCompensation\000"
 4685      4761696E 
 4685      436F6D70 
 4685      656E7361 
 4685      74696F6E 
 4686              	.LASF32:
 4687 0270 666C6173 		.ascii	"flash\000"
 4687      6800
 4688              	.LASF21:
 4689 0276 72656733 		.ascii	"reg32\000"
 4689      3200
 4690              	.LASF16:
 4691 027c 666C6F61 		.ascii	"float32\000"
 4691      74333200 
 4692              	.LASF23:
 4693 0284 73697A65 		.ascii	"sizetype\000"
 4693      74797065 
 4693      00
 4694              	.LASF22:
 4695 028d 6C6F6E67 		.ascii	"long double\000"
 4695      20646F75 
 4695      626C6500 
 4696              	.LASF53:
 4697 0299 4144435F 		.ascii	"ADC_SetGCOR\000"
 4697      53657447 
 4697      434F5200 
 4698              	.LASF58:
 4699 02a5 4144435F 		.ascii	"ADC_IsEndConversion\000"
 4699      4973456E 
 4699      64436F6E 
 4699      76657273 
 4699      696F6E00 
 4700              	.LASF82:
 4701 02b9 4144435F 		.ascii	"ADC_gcor\000"
 4701      67636F72 
 4701      00
 4702              	.LASF40:
 4703 02c2 4144435F 		.ascii	"ADC_InitConfig\000"
 4703      496E6974 
 4703      436F6E66 
 4703      696700
 4704              	.LASF60:
 4705 02d1 4144435F 		.ascii	"ADC_GetResult8\000"
 4705      47657452 
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 123


 4705      6573756C 
 4705      743800
 4706              	.LASF99:
 4707 02e0 4144435F 		.ascii	"ADC_theACLK_SetModeRegister\000"
 4707      74686541 
 4707      434C4B5F 
 4707      5365744D 
 4707      6F646552 
 4708              	.LASF49:
 4709 02fc 636F6865 		.ascii	"coherency\000"
 4709      72656E63 
 4709      7900
 4710              	.LASF100:
 4711 0306 4379496E 		.ascii	"CyIntSetPriority\000"
 4711      74536574 
 4711      5072696F 
 4711      72697479 
 4711      00
 4712              	.LASF46:
 4713 0317 6761696E 		.ascii	"gain\000"
 4713      00
 4714              	.LASF103:
 4715 031c 583A5C70 		.ascii	"X:\\projects\\PVCC-Air-Handlers\\AHU_2.cydsn\000"
 4715      726F6A65 
 4715      6374735C 
 4715      50564343 
 4715      2D416972 
 4716              	.LASF66:
 4717 0346 4144435F 		.ascii	"ADC_SetGain\000"
 4717      53657447 
 4717      61696E00 
 4718              	.LASF0:
 4719 0352 666C6F61 		.ascii	"float\000"
 4719      7400
 4720              	.LASF68:
 4721 0358 4144435F 		.ascii	"ADC_CountsTo_mVolts\000"
 4721      436F756E 
 4721      7473546F 
 4721      5F6D566F 
 4721      6C747300 
 4722              	.LASF19:
 4723 036c 72656738 		.ascii	"reg8\000"
 4723      00
 4724              	.LASF28:
 4725 0371 69646561 		.ascii	"idealDecGain\000"
 4725      6C446563 
 4725      4761696E 
 4725      00
 4726              	.LASF33:
 4727 037e 6E6F726D 		.ascii	"normalised\000"
 4727      616C6973 
 4727      656400
 4728              	.LASF90:
 4729 0389 43794861 		.ascii	"CyHalt\000"
 4729      6C7400
 4730              	.LASF2:
 4731 0390 756E7369 		.ascii	"unsigned char\000"
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 124


 4731      676E6564 
 4731      20636861 
 4731      7200
 4732              	.LASF77:
 4733 039e 4144435F 		.ascii	"ADC_SelectConfiguration\000"
 4733      53656C65 
 4733      6374436F 
 4733      6E666967 
 4733      75726174 
 4734              	.LASF3:
 4735 03b6 73686F72 		.ascii	"short int\000"
 4735      7420696E 
 4735      7400
 4736              	.LASF44:
 4737 03c0 4144435F 		.ascii	"ADC_Stop\000"
 4737      53746F70 
 4737      00
 4738              	.LASF35:
 4739 03c9 67636F72 		.ascii	"gcorTmp\000"
 4739      546D7000 
 4740              	.LASF98:
 4741 03d1 4144435F 		.ascii	"ADC_Ext_CP_Clk_SetModeRegister\000"
 4741      4578745F 
 4741      43505F43 
 4741      6C6B5F53 
 4741      65744D6F 
 4742              	.LASF70:
 4743 03f0 6D566F6C 		.ascii	"mVolts\000"
 4743      747300
 4744              	.LASF101:
 4745 03f7 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4745      43313120 
 4745      352E342E 
 4745      31203230 
 4745      31363036 
 4746 042a 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4746      20726576 
 4746      6973696F 
 4746      6E203233 
 4746      37373135 
 4747 045d 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 4747      66756E63 
 4747      74696F6E 
 4747      2D736563 
 4747      74696F6E 
 4748              	.LASF94:
 4749 0485 4144435F 		.ascii	"ADC_AMux_Select\000"
 4749      414D7578 
 4749      5F53656C 
 4749      65637400 
 4750              	.LASF30:
 4751 0495 7265736F 		.ascii	"resolution\000"
 4751      6C757469 
 4751      6F6E00
 4752              	.LASF88:
 4753 04a0 4144435F 		.ascii	"ADC_Offset\000"
 4753      4F666673 
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 125


 4753      657400
 4754              	.LASF75:
 4755 04ab 636F6566 		.ascii	"coefA\000"
 4755      4100
 4756              	.LASF76:
 4757 04b1 636F6566 		.ascii	"coefB\000"
 4757      4200
 4758              	.LASF95:
 4759 04b7 4144435F 		.ascii	"ADC_Ext_CP_Clk_SetDividerRegister\000"
 4759      4578745F 
 4759      43505F43 
 4759      6C6B5F53 
 4759      65744469 
 4760              	.LASF18:
 4761 04d9 63686172 		.ascii	"char\000"
 4761      00
 4762              	.LASF55:
 4763 04de 6756616C 		.ascii	"gValue\000"
 4763      756500
 4764              	.LASF31:
 4765 04e5 636F6E66 		.ascii	"config\000"
 4765      696700
 4766              	.LASF25:
 4767 04ec 6776616C 		.ascii	"gval\000"
 4767      00
 4768              	.LASF78:
 4769 04f1 72657374 		.ascii	"restart\000"
 4769      61727400 
 4770              	.LASF52:
 4771 04f9 746D7056 		.ascii	"tmpValue\000"
 4771      616C7565 
 4771      00
 4772              	.LASF65:
 4773 0502 6F666673 		.ascii	"offset\000"
 4773      657400
 4774              	.LASF48:
 4775 0509 4144435F 		.ascii	"ADC_SetCoherency\000"
 4775      53657443 
 4775      6F686572 
 4775      656E6379 
 4775      00
 4776              	.LASF79:
 4777 051a 4144435F 		.ascii	"ADC_Read8\000"
 4777      52656164 
 4777      3800
 4778              	.LASF69:
 4779 0524 61646343 		.ascii	"adcCounts\000"
 4779      6F756E74 
 4779      7300
 4780              	.LASF81:
 4781 052e 4144435F 		.ascii	"ADC_Read32\000"
 4781      52656164 
 4781      333200
 4782              	.LASF39:
 4783 0539 656E6162 		.ascii	"enableInterrupts\000"
 4783      6C65496E 
 4783      74657272 
ARM GAS  C:\Users\scott\AppData\Local\Temp\ccdSkMrz.s 			page 126


 4783      75707473 
 4783      00
 4784              	.LASF42:
 4785 054a 4144435F 		.ascii	"ADC_Enable\000"
 4785      456E6162 
 4785      6C6500
 4786              	.LASF54:
 4787 0555 4144435F 		.ascii	"ADC_ReadGCOR\000"
 4787      52656164 
 4787      47434F52 
 4787      00
 4788              	.LASF50:
 4789 0562 6761696E 		.ascii	"gainAdjust\000"
 4789      41646A75 
 4789      737400
 4790              	.LASF14:
 4791 056d 696E7431 		.ascii	"int16\000"
 4791      3600
 4792              	.LASF64:
 4793 0573 4144435F 		.ascii	"ADC_SetOffset\000"
 4793      5365744F 
 4793      66667365 
 4793      7400
 4794              	.LASF89:
 4795 0581 4144435F 		.ascii	"ADC_CountsPerVolt\000"
 4795      436F756E 
 4795      74735065 
 4795      72566F6C 
 4795      7400
 4796              	.LASF47:
 4797 0593 746D7052 		.ascii	"tmpReg\000"
 4797      656700
 4798              	.LASF61:
 4799 059a 72657375 		.ascii	"result\000"
 4799      6C7400
 4800              	.LASF62:
 4801 05a1 4144435F 		.ascii	"ADC_GetResult16\000"
 4801      47657452 
 4801      6573756C 
 4801      74313600 
 4802              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
